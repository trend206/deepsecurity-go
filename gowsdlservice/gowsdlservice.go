// Several changes have been made to this file from the auto generated gowsdl.
// Unfortunately several auto generated methods and structs do not map correctly to wsdl definition.
// You will need to use this .go file.

// conflicts seem to occur around date/times conversion and transport object XMLnamspacing
package gowsdlservice

import (
	"bytes"
	"crypto/tls"
	"encoding/xml"
	"io/ioutil"
	"log"
	"math/rand"
	"net"
	"net/http"
	"time"
	"fmt"
)

// against "unused imports"
var _ time.Time
var _ xml.Name

type EnumHostDetailLevel string

const (
	EnumHostDetailLevelLOW EnumHostDetailLevel = "LOW"

	EnumHostDetailLevelMEDIUM EnumHostDetailLevel = "MEDIUM"

	EnumHostDetailLevelHIGH EnumHostDetailLevel = "HIGH"
)

type EnumHostType string

const (
	EnumHostTypeSTANDARD EnumHostType = "STANDARD"

	EnumHostTypeESX EnumHostType = "ESX"

	EnumHostTypeAPPLIANCE EnumHostType = "APPLIANCE"

	EnumHostTypeVM EnumHostType = "VM"
)

type EnumCloudObjectType string

const (
	EnumCloudObjectTypeAMAZON_VM EnumCloudObjectType = "AMAZON_VM"

	EnumCloudObjectTypeVCLOUD_VM EnumCloudObjectType = "VCLOUD_VM"
)

type EnumHostLight string

const (
	EnumHostLightGREEN EnumHostLight = "GREEN"

	EnumHostLightYELLOW EnumHostLight = "YELLOW"

	EnumHostLightRED EnumHostLight = "RED"

	EnumHostLightGREY EnumHostLight = "GREY"
)

type EnumTimeFilterType string

const (
	EnumTimeFilterTypeLAST_HOUR EnumTimeFilterType = "LAST_HOUR"

	EnumTimeFilterTypeLAST_24_HOURS EnumTimeFilterType = "LAST_24_HOURS"

	EnumTimeFilterTypeLAST_7_DAYS EnumTimeFilterType = "LAST_7_DAYS"

	EnumTimeFilterTypeCUSTOM_RANGE EnumTimeFilterType = "CUSTOM_RANGE"

	EnumTimeFilterTypeSPECIFIC_TIME EnumTimeFilterType = "SPECIFIC_TIME"

	EnumTimeFilterTypePREVIOUS_MONTH EnumTimeFilterType = "PREVIOUS_MONTH"
)

type EnumHostFilterType string

const (
	EnumHostFilterTypeALL_HOSTS EnumHostFilterType = "ALL_HOSTS"

	EnumHostFilterTypeHOSTS_IN_GROUP EnumHostFilterType = "HOSTS_IN_GROUP"

	EnumHostFilterTypeHOSTS_USING_SECURITY_PROFILE EnumHostFilterType = "HOSTS_USING_SECURITY_PROFILE"

	EnumHostFilterTypeHOSTS_IN_GROUP_AND_ALL_SUBGROUPS EnumHostFilterType = "HOSTS_IN_GROUP_AND_ALL_SUBGROUPS"

	EnumHostFilterTypeSPECIFIC_HOST EnumHostFilterType = "SPECIFIC_HOST"

	EnumHostFilterTypeMY_HOSTS EnumHostFilterType = "MY_HOSTS"
)

type EnumOperator string

const (
	EnumOperatorGREATER_THAN EnumOperator = "GREATER_THAN"

	EnumOperatorLESS_THAN EnumOperator = "LESS_THAN"

	EnumOperatorEQUAL EnumOperator = "EQUAL"
)

type EnumEventOrigin string

const (
	EnumEventOriginUNKNOWN EnumEventOrigin = "UNKNOWN"

	EnumEventOriginAGENT EnumEventOrigin = "AGENT"

	EnumEventOriginGUESTAGENT EnumEventOrigin = "GUESTAGENT"

	EnumEventOriginAPPLIANCEAGENT EnumEventOrigin = "APPLIANCEAGENT"

	EnumEventOriginMANAGER EnumEventOrigin = "MANAGER"
)

type EnumPortType string

const (
	EnumPortTypeANY EnumPortType = "ANY"

	EnumPortTypePORTS EnumPortType = "PORTS"

	EnumPortTypeDEFINED_LIST EnumPortType = "DEFINED_LIST"
)

type EnumEditableSettingKey string

const (
	EnumEditableSettingKeyCONFIGURATION_ADVANCEDACCESSSCHEDULE EnumEditableSettingKey = "CONFIGURATION_ADVANCEDACCESSSCHEDULE"

	EnumEditableSettingKeyCONFIGURATION_ADVANCEDAUTOUPDATE EnumEditableSettingKey = "CONFIGURATION_ADVANCEDAUTOUPDATE"

	EnumEditableSettingKeyCONFIGURATION_ADVANCEDONGOINGRECOMMENTATION EnumEditableSettingKey = "CONFIGURATION_ADVANCEDONGOINGRECOMMENTATION"

	EnumEditableSettingKeyCONFIGURATION_CTD_USEPRIMARYTENANTCTDSETTING EnumEditableSettingKey = "CONFIGURATION_CTD_USEPRIMARYTENANTCTDSETTING"

	EnumEditableSettingKeyCONFIGURATION_DDAN_APIKEY EnumEditableSettingKey = "CONFIGURATION_DDAN_APIKEY"

	EnumEditableSettingKeyCONFIGURATION_DDAN_DDANSOURCE EnumEditableSettingKey = "CONFIGURATION_DDAN_DDANSOURCE"

	EnumEditableSettingKeyCONFIGURATION_DDAN_ENABLEAUTOSUBMISSION EnumEditableSettingKey = "CONFIGURATION_DDAN_ENABLEAUTOSUBMISSION"

	EnumEditableSettingKeyCONFIGURATION_DDAN_ENABLESUBMISSION EnumEditableSettingKey = "CONFIGURATION_DDAN_ENABLESUBMISSION"

	EnumEditableSettingKeyCONFIGURATION_DDAN_PROXYIDFORDDAN EnumEditableSettingKey = "CONFIGURATION_DDAN_PROXYIDFORDDAN"

	EnumEditableSettingKeyCONFIGURATION_DDAN_SERVERADDRESS EnumEditableSettingKey = "CONFIGURATION_DDAN_SERVERADDRESS"

	EnumEditableSettingKeyCONFIGURATION_DDAN_USEPROXYFORDDAN EnumEditableSettingKey = "CONFIGURATION_DDAN_USEPROXYFORDDAN"

	EnumEditableSettingKeyCONFIGURATION_REGISTERED_DDAN_APIKEY EnumEditableSettingKey = "CONFIGURATION_REGISTERED_DDAN_APIKEY"

	EnumEditableSettingKeyCONFIGURATION_REGISTERED_DDAN_SERVERADDRESS EnumEditableSettingKey = "CONFIGURATION_REGISTERED_DDAN_SERVERADDRESS"

	EnumEditableSettingKeyCONFIGURATION_MOTD_TEXT EnumEditableSettingKey = "CONFIGURATION_MOTD_TEXT"

	EnumEditableSettingKeyCONFIGURATION_SPNFB_BANDWIDTHLIMITATION EnumEditableSettingKey = "CONFIGURATION_SPNFB_BANDWIDTHLIMITATION"

	EnumEditableSettingKeyCONFIGURATION_SPNFB_ENABLEFEEDBACK EnumEditableSettingKey = "CONFIGURATION_SPNFB_ENABLEFEEDBACK"

	EnumEditableSettingKeyCONFIGURATION_SPNFB_ENABLESUSPICIUSFILEFEEDBACK EnumEditableSettingKey = "CONFIGURATION_SPNFB_ENABLESUSPICIUSFILEFEEDBACK"

	EnumEditableSettingKeyCONFIGURATION_SPNFB_FEEDBACKINTEVALBYMINUTES EnumEditableSettingKey = "CONFIGURATION_SPNFB_FEEDBACKINTEVALBYMINUTES"

	EnumEditableSettingKeyCONFIGURATION_SPNFB_FEEDBACKINTEVALBYTHREATS EnumEditableSettingKey = "CONFIGURATION_SPNFB_FEEDBACKINTEVALBYTHREATS"

	EnumEditableSettingKeyCONFIGURATION_SPNFB_INDUSTRYTYPE EnumEditableSettingKey = "CONFIGURATION_SPNFB_INDUSTRYTYPE"

	EnumEditableSettingKeyCONFIGURATION_TMCM_APIKEY EnumEditableSettingKey = "CONFIGURATION_TMCM_APIKEY"

	EnumEditableSettingKeyCONFIGURATION_TMCM_ENABLESUSPICIOUSOBJECTLISTDETECTION EnumEditableSettingKey = "CONFIGURATION_TMCM_ENABLESUSPICIOUSOBJECTLISTDETECTION"

	EnumEditableSettingKeyCONFIGURATION_TMCM_SOLISTSOURCETMCM EnumEditableSettingKey = "CONFIGURATION_TMCM_SOLISTSOURCETMCM"

	EnumEditableSettingKeyCONFIGURATION_TMCM_PROXYIDFORTMCM EnumEditableSettingKey = "CONFIGURATION_TMCM_PROXYIDFORTMCM"

	EnumEditableSettingKeyCONFIGURATION_TMCM_SERVERADDRESS EnumEditableSettingKey = "CONFIGURATION_TMCM_SERVERADDRESS"

	EnumEditableSettingKeyCONFIGURATION_TMCM_USEPROXYFORTMCM EnumEditableSettingKey = "CONFIGURATION_TMCM_USEPROXYFORTMCM"

	EnumEditableSettingKeyCONFIGURATION_REGISTERED_TMCM_APIKEY EnumEditableSettingKey = "CONFIGURATION_REGISTERED_TMCM_APIKEY"

	EnumEditableSettingKeyCONFIGURATION_REGISTERED_TMCM_SERVERADDRESS EnumEditableSettingKey = "CONFIGURATION_REGISTERED_TMCM_SERVERADDRESS"

	EnumEditableSettingKeyCONFIGURATION_ACCESSSCHEDULEID EnumEditableSettingKey = "CONFIGURATION_ACCESSSCHEDULEID"

	EnumEditableSettingKeyCONFIGURATION_AGENTCOMMUNICATIONS EnumEditableSettingKey = "CONFIGURATION_AGENTCOMMUNICATIONS"

	EnumEditableSettingKeyCONFIGURATION_AGENTHARDENING EnumEditableSettingKey = "CONFIGURATION_AGENTHARDENING"

	EnumEditableSettingKeyCONFIGURATION_AGENTHARDENINGPASSWORDFLAG EnumEditableSettingKey = "CONFIGURATION_AGENTHARDENINGPASSWORDFLAG"

	EnumEditableSettingKeyCONFIGURATION_AGENTHARDENINGPASSWORDVALUE EnumEditableSettingKey = "CONFIGURATION_AGENTHARDENINGPASSWORDVALUE"

	EnumEditableSettingKeyCONFIGURATION_AGENTINITIATEDACTIVATION EnumEditableSettingKey = "CONFIGURATION_AGENTINITIATEDACTIVATION"

	EnumEditableSettingKeyCONFIGURATION_AGENTINITIATEDACTIVATIONACTIVEHOST EnumEditableSettingKey = "CONFIGURATION_AGENTINITIATEDACTIVATIONACTIVEHOST"

	EnumEditableSettingKeyCONFIGURATION_AGENTINITIATEDACTIVATIONALLOWHOSTNAME EnumEditableSettingKey = "CONFIGURATION_AGENTINITIATEDACTIVATIONALLOWHOSTNAME"

	EnumEditableSettingKeyCONFIGURATION_AGENTINITIATEDACTIVATIONIPLIST EnumEditableSettingKey = "CONFIGURATION_AGENTINITIATEDACTIVATIONIPLIST"

	EnumEditableSettingKeyCONFIGURATION_AGENTINITIATEDACTIVATIONSECURITYPROFILE EnumEditableSettingKey = "CONFIGURATION_AGENTINITIATEDACTIVATIONSECURITYPROFILE"

	EnumEditableSettingKeyCONFIGURATION_AGENTLOGFLUSHINTERVAL EnumEditableSettingKey = "CONFIGURATION_AGENTLOGFLUSHINTERVAL"

	EnumEditableSettingKeyCONFIGURATION_AGENTUPDATEPROXYID EnumEditableSettingKey = "CONFIGURATION_AGENTUPDATEPROXYID"

	EnumEditableSettingKeyCONFIGURATION_AGENTLESSVCLOUDPROTECTIONENABLED EnumEditableSettingKey = "CONFIGURATION_AGENTLESSVCLOUDPROTECTIONENABLED"

	EnumEditableSettingKeyCONFIGURATION_ALLOWBACKUPSCHEDULEDTASK EnumEditableSettingKey = "CONFIGURATION_ALLOWBACKUPSCHEDULEDTASK"

	EnumEditableSettingKeyCONFIGURATION_ALLOWENCRYPTEDDATACOLLECTION EnumEditableSettingKey = "CONFIGURATION_ALLOWENCRYPTEDDATACOLLECTION"

	EnumEditableSettingKeyCONFIGURATION_ALLOWREACTIVATECLONEDVM EnumEditableSettingKey = "CONFIGURATION_ALLOWREACTIVATECLONEDVM"

	EnumEditableSettingKeyCONFIGURATION_ALLOWREACTIVATEUNKNOWNVM EnumEditableSettingKey = "CONFIGURATION_ALLOWREACTIVATEUNKNOWNVM"

	EnumEditableSettingKeyCONFIGURATION_ALLOWRUNHOSTDISCOVERY EnumEditableSettingKey = "CONFIGURATION_ALLOWRUNHOSTDISCOVERY"

	EnumEditableSettingKeyCONFIGURATION_ALLOWRUNPORTSCAN EnumEditableSettingKey = "CONFIGURATION_ALLOWRUNPORTSCAN"

	EnumEditableSettingKeyCONFIGURATION_ALLOWRUNSCRIPTSCHEDULEDTASK EnumEditableSettingKey = "CONFIGURATION_ALLOWRUNSCRIPTSCHEDULEDTASK"

	EnumEditableSettingKeyCONFIGURATION_ALLOWSYNCWITHCLOUDCONNECTORS EnumEditableSettingKey = "CONFIGURATION_ALLOWSYNCWITHCLOUDCONNECTORS"

	EnumEditableSettingKeyCONFIGURATION_ALLOWSYNCWITHDIRECTORIES EnumEditableSettingKey = "CONFIGURATION_ALLOWSYNCWITHDIRECTORIES"

	EnumEditableSettingKeyCONFIGURATION_ALLOWSYNCWITHVCENTER EnumEditableSettingKey = "CONFIGURATION_ALLOWSYNCWITHVCENTER"

	EnumEditableSettingKeyCONFIGURATION_ANTIMALWAREGLOBALMANUALSCANCONFIG EnumEditableSettingKey = "CONFIGURATION_ANTIMALWAREGLOBALMANUALSCANCONFIG"

	EnumEditableSettingKeyCONFIGURATION_ANTIMALWAREGLOBALQUICKSCANCONFIG EnumEditableSettingKey = "CONFIGURATION_ANTIMALWAREGLOBALQUICKSCANCONFIG"

	EnumEditableSettingKeyCONFIGURATION_ANTIMALWAREGLOBALREALTIMESCANCONFIG EnumEditableSettingKey = "CONFIGURATION_ANTIMALWAREGLOBALREALTIMESCANCONFIG"

	EnumEditableSettingKeyCONFIGURATION_ANTIMALWAREGLOBALREALTIMESCANSCHEDULECONFIG EnumEditableSettingKey = "CONFIGURATION_ANTIMALWAREGLOBALREALTIMESCANSCHEDULECONFIG"

	EnumEditableSettingKeyCONFIGURATION_ANTIMALWAREGLOBALSCHEDULEDSCANCONFIG EnumEditableSettingKey = "CONFIGURATION_ANTIMALWAREGLOBALSCHEDULEDSCANCONFIG"

	EnumEditableSettingKeyCONFIGURATION_ANTIMALWARENSXONLYTAGFAILURES EnumEditableSettingKey = "CONFIGURATION_ANTIMALWARENSXONLYTAGFAILURES"

	EnumEditableSettingKeyCONFIGURATION_ANTIMALWARENSXREMOVETAG EnumEditableSettingKey = "CONFIGURATION_ANTIMALWARENSXREMOVETAG"

	EnumEditableSettingKeyCONFIGURATION_ANTIMALWARENSXTAG EnumEditableSettingKey = "CONFIGURATION_ANTIMALWARENSXTAG"

	EnumEditableSettingKeyCONFIGURATION_ANTIMALWARENSXTAGGINGENABLED EnumEditableSettingKey = "CONFIGURATION_ANTIMALWARENSXTAGGINGENABLED"

	EnumEditableSettingKeyCONFIGURATION_ANTIMALWARESCANCACHEONDEMANDCONFIG EnumEditableSettingKey = "CONFIGURATION_ANTIMALWARESCANCACHEONDEMANDCONFIG"

	EnumEditableSettingKeyCONFIGURATION_ANTIMALWARESCANCACHEREALTIMECONFIG EnumEditableSettingKey = "CONFIGURATION_ANTIMALWARESCANCACHEREALTIMECONFIG"

	EnumEditableSettingKeyCONFIGURATION_ANTIMALWARESMARTSCANERRORENABLED EnumEditableSettingKey = "CONFIGURATION_ANTIMALWARESMARTSCANERRORENABLED"

	EnumEditableSettingKeyCONFIGURATION_ANTIMALWARESTATE EnumEditableSettingKey = "CONFIGURATION_ANTIMALWARESTATE"

	EnumEditableSettingKeyCONFIGURATION_ATSERULEAPPROVEDLIST EnumEditableSettingKey = "CONFIGURATION_ATSERULEAPPROVEDLIST"

	EnumEditableSettingKeyCONFIGURATION_AUTOREQUIRESUPDATE EnumEditableSettingKey = "CONFIGURATION_AUTOREQUIRESUPDATE"

	EnumEditableSettingKeyCONFIGURATION_AUTOMATICALLYDELETEANTIMALWAREEVENTSOLDERTHANMINUTES EnumEditableSettingKey = "CONFIGURATION_AUTOMATICALLYDELETEANTIMALWAREEVENTSOLDERTHANMINUTES"

	EnumEditableSettingKeyCONFIGURATION_AUTOMATICALLYDELETECOUNTERSOLDERTHANMINUTES EnumEditableSettingKey = "CONFIGURATION_AUTOMATICALLYDELETECOUNTERSOLDERTHANMINUTES"

	EnumEditableSettingKeyCONFIGURATION_AUTOMATICALLYDELETEDPIEVENTSOLDERTHANMINUTES EnumEditableSettingKey = "CONFIGURATION_AUTOMATICALLYDELETEDPIEVENTSOLDERTHANMINUTES"

	EnumEditableSettingKeyCONFIGURATION_AUTOMATICALLYDELETEEVENTSOLDERTHANMINUTES EnumEditableSettingKey = "CONFIGURATION_AUTOMATICALLYDELETEEVENTSOLDERTHANMINUTES"

	EnumEditableSettingKeyCONFIGURATION_AUTOMATICALLYDELETEFIREWALLEVENTSOLDERTHANMINUTES EnumEditableSettingKey = "CONFIGURATION_AUTOMATICALLYDELETEFIREWALLEVENTSOLDERTHANMINUTES"

	EnumEditableSettingKeyCONFIGURATION_AUTOMATICALLYDELETEINTEGRITYEVENTSOLDERTHANMINUTES EnumEditableSettingKey = "CONFIGURATION_AUTOMATICALLYDELETEINTEGRITYEVENTSOLDERTHANMINUTES"

	EnumEditableSettingKeyCONFIGURATION_AUTOMATICALLYDELETELOGINSPECTIONEVENTSOLDERTHANMINUTES EnumEditableSettingKey = "CONFIGURATION_AUTOMATICALLYDELETELOGINSPECTIONEVENTSOLDERTHANMINUTES"

	EnumEditableSettingKeyCONFIGURATION_AUTOMATICALLYDELETESERVERLOGSOLDERTHANMINUTES EnumEditableSettingKey = "CONFIGURATION_AUTOMATICALLYDELETESERVERLOGSOLDERTHANMINUTES"

	EnumEditableSettingKeyCONFIGURATION_AUTOMATICALLYDELETEWEBREPUTATIONEVENTSOLDERTHANMINUTES EnumEditableSettingKey = "CONFIGURATION_AUTOMATICALLYDELETEWEBREPUTATIONEVENTSOLDERTHANMINUTES"

	EnumEditableSettingKeyCONFIGURATION_AUTOMATICALLYUPDATEIPS EnumEditableSettingKey = "CONFIGURATION_AUTOMATICALLYUPDATEIPS"

	EnumEditableSettingKeyCONFIGURATION_AWSSNSENABLED EnumEditableSettingKey = "CONFIGURATION_AWSSNSENABLED"

	EnumEditableSettingKeyCONFIGURATION_AWSMANAGERIDENTITYUSEROLE EnumEditableSettingKey = "CONFIGURATION_AWSMANAGERIDENTITYUSEROLE"

	EnumEditableSettingKeyCONFIGURATION_AWSSNSACCESSKEY EnumEditableSettingKey = "CONFIGURATION_AWSSNSACCESSKEY"

	EnumEditableSettingKeyCONFIGURATION_AWSSNSSECRETKEY EnumEditableSettingKey = "CONFIGURATION_AWSSNSSECRETKEY"

	EnumEditableSettingKeyCONFIGURATION_AWSSNSTOPICARN EnumEditableSettingKey = "CONFIGURATION_AWSSNSTOPICARN"

	EnumEditableSettingKeyCONFIGURATION_AWSSNSCONFIG EnumEditableSettingKey = "CONFIGURATION_AWSSNSCONFIG"

	EnumEditableSettingKeyCONFIGURATION_AWSSNSADVANCEDCONFIG EnumEditableSettingKey = "CONFIGURATION_AWSSNSADVANCEDCONFIG"

	EnumEditableSettingKeyCONFIGURATION_AWSMANAGERIDENTITYACCESSKEY EnumEditableSettingKey = "CONFIGURATION_AWSMANAGERIDENTITYACCESSKEY"

	EnumEditableSettingKeyCONFIGURATION_AWSMANAGERIDENTITYSECRETKEY EnumEditableSettingKey = "CONFIGURATION_AWSMANAGERIDENTITYSECRETKEY"

	EnumEditableSettingKeyCONFIGURATION_BEHAVIORMONITORINGSCANEXCLUSIONLIST EnumEditableSettingKey = "CONFIGURATION_BEHAVIORMONITORINGSCANEXCLUSIONLIST"

	EnumEditableSettingKeyCONFIGURATION_CACHEOPTIMIZATIONSCAN_MAXAMONDEMANDSCANCACHESIZE EnumEditableSettingKey = "CONFIGURATION_CACHEOPTIMIZATIONSCAN_MAXAMONDEMANDSCANCACHESIZE"

	EnumEditableSettingKeyCONFIGURATION_CACHEOPTIMIZATIONSCAN_MAXAMREALTIMESCANCACHESIZE EnumEditableSettingKey = "CONFIGURATION_CACHEOPTIMIZATIONSCAN_MAXAMREALTIMESCANCACHESIZE"

	EnumEditableSettingKeyCONFIGURATION_CACHEOPTIMIZATIONSCAN_MAXCONCURRENTSCANS EnumEditableSettingKey = "CONFIGURATION_CACHEOPTIMIZATIONSCAN_MAXCONCURRENTSCANS"

	EnumEditableSettingKeyCONFIGURATION_CACHEOPTIMIZATIONSCAN_MAXIMSCANCACHESIZE EnumEditableSettingKey = "CONFIGURATION_CACHEOPTIMIZATIONSCAN_MAXIMSCANCACHESIZE"

	EnumEditableSettingKeyCONFIGURATION_CANHOSTCONTACTGLOBALIAU EnumEditableSettingKey = "CONFIGURATION_CANHOSTCONTACTGLOBALIAU"

	EnumEditableSettingKeyCONFIGURATION_CANROAMINGAGENTUPDATECOMPONENT EnumEditableSettingKey = "CONFIGURATION_CANROAMINGAGENTUPDATECOMPONENT"

	EnumEditableSettingKeyCONFIGURATION_CANROAMINGRELAYSGETSOFTWAREUPDATESFROMDLC EnumEditableSettingKey = "CONFIGURATION_CANROAMINGRELAYSGETSOFTWAREUPDATESFROMDLC"

	EnumEditableSettingKeyCONFIGURATION_CENSUSUSEPROXYFORGLOBALSERVER EnumEditableSettingKey = "CONFIGURATION_CENSUSUSEPROXYFORGLOBALSERVER"

	EnumEditableSettingKeyCONFIGURATION_CENSUSPROXYIDFORGLOBALSERVER EnumEditableSettingKey = "CONFIGURATION_CENSUSPROXYIDFORGLOBALSERVER"

	EnumEditableSettingKeyCONFIGURATION_CONTEXTS_EXPECTEDCONTENTREGEX EnumEditableSettingKey = "CONFIGURATION_CONTEXTS_EXPECTEDCONTENTREGEX"

	EnumEditableSettingKeyCONFIGURATION_CONTEXTS_EXPECTEDCONTENTREGEXINTRANET EnumEditableSettingKey = "CONFIGURATION_CONTEXTS_EXPECTEDCONTENTREGEXINTRANET"

	EnumEditableSettingKeyCONFIGURATION_CONTEXTS_TESTINTERVAL EnumEditableSettingKey = "CONFIGURATION_CONTEXTS_TESTINTERVAL"

	EnumEditableSettingKeyCONFIGURATION_CONTEXTS_TESTURI EnumEditableSettingKey = "CONFIGURATION_CONTEXTS_TESTURI"

	EnumEditableSettingKeyCONFIGURATION_CONTEXTS_TESTURIINTRANET EnumEditableSettingKey = "CONFIGURATION_CONTEXTS_TESTURIINTRANET"

	EnumEditableSettingKeyCONFIGURATION_DEFAULTALERTEMAIL EnumEditableSettingKey = "CONFIGURATION_DEFAULTALERTEMAIL"

	EnumEditableSettingKeyCONFIGURATION_DEFAULTAPPLIANCEAGENTVERSION EnumEditableSettingKey = "CONFIGURATION_DEFAULTAPPLIANCEAGENTVERSION"

	EnumEditableSettingKeyCONFIGURATION_DEFAULTFORNEWADMINISTRATORSHIDEUNLICENSEDMODULES EnumEditableSettingKey = "CONFIGURATION_DEFAULTFORNEWADMINISTRATORSHIDEUNLICENSEDMODULES"

	EnumEditableSettingKeyCONFIGURATION_DEFAULTHEARTBEATPERIOD EnumEditableSettingKey = "CONFIGURATION_DEFAULTHEARTBEATPERIOD"

	EnumEditableSettingKeyCONFIGURATION_DEMOMODE EnumEditableSettingKey = "CONFIGURATION_DEMOMODE"

	EnumEditableSettingKeyCONFIGURATION_DETECTIONENGINESTATE EnumEditableSettingKey = "CONFIGURATION_DETECTIONENGINESTATE"

	EnumEditableSettingKeyCONFIGURATION_DETECTIONENGINESTATEAUTOAPPLYDPIRULES EnumEditableSettingKey = "CONFIGURATION_DETECTIONENGINESTATEAUTOAPPLYDPIRULES"

	EnumEditableSettingKeyCONFIGURATION_DETECTIONENGINESTATEAUTOAPPLYINTEGRITYRULES EnumEditableSettingKey = "CONFIGURATION_DETECTIONENGINESTATEAUTOAPPLYINTEGRITYRULES"

	EnumEditableSettingKeyCONFIGURATION_DETECTIONENGINESTATEAUTOAPPLYLOGINSPECTIONRULES EnumEditableSettingKey = "CONFIGURATION_DETECTIONENGINESTATEAUTOAPPLYLOGINSPECTIONRULES"

	EnumEditableSettingKeyCONFIGURATION_DSRUAUTOAPPLYNEWDSRUS EnumEditableSettingKey = "CONFIGURATION_DSRUAUTOAPPLYNEWDSRUS"

	EnumEditableSettingKeyCONFIGURATION_ENABLEEXCLUSIVEINTERFACES EnumEditableSettingKey = "CONFIGURATION_ENABLEEXCLUSIVEINTERFACES"

	EnumEditableSettingKeyCONFIGURATION_ENVIRONMENTVARIABLEOVERRIDES EnumEditableSettingKey = "CONFIGURATION_ENVIRONMENTVARIABLEOVERRIDES"

	EnumEditableSettingKeyCONFIGURATION_EVENTEMAILENABLED EnumEditableSettingKey = "CONFIGURATION_EVENTEMAILENABLED"

	EnumEditableSettingKeyCONFIGURATION_EVENTEMAILRECIPIENTS EnumEditableSettingKey = "CONFIGURATION_EVENTEMAILRECIPIENTS"

	EnumEditableSettingKeyCONFIGURATION_EVENTEMAILSUBJECT EnumEditableSettingKey = "CONFIGURATION_EVENTEMAILSUBJECT"

	EnumEditableSettingKeyCONFIGURATION_EVENTEMAILTEMPLATE EnumEditableSettingKey = "CONFIGURATION_EVENTEMAILTEMPLATE"

	EnumEditableSettingKeyCONFIGURATION_EXCLUSIVEINTERFACEPATTERNS EnumEditableSettingKey = "CONFIGURATION_EXCLUSIVEINTERFACEPATTERNS"

	EnumEditableSettingKeyCONFIGURATION_EXPORTT0RELAYLIST EnumEditableSettingKey = "CONFIGURATION_EXPORTT0RELAYLIST"

	EnumEditableSettingKeyCONFIGURATION_EXPORTEDDIAGNOSTICPACKAGELOCALE EnumEditableSettingKey = "CONFIGURATION_EXPORTEDDIAGNOSTICPACKAGELOCALE"

	EnumEditableSettingKeyCONFIGURATION_EXPORTEDFILECHARACTERENCODING EnumEditableSettingKey = "CONFIGURATION_EXPORTEDFILECHARACTERENCODING"

	EnumEditableSettingKeyCONFIGURATION_FILEHASHCALCULATION EnumEditableSettingKey = "CONFIGURATION_FILEHASHCALCULATION"

	EnumEditableSettingKeyCONFIGURATION_FILEHASHCALCULATION_MD5 EnumEditableSettingKey = "CONFIGURATION_FILEHASHCALCULATION_MD5"

	EnumEditableSettingKeyCONFIGURATION_FILEHASHCALCULATION_SHA256 EnumEditableSettingKey = "CONFIGURATION_FILEHASHCALCULATION_SHA256"

	EnumEditableSettingKeyCONFIGURATION_FILEHASHCALCULATION_MAXFILECALCULATIONSIZE EnumEditableSettingKey = "CONFIGURATION_FILEHASHCALCULATION_MAXFILECALCULATIONSIZE"

	EnumEditableSettingKeyCONFIGURATION_FORCET0DATAPRIVACYSETTINGS EnumEditableSettingKey = "CONFIGURATION_FORCET0DATAPRIVACYSETTINGS"

	EnumEditableSettingKeyCONFIGURATION_FORCET0PURGESETTINGS EnumEditableSettingKey = "CONFIGURATION_FORCET0PURGESETTINGS"

	EnumEditableSettingKeyCONFIGURATION_FORCET0SMTPSETTINGS EnumEditableSettingKey = "CONFIGURATION_FORCET0SMTPSETTINGS"

	EnumEditableSettingKeyCONFIGURATION_FORCET0SYSLOGSETTINGS EnumEditableSettingKey = "CONFIGURATION_FORCET0SYSLOGSETTINGS"

	EnumEditableSettingKeyCONFIGURATION_FORWARDLOGS_ANTIMALWARE EnumEditableSettingKey = "CONFIGURATION_FORWARDLOGS_ANTIMALWARE"

	EnumEditableSettingKeyCONFIGURATION_FORWARDLOGS_ANTIMALWARE_DIRECT EnumEditableSettingKey = "CONFIGURATION_FORWARDLOGS_ANTIMALWARE_DIRECT"

	EnumEditableSettingKeyCONFIGURATION_FORWARDLOGS_INTEGRITY EnumEditableSettingKey = "CONFIGURATION_FORWARDLOGS_INTEGRITY"

	EnumEditableSettingKeyCONFIGURATION_FORWARDLOGS_INTEGRITY_DIRECT EnumEditableSettingKey = "CONFIGURATION_FORWARDLOGS_INTEGRITY_DIRECT"

	EnumEditableSettingKeyCONFIGURATION_FORWARDLOGS_LOGINSPECTION EnumEditableSettingKey = "CONFIGURATION_FORWARDLOGS_LOGINSPECTION"

	EnumEditableSettingKeyCONFIGURATION_FORWARDLOGS_LOGINSPECTION_DIRECT EnumEditableSettingKey = "CONFIGURATION_FORWARDLOGS_LOGINSPECTION_DIRECT"

	EnumEditableSettingKeyCONFIGURATION_FORWARDLOGS_PNP EnumEditableSettingKey = "CONFIGURATION_FORWARDLOGS_PNP"

	EnumEditableSettingKeyCONFIGURATION_FORWARDLOGS_PNP_DIRECT EnumEditableSettingKey = "CONFIGURATION_FORWARDLOGS_PNP_DIRECT"

	EnumEditableSettingKeyCONFIGURATION_FORWARDLOGS_WRS EnumEditableSettingKey = "CONFIGURATION_FORWARDLOGS_WRS"

	EnumEditableSettingKeyCONFIGURATION_FORWARDLOGS_WRS_DIRECT EnumEditableSettingKey = "CONFIGURATION_FORWARDLOGS_WRS_DIRECT"

	EnumEditableSettingKeyCONFIGURATION_FORWARDLOGS_APPCONTROL EnumEditableSettingKey = "CONFIGURATION_FORWARDLOGS_APPCONTROL"

	EnumEditableSettingKeyCONFIGURATION_FORWARDLOGS_APPCONTROL_DIRECT EnumEditableSettingKey = "CONFIGURATION_FORWARDLOGS_APPCONTROL_DIRECT"

	EnumEditableSettingKeyCONFIGURATION_GENERATEDEVENTSPERMINUTE_ANTIMALWARE EnumEditableSettingKey = "CONFIGURATION_GENERATEDEVENTSPERMINUTE_ANTIMALWARE"

	EnumEditableSettingKeyCONFIGURATION_GENERATEDEVENTSPERMINUTE_INTEGRITY EnumEditableSettingKey = "CONFIGURATION_GENERATEDEVENTSPERMINUTE_INTEGRITY"

	EnumEditableSettingKeyCONFIGURATION_GENERATEDEVENTSPERMINUTE_LOGINSPECTION EnumEditableSettingKey = "CONFIGURATION_GENERATEDEVENTSPERMINUTE_LOGINSPECTION"

	EnumEditableSettingKeyCONFIGURATION_GENERATEDEVENTSPERMINUTE_PNP EnumEditableSettingKey = "CONFIGURATION_GENERATEDEVENTSPERMINUTE_PNP"

	EnumEditableSettingKeyCONFIGURATION_GENERATEDEVENTSPERMINUTE_WRS EnumEditableSettingKey = "CONFIGURATION_GENERATEDEVENTSPERMINUTE_WRS"

	EnumEditableSettingKey_CONFIGURATION_GENERATEDEVENTSPERMINUTE_APPCONTROL EnumEditableSettingKey = "_CONFIGURATION_GENERATEDEVENTSPERMINUTE_APPCONTROL"

	EnumEditableSettingKeyCONFIGURATION_GFRUSEPROXYFORGLOBALSERVER EnumEditableSettingKey = "CONFIGURATION_GFRUSEPROXYFORGLOBALSERVER"

	EnumEditableSettingKeyCONFIGURATION_GFRPROXYIDFORGLOBALSERVER EnumEditableSettingKey = "CONFIGURATION_GFRPROXYIDFORGLOBALSERVER"

	EnumEditableSettingKeyCONFIGURATION_GLOBALSTATEFULCONFIG EnumEditableSettingKey = "CONFIGURATION_GLOBALSTATEFULCONFIG"

	EnumEditableSettingKeyCONFIGURATION_IMPORTT0RELAYLIST EnumEditableSettingKey = "CONFIGURATION_IMPORTT0RELAYLIST"

	EnumEditableSettingKeyCONFIGURATION_INTEGRITYCRITICALRANK EnumEditableSettingKey = "CONFIGURATION_INTEGRITYCRITICALRANK"

	EnumEditableSettingKeyCONFIGURATION_INTEGRITYHIGHRANK EnumEditableSettingKey = "CONFIGURATION_INTEGRITYHIGHRANK"

	EnumEditableSettingKeyCONFIGURATION_INTEGRITYLOWRANK EnumEditableSettingKey = "CONFIGURATION_INTEGRITYLOWRANK"

	EnumEditableSettingKeyCONFIGURATION_INTEGRITYMEDIUMRANK EnumEditableSettingKey = "CONFIGURATION_INTEGRITYMEDIUMRANK"

	EnumEditableSettingKeyCONFIGURATION_INTEGRITYMONITORINGSCANCACHECONFIG EnumEditableSettingKey = "CONFIGURATION_INTEGRITYMONITORINGSCANCACHECONFIG"

	EnumEditableSettingKeyCONFIGURATION_LOGINSPECTIONAPPLYTAGSTOGROUPS EnumEditableSettingKey = "CONFIGURATION_LOGINSPECTIONAPPLYTAGSTOGROUPS"

	EnumEditableSettingKeyCONFIGURATION_LOGINSPECTIONCRITICALRANK EnumEditableSettingKey = "CONFIGURATION_LOGINSPECTIONCRITICALRANK"

	EnumEditableSettingKeyCONFIGURATION_LOGINSPECTIONHIGHRANK EnumEditableSettingKey = "CONFIGURATION_LOGINSPECTIONHIGHRANK"

	EnumEditableSettingKeyCONFIGURATION_LOGINSPECTIONLOWRANK EnumEditableSettingKey = "CONFIGURATION_LOGINSPECTIONLOWRANK"

	EnumEditableSettingKeyCONFIGURATION_LOGINSPECTIONMEDIUMRANK EnumEditableSettingKey = "CONFIGURATION_LOGINSPECTIONMEDIUMRANK"

	EnumEditableSettingKeyCONFIGURATION_LOGINSPECTIONSTATE EnumEditableSettingKey = "CONFIGURATION_LOGINSPECTIONSTATE"

	EnumEditableSettingKeyCONFIGURATION_LOGINSPECTIONSTORAGECLIP EnumEditableSettingKey = "CONFIGURATION_LOGINSPECTIONSTORAGECLIP"

	EnumEditableSettingKeyCONFIGURATION_LOGINSPECTIONSYSLOGCLIP EnumEditableSettingKey = "CONFIGURATION_LOGINSPECTIONSYSLOGCLIP"

	EnumEditableSettingKeyCONFIGURATION_LOGGINGOVERRIDE EnumEditableSettingKey = "CONFIGURATION_LOGGINGOVERRIDE"

	EnumEditableSettingKeyCONFIGURATION_LOGOBYTES EnumEditableSettingKey = "CONFIGURATION_LOGOBYTES"

	EnumEditableSettingKeyCONFIGURATION_LOGONUMBER EnumEditableSettingKey = "CONFIGURATION_LOGONUMBER"

	EnumEditableSettingKeyCONFIGURATION_MANAGERCLOUDPROXYID EnumEditableSettingKey = "CONFIGURATION_MANAGERCLOUDPROXYID"

	EnumEditableSettingKeyCONFIGURATION_MANAGERNODEFORNSX EnumEditableSettingKey = "CONFIGURATION_MANAGERNODEFORNSX"

	EnumEditableSettingKeyCONFIGURATION_MANAGERUPDATEPROXYID EnumEditableSettingKey = "CONFIGURATION_MANAGERUPDATEPROXYID"

	EnumEditableSettingKeyCONFIGURATION_MAXDEMOMODETENANTCOUNT EnumEditableSettingKey = "CONFIGURATION_MAXDEMOMODETENANTCOUNT"

	EnumEditableSettingKeyCONFIGURATION_MAXHOSTCLOCKSHIFT EnumEditableSettingKey = "CONFIGURATION_MAXHOSTCLOCKSHIFT"

	EnumEditableSettingKeyCONFIGURATION_MAXMISSEDHEARTBEATS EnumEditableSettingKey = "CONFIGURATION_MAXMISSEDHEARTBEATS"

	EnumEditableSettingKeyCONFIGURATION_MAXIMUMAGENTINSTALLERSARCHIVED EnumEditableSettingKey = "CONFIGURATION_MAXIMUMAGENTINSTALLERSARCHIVED"

	EnumEditableSettingKeyCONFIGURATION_MAXIMUMSECURITYUPDATESARCHIVED EnumEditableSettingKey = "CONFIGURATION_MAXIMUMSECURITYUPDATESARCHIVED"

	EnumEditableSettingKeyCONFIGURATION_NETWORKCONTROLSTATE EnumEditableSettingKey = "CONFIGURATION_NETWORKCONTROLSTATE"

	EnumEditableSettingKeyCONFIGURATION_NETWORKDRIVERMODE EnumEditableSettingKey = "CONFIGURATION_NETWORKDRIVERMODE"

	EnumEditableSettingKeyCONFIGURATION_NEWSFEEDURL EnumEditableSettingKey = "CONFIGURATION_NEWSFEEDURL"

	EnumEditableSettingKeyCONFIGURATION_NEWTENANTSRUNCOMPONENTUPDATE EnumEditableSettingKey = "CONFIGURATION_NEWTENANTSRUNCOMPONENTUPDATE"

	EnumEditableSettingKeyCONFIGURATION_NEWVMSACTIVATIONSECURITYPROFILE EnumEditableSettingKey = "CONFIGURATION_NEWVMSACTIVATIONSECURITYPROFILE"

	EnumEditableSettingKeyCONFIGURATION_NONNOTIFYINGSYSTEMEVENTS EnumEditableSettingKey = "CONFIGURATION_NONNOTIFYINGSYSTEMEVENTS"

	EnumEditableSettingKeyCONFIGURATION_NONRECORDINGSYSTEMEVENTS EnumEditableSettingKey = "CONFIGURATION_NONRECORDINGSYSTEMEVENTS"

	EnumEditableSettingKeyCONFIGURATION_NOTIFICATIONMSGFORAM EnumEditableSettingKey = "CONFIGURATION_NOTIFICATIONMSGFORAM"

	EnumEditableSettingKeyCONFIGURATION_NOTIFICATIONMSGFORWP EnumEditableSettingKey = "CONFIGURATION_NOTIFICATIONMSGFORWP"

	EnumEditableSettingKeyCONFIGURATION_ONLYUPDATEPATTERNS EnumEditableSettingKey = "CONFIGURATION_ONLYUPDATEPATTERNS"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_BLOCKIPV6 EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_BLOCKIPV6"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_BLOCKIPV6FOR9PLUS EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_BLOCKIPV6FOR9PLUS"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_BLOCKSAMESRCDSTIP EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_BLOCKSAMESRCDSTIP"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_BYPASSWAASCONNECTIONS EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_BYPASSWAASCONNECTIONS"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_CONFIGSIZEALERTENABLED EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_CONFIGSIZEALERTENABLED"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_CONNECTIONEVENTSICMP EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_CONNECTIONEVENTSICMP"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_CONNECTIONEVENTSTCP EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_CONNECTIONEVENTSTCP"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_CONNECTIONEVENTSUDP EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_CONNECTIONEVENTSUDP"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_DEBUGMODE EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_DEBUGMODE"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_DEBUGPACKETMAX EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_DEBUGPACKETMAX"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_DROP6TO4BOGONS EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_DROP6TO4BOGONS"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_DROPEVASIVERETRANSMIT EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_DROPEVASIVERETRANSMIT"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_DROPIPZEROPAYLOAD EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_DROPIPZEROPAYLOAD"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_DROPIPV6BOGONS EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_DROPIPV6BOGONS"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_DROPIPV6MINMTU EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_DROPIPV6MINMTU"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_DROPIPV6RESERVED EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_DROPIPV6RESERVED"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_DROPIPV6SITELOCAL EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_DROPIPV6SITELOCAL"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_DROPIPV6TYPE0 EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_DROPIPV6TYPE0"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_DROPTEREDOANOMALIES EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_DROPTEREDOANOMALIES"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_DROPTUNNELDEPTHEXCEEDED EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_DROPTUNNELDEPTHEXCEEDED"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_DROPUNKNOWNSSLPROTOCOL EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_DROPUNKNOWNSSLPROTOCOL"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_FILTERIPV4TUNNELS EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_FILTERIPV4TUNNELS"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_FILTERIPV6TUNNELS EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_FILTERIPV6TUNNELS"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_FRAGMINOFFSET EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_FRAGMINOFFSET"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_FRAGMINSIZE EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_FRAGMINSIZE"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_IGNORESTATUS0 EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_IGNORESTATUS0"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_IGNORESTATUS1 EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_IGNORESTATUS1"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_IGNORESTATUS2 EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_IGNORESTATUS2"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_LOGRULES EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_LOGRULES"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_LOGSPERSEC EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_LOGSPERSEC"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_MAXCONNECTIONSICMP EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_MAXCONNECTIONSICMP"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_MAXCONNECTIONSPERIODICCLEANUP EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_MAXCONNECTIONSPERIODICCLEANUP"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_MAXCONNECTIONSTCP EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_MAXCONNECTIONSTCP"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_MAXCONNECTIONSUDP EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_MAXCONNECTIONSUDP"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_MAXTUNNELDEPTH EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_MAXTUNNELDEPTH"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_NODEMAX EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_NODEMAX"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_PASSNULLIP EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_PASSNULLIP"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_PDUSNAPLENGTH EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_PDUSNAPLENGTH"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_PDUSTATEFUL EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_PDUSTATEFUL"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_PDUSTATEFULFIRST EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_PDUSTATEFULFIRST"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_PDUSTATEFULPERIOD EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_PDUSTATEFULPERIOD"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_SETTINGSENABLED EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_SETTINGSENABLED"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_SSLSESSIONSIZE EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_SSLSESSIONSIZE"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_SSLSESSIONTIME EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_SSLSESSIONTIME"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_STRICTTEREDOPORTCHECK EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_STRICTTEREDOPORTCHECK"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_TCPMSSLIMIT EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_TCPMSSLIMIT"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_TCPSILENTRST EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_TCPSILENTRST"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_TIMEOUTACKSTORM EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_TIMEOUTACKSTORM"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_TIMEOUTBOOTSTART EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_TIMEOUTBOOTSTART"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_TIMEOUTCLOSEWAIT EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_TIMEOUTCLOSEWAIT"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_TIMEOUTCLOSED EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_TIMEOUTCLOSED"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_TIMEOUTCLOSING EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_TIMEOUTCLOSING"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_TIMEOUTCOLDSTART EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_TIMEOUTCOLDSTART"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_TIMEOUTCONNCLEANUP EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_TIMEOUTCONNCLEANUP"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_TIMEOUTDISCONNECT EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_TIMEOUTDISCONNECT"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_TIMEOUTERROR EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_TIMEOUTERROR"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_TIMEOUTESTAB EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_TIMEOUTESTAB"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_TIMEOUTFINWAIT EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_TIMEOUTFINWAIT"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_TIMEOUTICMP EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_TIMEOUTICMP"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_TIMEOUTLASTACK EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_TIMEOUTLASTACK"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_TIMEOUTSYNRCVD EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_TIMEOUTSYNRCVD"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_TIMEOUTSYNSENT EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_TIMEOUTSYNSENT"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_TIMEOUTUDP EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_TIMEOUTUDP"

	EnumEditableSettingKeyCONFIGURATION_PACKET_DRIVER_VERIFYTCPCHECKSUM EnumEditableSettingKey = "CONFIGURATION_PACKET_DRIVER_VERIFYTCPCHECKSUM"

	EnumEditableSettingKeyCONFIGURATION_PACKETFILTERDENYRANK EnumEditableSettingKey = "CONFIGURATION_PACKETFILTERDENYRANK"

	EnumEditableSettingKeyCONFIGURATION_PACKETFILTERLOGONLYRANK EnumEditableSettingKey = "CONFIGURATION_PACKETFILTERLOGONLYRANK"

	EnumEditableSettingKeyCONFIGURATION_PACKETFILTERREJECTIONRANK EnumEditableSettingKey = "CONFIGURATION_PACKETFILTERREJECTIONRANK"

	EnumEditableSettingKeyCONFIGURATION_PACKETLOG_CACHELIFETIME EnumEditableSettingKey = "CONFIGURATION_PACKETLOG_CACHELIFETIME"

	EnumEditableSettingKeyCONFIGURATION_PACKETLOG_CACHESIZE EnumEditableSettingKey = "CONFIGURATION_PACKETLOG_CACHESIZE"

	EnumEditableSettingKeyCONFIGURATION_PACKETLOG_CACHESTALETIME EnumEditableSettingKey = "CONFIGURATION_PACKETLOG_CACHESTALETIME"

	EnumEditableSettingKeyCONFIGURATION_PACKETLOG_IGNORE EnumEditableSettingKey = "CONFIGURATION_PACKETLOG_IGNORE"

	EnumEditableSettingKeyCONFIGURATION_PACKETLOG_KEEP EnumEditableSettingKey = "CONFIGURATION_PACKETLOG_KEEP"

	EnumEditableSettingKeyCONFIGURATION_PACKETLOG_LOGOUTOFALLOWEDPOLICY EnumEditableSettingKey = "CONFIGURATION_PACKETLOG_LOGOUTOFALLOWEDPOLICY"

	EnumEditableSettingKeyCONFIGURATION_PACKETLOG_MAXSIZE EnumEditableSettingKey = "CONFIGURATION_PACKETLOG_MAXSIZE"

	EnumEditableSettingKeyCONFIGURATION_PAYLOAD_DRIVER_IPFRAGSENDTIMEEXCEEDED EnumEditableSettingKey = "CONFIGURATION_PAYLOAD_DRIVER_IPFRAGSENDTIMEEXCEEDED"

	EnumEditableSettingKeyCONFIGURATION_PAYLOAD_DRIVER_MAXIPFRAG EnumEditableSettingKey = "CONFIGURATION_PAYLOAD_DRIVER_MAXIPFRAG"

	EnumEditableSettingKeyCONFIGURATION_PAYLOAD_DRIVER_SETTINGSENABLED EnumEditableSettingKey = "CONFIGURATION_PAYLOAD_DRIVER_SETTINGSENABLED"

	EnumEditableSettingKeyCONFIGURATION_PAYLOAD_DRIVER_TIMEOUTFRAGMENT EnumEditableSettingKey = "CONFIGURATION_PAYLOAD_DRIVER_TIMEOUTFRAGMENT"

	EnumEditableSettingKeyCONFIGURATION_PAYLOADDETECTNSXTAGGINGLEVEL EnumEditableSettingKey = "CONFIGURATION_PAYLOADDETECTNSXTAGGINGLEVEL"

	EnumEditableSettingKeyCONFIGURATION_PAYLOADFILTERCRITICALRANK EnumEditableSettingKey = "CONFIGURATION_PAYLOADFILTERCRITICALRANK"

	EnumEditableSettingKeyCONFIGURATION_PAYLOADFILTERERRORRANK EnumEditableSettingKey = "CONFIGURATION_PAYLOADFILTERERRORRANK"

	EnumEditableSettingKeyCONFIGURATION_PAYLOADFILTERHIGHRANK EnumEditableSettingKey = "CONFIGURATION_PAYLOADFILTERHIGHRANK"

	EnumEditableSettingKeyCONFIGURATION_PAYLOADFILTERLOWRANK EnumEditableSettingKey = "CONFIGURATION_PAYLOADFILTERLOWRANK"

	EnumEditableSettingKeyCONFIGURATION_PAYLOADFILTERMEDIUMRANK EnumEditableSettingKey = "CONFIGURATION_PAYLOADFILTERMEDIUMRANK"

	EnumEditableSettingKeyCONFIGURATION_PAYLOADLOGFIRSTPDU EnumEditableSettingKey = "CONFIGURATION_PAYLOADLOGFIRSTPDU"

	EnumEditableSettingKeyCONFIGURATION_PAYLOADPREVENTNSXTAGGINGLEVEL EnumEditableSettingKey = "CONFIGURATION_PAYLOADPREVENTNSXTAGGINGLEVEL"

	EnumEditableSettingKeyCONFIGURATION_PENDINGAGENTUPDATEALERTLIMIT EnumEditableSettingKey = "CONFIGURATION_PENDINGAGENTUPDATEALERTLIMIT"

	EnumEditableSettingKeyCONFIGURATION_PORTSTOSCAN EnumEditableSettingKey = "CONFIGURATION_PORTSTOSCAN"

	EnumEditableSettingKeyCONFIGURATION_PRIMARYDATABASESERVERSTATE EnumEditableSettingKey = "CONFIGURATION_PRIMARYDATABASESERVERSTATE"

	EnumEditableSettingKeyCONFIGURATION_PRIMARYTENANTACCESSALLOWENABLED EnumEditableSettingKey = "CONFIGURATION_PRIMARYTENANTACCESSALLOWENABLED"

	EnumEditableSettingKeyCONFIGURATION_PRIMARYTENANTACCESSALLOWFLAG EnumEditableSettingKey = "CONFIGURATION_PRIMARYTENANTACCESSALLOWFLAG"

	EnumEditableSettingKeyCONFIGURATION_PRIMARYTENANTACCESSHOURSDURATION EnumEditableSettingKey = "CONFIGURATION_PRIMARYTENANTACCESSHOURSDURATION"

	EnumEditableSettingKeyCONFIGURATION_PRIMARYTENANTACCESSREVOKEFLAG EnumEditableSettingKey = "CONFIGURATION_PRIMARYTENANTACCESSREVOKEFLAG"

	EnumEditableSettingKeyCONFIGURATION_PRIMARYTENANTACCESSSTARTDATE EnumEditableSettingKey = "CONFIGURATION_PRIMARYTENANTACCESSSTARTDATE"

	EnumEditableSettingKeyCONFIGURATION_QUARANTINE_MAXFILESIZE EnumEditableSettingKey = "CONFIGURATION_QUARANTINE_MAXFILESIZE"

	EnumEditableSettingKeyCONFIGURATION_QUARANTINE_MAXGUESTSPACE EnumEditableSettingKey = "CONFIGURATION_QUARANTINE_MAXGUESTSPACE"

	EnumEditableSettingKeyCONFIGURATION_QUARANTINE_MAXQUARANTINEDSPACE EnumEditableSettingKey = "CONFIGURATION_QUARANTINE_MAXQUARANTINEDSPACE"

	EnumEditableSettingKeyCONFIGURATION_RAISEAGENTOFFLINEERRORSFORINACTIVEVMS EnumEditableSettingKey = "CONFIGURATION_RAISEAGENTOFFLINEERRORSFORINACTIVEVMS"

	EnumEditableSettingKeyCONFIGURATION_RECOMMENDATIONCPUUSAGELEVEL EnumEditableSettingKey = "CONFIGURATION_RECOMMENDATIONCPUUSAGELEVEL"

	EnumEditableSettingKeyCONFIGURATION_RECOMMENDATIONMONITORINTERVAL EnumEditableSettingKey = "CONFIGURATION_RECOMMENDATIONMONITORINTERVAL"

	EnumEditableSettingKeyCONFIGURATION_RELAYSTATE EnumEditableSettingKey = "CONFIGURATION_RELAYSTATE"

	EnumEditableSettingKeyCONFIGURATION_RELAYUPDATESOURCE EnumEditableSettingKey = "CONFIGURATION_RELAYUPDATESOURCE"

	EnumEditableSettingKeyCONFIGURATION_RELAYUPDATESOURCE_OTHERAU_URL EnumEditableSettingKey = "CONFIGURATION_RELAYUPDATESOURCE_OTHERAU_URL"

	EnumEditableSettingKeyCONFIGURATION_RESALLOCFORAMSCAN_MTSCAN EnumEditableSettingKey = "CONFIGURATION_RESALLOCFORAMSCAN_MTSCAN"

	EnumEditableSettingKeyCONFIGURATION_SCANLIMITATION_MAXFILESCANSIZE EnumEditableSettingKey = "CONFIGURATION_SCANLIMITATION_MAXFILESCANSIZE"

	EnumEditableSettingKeyCONFIGURATION_SHAREPRIMARYTENANTCTDSETTING EnumEditableSettingKey = "CONFIGURATION_SHAREPRIMARYTENANTCTDSETTING"

	EnumEditableSettingKeyCONFIGURATION_SHOWFORGOTPASSWORD EnumEditableSettingKey = "CONFIGURATION_SHOWFORGOTPASSWORD"

	EnumEditableSettingKeyCONFIGURATION_SHOWINTRODUCTIONFORTENANTS EnumEditableSettingKey = "CONFIGURATION_SHOWINTRODUCTIONFORTENANTS"

	EnumEditableSettingKeyCONFIGURATION_SHOWREMEMBERMEOPTION EnumEditableSettingKey = "CONFIGURATION_SHOWREMEMBERMEOPTION"

	EnumEditableSettingKeyCONFIGURATION_SHOWSNMPSETTINGS EnumEditableSettingKey = "CONFIGURATION_SHOWSNMPSETTINGS"

	EnumEditableSettingKeyCONFIGURATION_SINGLEEXCLUSIVEINTERFACEENABLED EnumEditableSettingKey = "CONFIGURATION_SINGLEEXCLUSIVEINTERFACEENABLED"

	EnumEditableSettingKeyCONFIGURATION_SMARTPROTECTIONSERVER_PROXYIDFORGLOBALSERVER EnumEditableSettingKey = "CONFIGURATION_SMARTPROTECTIONSERVER_PROXYIDFORGLOBALSERVER"

	EnumEditableSettingKeyCONFIGURATION_SMARTPROTECTIONSERVER_SMARTSCANALLOWFALLBACK EnumEditableSettingKey = "CONFIGURATION_SMARTPROTECTIONSERVER_SMARTSCANALLOWFALLBACK"

	EnumEditableSettingKeyCONFIGURATION_SMARTPROTECTIONSERVER_SMARTSCANLOCALSERVERS EnumEditableSettingKey = "CONFIGURATION_SMARTPROTECTIONSERVER_SMARTSCANLOCALSERVERS"

	EnumEditableSettingKeyCONFIGURATION_SMARTPROTECTIONSERVER_SMARTSCANUSEGLOBALSERVER EnumEditableSettingKey = "CONFIGURATION_SMARTPROTECTIONSERVER_SMARTSCANUSEGLOBALSERVER"

	EnumEditableSettingKeyCONFIGURATION_SMARTPROTECTIONSERVER_SMARTSCANUSEPROXYFORGLOBALSERVER EnumEditableSettingKey = "CONFIGURATION_SMARTPROTECTIONSERVER_SMARTSCANUSEPROXYFORGLOBALSERVER"

	EnumEditableSettingKeyCONFIGURATION_SMARTPROTECTIONSERVER_WEBREPUTATIONALLOWGLOBAL EnumEditableSettingKey = "CONFIGURATION_SMARTPROTECTIONSERVER_WEBREPUTATIONALLOWGLOBAL"

	EnumEditableSettingKeyCONFIGURATION_SMARTPROTECTIONSERVER_WEBREPUTATIONLOCALRATINGSERVER EnumEditableSettingKey = "CONFIGURATION_SMARTPROTECTIONSERVER_WEBREPUTATIONLOCALRATINGSERVER"

	EnumEditableSettingKeyCONFIGURATION_SMARTPROTECTIONSERVER_WEBREPUTATIONRATINGSERVERPROXYID EnumEditableSettingKey = "CONFIGURATION_SMARTPROTECTIONSERVER_WEBREPUTATIONRATINGSERVERPROXYID"

	EnumEditableSettingKeyCONFIGURATION_SMARTPROTECTIONSERVER_WEBREPUTATIONUSELOCALRATINGSERVER EnumEditableSettingKey = "CONFIGURATION_SMARTPROTECTIONSERVER_WEBREPUTATIONUSELOCALRATINGSERVER"

	EnumEditableSettingKeyCONFIGURATION_SMARTPROTECTIONSERVER_WEBREPUTATIONUSEPROXYFORGLOBALSERVER EnumEditableSettingKey = "CONFIGURATION_SMARTPROTECTIONSERVER_WEBREPUTATIONUSEPROXYFORGLOBALSERVER"

	EnumEditableSettingKeyCONFIGURATION_SMARTSCANSTATE EnumEditableSettingKey = "CONFIGURATION_SMARTSCANSTATE"

	EnumEditableSettingKeyCONFIGURATION_SOFTWAREINVENTORYAUTODOWNLOAD EnumEditableSettingKey = "CONFIGURATION_SOFTWAREINVENTORYAUTODOWNLOAD"

	EnumEditableSettingKeyCONFIGURATION_SPYWAREAPPROVEDLIST EnumEditableSettingKey = "CONFIGURATION_SPYWAREAPPROVEDLIST"

	EnumEditableSettingKeyCONFIGURATION_STATUSMONITORINGAPIENABLED EnumEditableSettingKey = "CONFIGURATION_STATUSMONITORINGAPIENABLED"

	EnumEditableSettingKeyCONFIGURATION_SUPPORTALLREGIONS EnumEditableSettingKey = "CONFIGURATION_SUPPORTALLREGIONS"

	EnumEditableSettingKeyCONFIGURATION_SUPPORTPRELEGOAGENTS EnumEditableSettingKey = "CONFIGURATION_SUPPORTPRELEGOAGENTS"

	EnumEditableSettingKeyCONFIGURATION_SUSPICIOUSFILESUBMISSIONENABLED EnumEditableSettingKey = "CONFIGURATION_SUSPICIOUSFILESUBMISSIONENABLED"

	EnumEditableSettingKeyCONFIGURATION_SUSPICIOUSOBJECTLISTDETECTIONENABLED EnumEditableSettingKey = "CONFIGURATION_SUSPICIOUSOBJECTLISTDETECTIONENABLED"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGFACILITY_ANTIMALWARE EnumEditableSettingKey = "CONFIGURATION_SYSLOGFACILITY_ANTIMALWARE"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGFACILITY_INTEGRITY EnumEditableSettingKey = "CONFIGURATION_SYSLOGFACILITY_INTEGRITY"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGFACILITY_LOGINSPECTION EnumEditableSettingKey = "CONFIGURATION_SYSLOGFACILITY_LOGINSPECTION"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGFACILITY_PNP EnumEditableSettingKey = "CONFIGURATION_SYSLOGFACILITY_PNP"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGFACILITY_WRS EnumEditableSettingKey = "CONFIGURATION_SYSLOGFACILITY_WRS"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGFACILITY_APPCONTROL EnumEditableSettingKey = "CONFIGURATION_SYSLOGFACILITY_APPCONTROL"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGFORMAT_ANTIMALWARE EnumEditableSettingKey = "CONFIGURATION_SYSLOGFORMAT_ANTIMALWARE"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGFORMAT_INTEGRITY EnumEditableSettingKey = "CONFIGURATION_SYSLOGFORMAT_INTEGRITY"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGFORMAT_LOGINSPECTION EnumEditableSettingKey = "CONFIGURATION_SYSLOGFORMAT_LOGINSPECTION"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGFORMAT_PNP EnumEditableSettingKey = "CONFIGURATION_SYSLOGFORMAT_PNP"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGFORMAT_WRS EnumEditableSettingKey = "CONFIGURATION_SYSLOGFORMAT_WRS"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGFORMAT_APPCONTROL EnumEditableSettingKey = "CONFIGURATION_SYSLOGFORMAT_APPCONTROL"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGHOST_ANTIMALWARE EnumEditableSettingKey = "CONFIGURATION_SYSLOGHOST_ANTIMALWARE"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGHOST_INTEGRITY EnumEditableSettingKey = "CONFIGURATION_SYSLOGHOST_INTEGRITY"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGHOST_LOGINSPECTION EnumEditableSettingKey = "CONFIGURATION_SYSLOGHOST_LOGINSPECTION"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGHOST_PNP EnumEditableSettingKey = "CONFIGURATION_SYSLOGHOST_PNP"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGHOST_WRS EnumEditableSettingKey = "CONFIGURATION_SYSLOGHOST_WRS"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGHOST_APPCONTROL EnumEditableSettingKey = "CONFIGURATION_SYSLOGHOST_APPCONTROL"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGOVERRIDE_ANTIMALWARE EnumEditableSettingKey = "CONFIGURATION_SYSLOGOVERRIDE_ANTIMALWARE"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGOVERRIDE_INTEGRITY EnumEditableSettingKey = "CONFIGURATION_SYSLOGOVERRIDE_INTEGRITY"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGOVERRIDE_LOGINSPECTION EnumEditableSettingKey = "CONFIGURATION_SYSLOGOVERRIDE_LOGINSPECTION"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGOVERRIDE_PNP EnumEditableSettingKey = "CONFIGURATION_SYSLOGOVERRIDE_PNP"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGOVERRIDE_WRS EnumEditableSettingKey = "CONFIGURATION_SYSLOGOVERRIDE_WRS"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGOVERRIDE_APPCONTROL EnumEditableSettingKey = "CONFIGURATION_SYSLOGOVERRIDE_APPCONTROL"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGPORT_ANTIMALWARE EnumEditableSettingKey = "CONFIGURATION_SYSLOGPORT_ANTIMALWARE"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGPORT_INTEGRITY EnumEditableSettingKey = "CONFIGURATION_SYSLOGPORT_INTEGRITY"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGPORT_LOGINSPECTION EnumEditableSettingKey = "CONFIGURATION_SYSLOGPORT_LOGINSPECTION"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGPORT_PNP EnumEditableSettingKey = "CONFIGURATION_SYSLOGPORT_PNP"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGPORT_WRS EnumEditableSettingKey = "CONFIGURATION_SYSLOGPORT_WRS"

	EnumEditableSettingKeyCONFIGURATION_SYSLOGPORT_APPCONTROL EnumEditableSettingKey = "CONFIGURATION_SYSLOGPORT_APPCONTROL"

	EnumEditableSettingKeyCONFIGURATION_SYSTEMEVENTNOTIFICATIONSCRIPTS EnumEditableSettingKey = "CONFIGURATION_SYSTEMEVENTNOTIFICATIONSCRIPTS"

	EnumEditableSettingKeyCONFIGURATION_SYSTEMEVENTNOTIFICATIONSSNMPADDRESS EnumEditableSettingKey = "CONFIGURATION_SYSTEMEVENTNOTIFICATIONSSNMPADDRESS"

	EnumEditableSettingKeyCONFIGURATION_SYSTEMEVENTNOTIFICATIONSSNMPCOMMUNITY EnumEditableSettingKey = "CONFIGURATION_SYSTEMEVENTNOTIFICATIONSSNMPCOMMUNITY"

	EnumEditableSettingKeyCONFIGURATION_SYSTEMEVENTNOTIFICATIONSSNMPENABLED EnumEditableSettingKey = "CONFIGURATION_SYSTEMEVENTNOTIFICATIONSSNMPENABLED"

	EnumEditableSettingKeyCONFIGURATION_SYSTEMEVENTNOTIFICATIONSSNMPPORT EnumEditableSettingKey = "CONFIGURATION_SYSTEMEVENTNOTIFICATIONSSNMPPORT"

	EnumEditableSettingKeyCONFIGURATION_SYSTEMEVENTNOTIFICATIONSSNMPRETRIES EnumEditableSettingKey = "CONFIGURATION_SYSTEMEVENTNOTIFICATIONSSNMPRETRIES"

	EnumEditableSettingKeyCONFIGURATION_SYSTEMEVENTNOTIFICATIONSSNMPTIMEOUT EnumEditableSettingKey = "CONFIGURATION_SYSTEMEVENTNOTIFICATIONSSNMPTIMEOUT"

	EnumEditableSettingKeyCONFIGURATION_SYSTEMEVENTNOTIFICATIONSSYSLOGADDRESS EnumEditableSettingKey = "CONFIGURATION_SYSTEMEVENTNOTIFICATIONSSYSLOGADDRESS"

	EnumEditableSettingKeyCONFIGURATION_SYSTEMEVENTNOTIFICATIONSSYSLOGENABLED EnumEditableSettingKey = "CONFIGURATION_SYSTEMEVENTNOTIFICATIONSSYSLOGENABLED"

	EnumEditableSettingKeyCONFIGURATION_SYSTEMEVENTNOTIFICATIONSSYSLOGFACILITY EnumEditableSettingKey = "CONFIGURATION_SYSTEMEVENTNOTIFICATIONSSYSLOGFACILITY"

	EnumEditableSettingKeyCONFIGURATION_SYSTEMEVENTNOTIFICATIONSSYSLOGFORMAT EnumEditableSettingKey = "CONFIGURATION_SYSTEMEVENTNOTIFICATIONSSYSLOGFORMAT"

	EnumEditableSettingKeyCONFIGURATION_SYSTEMEVENTNOTIFICATIONSSYSLOGIDENTIFICATION EnumEditableSettingKey = "CONFIGURATION_SYSTEMEVENTNOTIFICATIONSSYSLOGIDENTIFICATION"

	EnumEditableSettingKeyCONFIGURATION_SYSTEMEVENTNOTIFICATIONSSYSLOGPORT EnumEditableSettingKey = "CONFIGURATION_SYSTEMEVENTNOTIFICATIONSSYSLOGPORT"

	EnumEditableSettingKeyCONFIGURATION_SYSTEMEVENTNOTIFICATIONSSYSLOGPREPENDTIMESTAMP EnumEditableSettingKey = "CONFIGURATION_SYSTEMEVENTNOTIFICATIONSSYSLOGPREPENDTIMESTAMP"

	EnumEditableSettingKeyCONFIGURATION_SYSTEMINTEGRITYCPULIMITLEVEL EnumEditableSettingKey = "CONFIGURATION_SYSTEMINTEGRITYCPULIMITLEVEL"

	EnumEditableSettingKeyCONFIGURATION_SYSTEMINTEGRITYHASH EnumEditableSettingKey = "CONFIGURATION_SYSTEMINTEGRITYHASH"

	EnumEditableSettingKeyCONFIGURATION_SYSTEMINTEGRITYSTATE EnumEditableSettingKey = "CONFIGURATION_SYSTEMINTEGRITYSTATE"

	EnumEditableSettingKeyCONFIGURATION_SYSTEMLOADBALANCERHEARTBEATHOSTNAME EnumEditableSettingKey = "CONFIGURATION_SYSTEMLOADBALANCERHEARTBEATHOSTNAME"

	EnumEditableSettingKeyCONFIGURATION_SYSTEMLOADBALANCERHEARTBEATPORT EnumEditableSettingKey = "CONFIGURATION_SYSTEMLOADBALANCERHEARTBEATPORT"

	EnumEditableSettingKeyCONFIGURATION_SYSTEMLOADBALANCERMANAGERHOSTNAME EnumEditableSettingKey = "CONFIGURATION_SYSTEMLOADBALANCERMANAGERHOSTNAME"

	EnumEditableSettingKeyCONFIGURATION_SYSTEMLOADBALANCERMANAGERPORT EnumEditableSettingKey = "CONFIGURATION_SYSTEMLOADBALANCERMANAGERPORT"

	EnumEditableSettingKeyCONFIGURATION_SYSTEMLOADBALANCERRELAYHOSTNAME EnumEditableSettingKey = "CONFIGURATION_SYSTEMLOADBALANCERRELAYHOSTNAME"

	EnumEditableSettingKeyCONFIGURATION_SYSTEMLOADBALANCERRELAYPORT EnumEditableSettingKey = "CONFIGURATION_SYSTEMLOADBALANCERRELAYPORT"

	EnumEditableSettingKeyCONFIGURATION_TENANTHOSTUSAGEID1 EnumEditableSettingKey = "CONFIGURATION_TENANTHOSTUSAGEID1"

	EnumEditableSettingKeyCONFIGURATION_TENANTHOSTUSAGEID2 EnumEditableSettingKey = "CONFIGURATION_TENANTHOSTUSAGEID2"

	EnumEditableSettingKeyCONFIGURATION_TENANTHOSTUSAGEID3 EnumEditableSettingKey = "CONFIGURATION_TENANTHOSTUSAGEID3"

	EnumEditableSettingKeyCONFIGURATION_TRAFFICANALYSIS_FINGERPRINT_BLOCK EnumEditableSettingKey = "CONFIGURATION_TRAFFICANALYSIS_FINGERPRINT_BLOCK"

	EnumEditableSettingKeyCONFIGURATION_TRAFFICANALYSIS_FINGERPRINT_ENABLED EnumEditableSettingKey = "CONFIGURATION_TRAFFICANALYSIS_FINGERPRINT_ENABLED"

	EnumEditableSettingKeyCONFIGURATION_TRAFFICANALYSIS_FINGERPRINT_NOTIFY EnumEditableSettingKey = "CONFIGURATION_TRAFFICANALYSIS_FINGERPRINT_NOTIFY"

	EnumEditableSettingKeyCONFIGURATION_TRAFFICANALYSIS_GLOBAL_ANALYZE EnumEditableSettingKey = "CONFIGURATION_TRAFFICANALYSIS_GLOBAL_ANALYZE"

	EnumEditableSettingKeyCONFIGURATION_TRAFFICANALYSIS_GLOBAL_ENABLED EnumEditableSettingKey = "CONFIGURATION_TRAFFICANALYSIS_GLOBAL_ENABLED"

	EnumEditableSettingKeyCONFIGURATION_TRAFFICANALYSIS_GLOBAL_IGNORE EnumEditableSettingKey = "CONFIGURATION_TRAFFICANALYSIS_GLOBAL_IGNORE"

	EnumEditableSettingKeyCONFIGURATION_TRAFFICANALYSIS_NULL_BLOCK EnumEditableSettingKey = "CONFIGURATION_TRAFFICANALYSIS_NULL_BLOCK"

	EnumEditableSettingKeyCONFIGURATION_TRAFFICANALYSIS_NULL_ENABLED EnumEditableSettingKey = "CONFIGURATION_TRAFFICANALYSIS_NULL_ENABLED"

	EnumEditableSettingKeyCONFIGURATION_TRAFFICANALYSIS_NULL_NOTIFY EnumEditableSettingKey = "CONFIGURATION_TRAFFICANALYSIS_NULL_NOTIFY"

	EnumEditableSettingKeyCONFIGURATION_TRAFFICANALYSIS_SCAN_BLOCK EnumEditableSettingKey = "CONFIGURATION_TRAFFICANALYSIS_SCAN_BLOCK"

	EnumEditableSettingKeyCONFIGURATION_TRAFFICANALYSIS_SCAN_ENABLED EnumEditableSettingKey = "CONFIGURATION_TRAFFICANALYSIS_SCAN_ENABLED"

	EnumEditableSettingKeyCONFIGURATION_TRAFFICANALYSIS_SCAN_NOTIFY EnumEditableSettingKey = "CONFIGURATION_TRAFFICANALYSIS_SCAN_NOTIFY"

	EnumEditableSettingKeyCONFIGURATION_TRAFFICANALYSIS_SYNFIN_BLOCK EnumEditableSettingKey = "CONFIGURATION_TRAFFICANALYSIS_SYNFIN_BLOCK"

	EnumEditableSettingKeyCONFIGURATION_TRAFFICANALYSIS_SYNFIN_ENABLED EnumEditableSettingKey = "CONFIGURATION_TRAFFICANALYSIS_SYNFIN_ENABLED"

	EnumEditableSettingKeyCONFIGURATION_TRAFFICANALYSIS_SYNFIN_NOTIFY EnumEditableSettingKey = "CONFIGURATION_TRAFFICANALYSIS_SYNFIN_NOTIFY"

	EnumEditableSettingKeyCONFIGURATION_TRAFFICANALYSIS_XMAS_BLOCK EnumEditableSettingKey = "CONFIGURATION_TRAFFICANALYSIS_XMAS_BLOCK"

	EnumEditableSettingKeyCONFIGURATION_TRAFFICANALYSIS_XMAS_ENABLED EnumEditableSettingKey = "CONFIGURATION_TRAFFICANALYSIS_XMAS_ENABLED"

	EnumEditableSettingKeyCONFIGURATION_TRAFFICANALYSIS_XMAS_NOTIFY EnumEditableSettingKey = "CONFIGURATION_TRAFFICANALYSIS_XMAS_NOTIFY"

	EnumEditableSettingKeyCONFIGURATION_UPDATEPROXYAUTH EnumEditableSettingKey = "CONFIGURATION_UPDATEPROXYAUTH"

	EnumEditableSettingKeyCONFIGURATION_UPDATEPROXYFLAG EnumEditableSettingKey = "CONFIGURATION_UPDATEPROXYFLAG"

	EnumEditableSettingKeyCONFIGURATION_UPDATEPROXYHOST EnumEditableSettingKey = "CONFIGURATION_UPDATEPROXYHOST"

	EnumEditableSettingKeyCONFIGURATION_UPDATEPROXYID EnumEditableSettingKey = "CONFIGURATION_UPDATEPROXYID"

	EnumEditableSettingKeyCONFIGURATION_UPDATEPROXYPASS EnumEditableSettingKey = "CONFIGURATION_UPDATEPROXYPASS"

	EnumEditableSettingKeyCONFIGURATION_UPDATEPROXYPORT EnumEditableSettingKey = "CONFIGURATION_UPDATEPROXYPORT"

	EnumEditableSettingKeyCONFIGURATION_UPDATEPROXYTYPE EnumEditableSettingKey = "CONFIGURATION_UPDATEPROXYTYPE"

	EnumEditableSettingKeyCONFIGURATION_UPDATEPROXYUSER EnumEditableSettingKey = "CONFIGURATION_UPDATEPROXYUSER"

	EnumEditableSettingKeyCONFIGURATION_UPDATESOURCE EnumEditableSettingKey = "CONFIGURATION_UPDATESOURCE"

	EnumEditableSettingKeyCONFIGURATION_UPDATESOURCE_INTRANET_UNC EnumEditableSettingKey = "CONFIGURATION_UPDATESOURCE_INTRANET_UNC"

	EnumEditableSettingKeyCONFIGURATION_UPDATESOURCE_INTRANET_PASSWORD EnumEditableSettingKey = "CONFIGURATION_UPDATESOURCE_INTRANET_PASSWORD"

	EnumEditableSettingKeyCONFIGURATION_UPDATESOURCE_INTRANET_USER EnumEditableSettingKey = "CONFIGURATION_UPDATESOURCE_INTRANET_USER"

	EnumEditableSettingKeyCONFIGURATION_UPDATESOURCE_OTHERAU_URL EnumEditableSettingKey = "CONFIGURATION_UPDATESOURCE_OTHERAU_URL"

	EnumEditableSettingKeyCONFIGURATION_UPDATEWEBSERVERLIST EnumEditableSettingKey = "CONFIGURATION_UPDATEWEBSERVERLIST"

	EnumEditableSettingKeyCONFIGURATION_VSUAUTOASSIGN EnumEditableSettingKey = "CONFIGURATION_VSUAUTOASSIGN"

	EnumEditableSettingKeyCONFIGURATION_VULNERABILITYSHIELDSTATE EnumEditableSettingKey = "CONFIGURATION_VULNERABILITYSHIELDSTATE"

	EnumEditableSettingKeyCONFIGURATION_WEBREPUTATIONALERTINGON EnumEditableSettingKey = "CONFIGURATION_WEBREPUTATIONALERTINGON"

	EnumEditableSettingKeyCONFIGURATION_WEBREPUTATIONALLOWEDDOMAINURLS EnumEditableSettingKey = "CONFIGURATION_WEBREPUTATIONALLOWEDDOMAINURLS"

	EnumEditableSettingKeyCONFIGURATION_WEBREPUTATIONALLOWEDPAGEURLS EnumEditableSettingKey = "CONFIGURATION_WEBREPUTATIONALLOWEDPAGEURLS"

	EnumEditableSettingKeyCONFIGURATION_WEBREPUTATIONBLOCKUNTESTEDPAGES EnumEditableSettingKey = "CONFIGURATION_WEBREPUTATIONBLOCKUNTESTEDPAGES"

	EnumEditableSettingKeyCONFIGURATION_WEBREPUTATIONBLOCKEDBYADMINISTRATORRANK EnumEditableSettingKey = "CONFIGURATION_WEBREPUTATIONBLOCKEDBYADMINISTRATORRANK"

	EnumEditableSettingKeyCONFIGURATION_WEBREPUTATIONBLOCKEDDOMAINURLS EnumEditableSettingKey = "CONFIGURATION_WEBREPUTATIONBLOCKEDDOMAINURLS"

	EnumEditableSettingKeyCONFIGURATION_WEBREPUTATIONBLOCKEDKEYWORDS EnumEditableSettingKey = "CONFIGURATION_WEBREPUTATIONBLOCKEDKEYWORDS"

	EnumEditableSettingKeyCONFIGURATION_WEBREPUTATIONBLOCKEDPAGELINK EnumEditableSettingKey = "CONFIGURATION_WEBREPUTATIONBLOCKEDPAGELINK"

	EnumEditableSettingKeyCONFIGURATION_WEBREPUTATIONBLOCKEDPAGEURLS EnumEditableSettingKey = "CONFIGURATION_WEBREPUTATIONBLOCKEDPAGEURLS"

	EnumEditableSettingKeyCONFIGURATION_WEBREPUTATIONDANGEROUSRANK EnumEditableSettingKey = "CONFIGURATION_WEBREPUTATIONDANGEROUSRANK"

	EnumEditableSettingKeyCONFIGURATION_WEBREPUTATIONENABLED EnumEditableSettingKey = "CONFIGURATION_WEBREPUTATIONENABLED"

	EnumEditableSettingKeyCONFIGURATION_WEBREPUTATIONHIGHLYSUSPICIOUSRANK EnumEditableSettingKey = "CONFIGURATION_WEBREPUTATIONHIGHLYSUSPICIOUSRANK"

	EnumEditableSettingKeyCONFIGURATION_WEBREPUTATIONPORTS EnumEditableSettingKey = "CONFIGURATION_WEBREPUTATIONPORTS"

	EnumEditableSettingKeyCONFIGURATION_WEBREPUTATIONSECURITYLEVEL EnumEditableSettingKey = "CONFIGURATION_WEBREPUTATIONSECURITYLEVEL"

	EnumEditableSettingKeyCONFIGURATION_WEBREPUTATIONSMARTSCANERRORENABLED EnumEditableSettingKey = "CONFIGURATION_WEBREPUTATIONSMARTSCANERRORENABLED"

	EnumEditableSettingKeyCONFIGURATION_WEBREPUTATIONSUSPICIOUSRANK EnumEditableSettingKey = "CONFIGURATION_WEBREPUTATIONSUSPICIOUSRANK"

	EnumEditableSettingKeyCONFIGURATION_WEBREPUTATIONUNTESTEDRANK EnumEditableSettingKey = "CONFIGURATION_WEBREPUTATIONUNTESTEDRANK"

	EnumEditableSettingKeyCONFIGURATION_WEBSERVICEAPIENABLED EnumEditableSettingKey = "CONFIGURATION_WEBSERVICEAPIENABLED"

	EnumEditableSettingKeyLICENSES_HISTORIC EnumEditableSettingKey = "LICENSES_HISTORIC"

	EnumEditableSettingKeySECURITY_ACTIVESESSIONSALLOWED EnumEditableSettingKey = "SECURITY_ACTIVESESSIONSALLOWED"

	EnumEditableSettingKeySECURITY_ADMINISTRATORPASSWORDEXPIRY EnumEditableSettingKey = "SECURITY_ADMINISTRATORPASSWORDEXPIRY"

	EnumEditableSettingKeySECURITY_ADMINISTRATORPASSWORDMINIMUMLENGTH EnumEditableSettingKey = "SECURITY_ADMINISTRATORPASSWORDMINIMUMLENGTH"

	EnumEditableSettingKeySECURITY_ADMINISTRATORPASSWORDREQUIRECASE EnumEditableSettingKey = "SECURITY_ADMINISTRATORPASSWORDREQUIRECASE"

	EnumEditableSettingKeySECURITY_ADMINISTRATORPASSWORDREQUIREMIX EnumEditableSettingKey = "SECURITY_ADMINISTRATORPASSWORDREQUIREMIX"

	EnumEditableSettingKeySECURITY_ADMINISTRATORPASSWORDREQUIRESPECIAL EnumEditableSettingKey = "SECURITY_ADMINISTRATORPASSWORDREQUIRESPECIAL"

	EnumEditableSettingKeySECURITY_MINUTESTOTIMEOUT EnumEditableSettingKey = "SECURITY_MINUTESTOTIMEOUT"

	EnumEditableSettingKeySECURITY_SIGNINATTEMPTSALLOWED EnumEditableSettingKey = "SECURITY_SIGNINATTEMPTSALLOWED"

	EnumEditableSettingKeySMTP_BOUNCEEMAIL EnumEditableSettingKey = "SMTP_BOUNCEEMAIL"

	EnumEditableSettingKeySMTP_FROMEMAIL EnumEditableSettingKey = "SMTP_FROMEMAIL"

	EnumEditableSettingKeySMTP_PASSWORD EnumEditableSettingKey = "SMTP_PASSWORD"

	EnumEditableSettingKeySMTP_REQUIRESAUTHENTICATION EnumEditableSettingKey = "SMTP_REQUIRESAUTHENTICATION"

	EnumEditableSettingKeySMTP_STARTTLS EnumEditableSettingKey = "SMTP_STARTTLS"

	EnumEditableSettingKeySMTP_URL EnumEditableSettingKey = "SMTP_URL"

	EnumEditableSettingKeySMTP_USERNAME EnumEditableSettingKey = "SMTP_USERNAME"

	EnumEditableSettingKeyWHOIS_IP EnumEditableSettingKey = "WHOIS_IP"
)

type EnumEditableSettingUnit string

const (
	EnumEditableSettingUnitIPLIST_ID EnumEditableSettingUnit = "IPLIST_ID"

	EnumEditableSettingUnitPORTLIST_ID EnumEditableSettingUnit = "PORTLIST_ID"

	EnumEditableSettingUnitNONE EnumEditableSettingUnit = "NONE"

	EnumEditableSettingUnitSECONDS EnumEditableSettingUnit = "SECONDS"

	EnumEditableSettingUnitMINUTES EnumEditableSettingUnit = "MINUTES"

	EnumEditableSettingUnitHOURS EnumEditableSettingUnit = "HOURS"

	EnumEditableSettingUnitDAYS EnumEditableSettingUnit = "DAYS"

	EnumEditableSettingUnitWEEKS EnumEditableSettingUnit = "WEEKS"

	EnumEditableSettingUnitMONTHS EnumEditableSettingUnit = "MONTHS"

	EnumEditableSettingUnitYEARS EnumEditableSettingUnit = "YEARS"

	EnumEditableSettingUnitKBYTES EnumEditableSettingUnit = "KBYTES"

	EnumEditableSettingUnitMBYTES EnumEditableSettingUnit = "MBYTES"

	EnumEditableSettingUnitPERCENT EnumEditableSettingUnit = "PERCENT"

	EnumEditableSettingUnitPORT EnumEditableSettingUnit = "PORT"

	EnumEditableSettingUnitHOST EnumEditableSettingUnit = "HOST"

	EnumEditableSettingUnitEMAIL EnumEditableSettingUnit = "EMAIL"
)

type EnumEditableSettingStoredScope string

const (
	EnumEditableSettingStoredScopeHOST EnumEditableSettingStoredScope = "HOST"

	EnumEditableSettingStoredScopePROFILE EnumEditableSettingStoredScope = "PROFILE"

	EnumEditableSettingStoredScopeSYSTEM EnumEditableSettingStoredScope = "SYSTEM"
)

type EnumDPIRuleAction string

const (
	EnumDPIRuleActionDROP_CLOSE EnumDPIRuleAction = "DROP_CLOSE"

	EnumDPIRuleActionLOG_ONLY EnumDPIRuleAction = "LOG_ONLY"
)

type EnumDPIRuleIf string

const (
	EnumDPIRuleIfALL_PATTERNS_FOUND EnumDPIRuleIf = "ALL_PATTERNS_FOUND"

	EnumDPIRuleIfANY_PATTERNS_FOUND EnumDPIRuleIf = "ANY_PATTERNS_FOUND"

	EnumDPIRuleIfNO_PATTERNS_FOUND EnumDPIRuleIf = "NO_PATTERNS_FOUND"
)

type EnumDPIRulePriority string

const (
	EnumDPIRulePriorityHIGHEST EnumDPIRulePriority = "HIGHEST"

	EnumDPIRulePriorityHIGH EnumDPIRulePriority = "HIGH"

	EnumDPIRulePriorityNORMAL EnumDPIRulePriority = "NORMAL"

	EnumDPIRulePriorityLOW EnumDPIRulePriority = "LOW"

	EnumDPIRulePriorityLOWEST EnumDPIRulePriority = "LOWEST"
)

type EnumDPIRuleSeverity string

const (
	EnumDPIRuleSeverityCRITICAL EnumDPIRuleSeverity = "CRITICAL"

	EnumDPIRuleSeverityHIGH EnumDPIRuleSeverity = "HIGH"

	EnumDPIRuleSeverityMEDIUM EnumDPIRuleSeverity = "MEDIUM"

	EnumDPIRuleSeverityLOW EnumDPIRuleSeverity = "LOW"
)

type EnumDPIRuleTemplateType string

const (
	EnumDPIRuleTemplateTypeCUSTOM_XML EnumDPIRuleTemplateType = "CUSTOM_XML"

	EnumDPIRuleTemplateTypeSIGNATURE EnumDPIRuleTemplateType = "SIGNATURE"

	EnumDPIRuleTemplateTypeSTART_END_PATTERNS EnumDPIRuleTemplateType = "START_END_PATTERNS"
)

type EnumAntiMalwareFilesToScan string

const (
	EnumAntiMalwareFilesToScanALLFILES EnumAntiMalwareFilesToScan = "ALLFILES"

	EnumAntiMalwareFilesToScanINTELLISCAN EnumAntiMalwareFilesToScan = "INTELLISCAN"

	EnumAntiMalwareFilesToScanEXTLISTSCAN EnumAntiMalwareFilesToScan = "EXTLISTSCAN"
)

type EnumAntiMalwareScanCustomAction string

const (
	EnumAntiMalwareScanCustomActionUNSPECIFIED EnumAntiMalwareScanCustomAction = "UNSPECIFIED"

	EnumAntiMalwareScanCustomActionPASS EnumAntiMalwareScanCustomAction = "PASS"

	EnumAntiMalwareScanCustomActionDELETE EnumAntiMalwareScanCustomAction = "DELETE"

	EnumAntiMalwareScanCustomActionQUARANTINE EnumAntiMalwareScanCustomAction = "QUARANTINE"

	EnumAntiMalwareScanCustomActionCLEAN EnumAntiMalwareScanCustomAction = "CLEAN"

	EnumAntiMalwareScanCustomActionDENY_ACCESS EnumAntiMalwareScanCustomAction = "DENY_ACCESS"
)

type EnumAntiMalwareFoldersToScan string

const (
	EnumAntiMalwareFoldersToScanALLFOLDERS EnumAntiMalwareFoldersToScan = "ALLFOLDERS"

	EnumAntiMalwareFoldersToScanSPECIFIEDFOLDERS EnumAntiMalwareFoldersToScan = "SPECIFIEDFOLDERS"
)

type EnumAntiMalwareScanAction string

const (
	EnumAntiMalwareScanActionINTELLIACTION EnumAntiMalwareScanAction = "INTELLIACTION"

	EnumAntiMalwareScanActionCUSTOMACTION EnumAntiMalwareScanAction = "CUSTOMACTION"
)

type EnumAntiMalwareScanFilesActivity string

const (
	EnumAntiMalwareScanFilesActivityREAD_ONLY EnumAntiMalwareScanFilesActivity = "READ_ONLY"

	EnumAntiMalwareScanFilesActivityWRITE_ONLY EnumAntiMalwareScanFilesActivity = "WRITE_ONLY"

	EnumAntiMalwareScanFilesActivityREAD_WRITE EnumAntiMalwareScanFilesActivity = "READ_WRITE"
)

type EnumAntiMalwareConfigType string

const (
	EnumAntiMalwareConfigTypeCONFIGURATIONTYPE_RTS EnumAntiMalwareConfigType = "CONFIGURATIONTYPE_RTS"

	EnumAntiMalwareConfigTypeCONFIGURATIONTYPE_ODS EnumAntiMalwareConfigType = "CONFIGURATIONTYPE_ODS"
)

type EnumAntiMalwareCpuUsage string

const (
	EnumAntiMalwareCpuUsageCPUUSAGE_LOW EnumAntiMalwareCpuUsage = "CPUUSAGE_LOW"

	EnumAntiMalwareCpuUsageCPUUSAGE_MEDIUM EnumAntiMalwareCpuUsage = "CPUUSAGE_MEDIUM"

	EnumAntiMalwareCpuUsageCPUUSAGE_HIGH EnumAntiMalwareCpuUsage = "CPUUSAGE_HIGH"
)

type EnumProtectionType string

const (
	EnumProtectionTypeNONE EnumProtectionType = "NONE"

	EnumProtectionTypeAGENT EnumProtectionType = "AGENT"

	EnumProtectionTypeAPPLIANCE EnumProtectionType = "APPLIANCE"
)

type EnumState string

const (
	EnumStateNEUTRAL EnumState = "NEUTRAL"

	EnumStateVM_STOPPED EnumState = "VM_STOPPED"

	EnumStateVM_PAUSED EnumState = "VM_PAUSED"

	EnumStateSTANDBY EnumState = "STANDBY"

	EnumStateUNKNOWN EnumState = "UNKNOWN"

	EnumStateNONE EnumState = "NONE"

	EnumStateINSTALLED EnumState = "INSTALLED"

	EnumStateHAS_DSM_CERT EnumState = "HAS_DSM_CERT"

	EnumStateACTIVATED EnumState = "ACTIVATED"

	EnumStateOTHER_DSM_AGENT EnumState = "OTHER_DSM_AGENT"

	EnumStateOFFLINE EnumState = "OFFLINE"
)

type EnumFirewallRuleAction string

const (
	EnumFirewallRuleActionLOG_ONLY EnumFirewallRuleAction = "LOG_ONLY"

	EnumFirewallRuleActionALLOW EnumFirewallRuleAction = "ALLOW"

	EnumFirewallRuleActionDENY EnumFirewallRuleAction = "DENY"

	EnumFirewallRuleActionFORCE_ALLOW EnumFirewallRuleAction = "FORCE_ALLOW"

	EnumFirewallRuleActionBYPASS EnumFirewallRuleAction = "BYPASS"
)

type EnumFirewallRuleIPType string

const (
	EnumFirewallRuleIPTypeANY EnumFirewallRuleIPType = "ANY"

	EnumFirewallRuleIPTypeMASKED_IP EnumFirewallRuleIPType = "MASKED_IP"

	EnumFirewallRuleIPTypeRANGE EnumFirewallRuleIPType = "RANGE"

	EnumFirewallRuleIPTypeDEFINED_LIST EnumFirewallRuleIPType = "DEFINED_LIST"

	EnumFirewallRuleIPTypeSINGLE_IP EnumFirewallRuleIPType = "SINGLE_IP"
)

type EnumMACType string

const (
	EnumMACTypeANY EnumMACType = "ANY"

	EnumMACTypeMAC EnumMACType = "MAC"

	EnumMACTypeDEFINED_LIST EnumMACType = "DEFINED_LIST"
)

type EnumFirewallRuleFrameType string

const (
	EnumFirewallRuleFrameTypeANY EnumFirewallRuleFrameType = "ANY"

	EnumFirewallRuleFrameTypeIP EnumFirewallRuleFrameType = "IP"

	EnumFirewallRuleFrameTypeIPv4 EnumFirewallRuleFrameType = "IPv4"

	EnumFirewallRuleFrameTypeIPv6 EnumFirewallRuleFrameType = "IPv6"

	EnumFirewallRuleFrameTypeARP EnumFirewallRuleFrameType = "ARP"

	EnumFirewallRuleFrameTypeREVARP EnumFirewallRuleFrameType = "REVARP"

	EnumFirewallRuleFrameTypeOTHER EnumFirewallRuleFrameType = "OTHER"
)

type EnumDirection string

const (
	EnumDirectionINCOMING EnumDirection = "INCOMING"

	EnumDirectionOUTGOING EnumDirection = "OUTGOING"
)

type EnumFirewallRulePriority string

const (
	EnumFirewallRulePriorityHIGHEST EnumFirewallRulePriority = "HIGHEST"

	EnumFirewallRulePriorityHIGH EnumFirewallRulePriority = "HIGH"

	EnumFirewallRulePriorityNORMAL EnumFirewallRulePriority = "NORMAL"

	EnumFirewallRulePriorityLOW EnumFirewallRulePriority = "LOW"

	EnumFirewallRulePriorityLOWEST EnumFirewallRulePriority = "LOWEST"
)

type EnumFirewallRuleProtocolType string

const (
	EnumFirewallRuleProtocolTypeANY EnumFirewallRuleProtocolType = "ANY"

	EnumFirewallRuleProtocolTypeICMP EnumFirewallRuleProtocolType = "ICMP"

	EnumFirewallRuleProtocolTypeICMPV6 EnumFirewallRuleProtocolType = "ICMPV6"

	EnumFirewallRuleProtocolTypeIGMP EnumFirewallRuleProtocolType = "IGMP"

	EnumFirewallRuleProtocolTypeGGP EnumFirewallRuleProtocolType = "GGP"

	EnumFirewallRuleProtocolTypeTCP EnumFirewallRuleProtocolType = "TCP"

	EnumFirewallRuleProtocolTypePUP EnumFirewallRuleProtocolType = "PUP"

	EnumFirewallRuleProtocolTypeUDP EnumFirewallRuleProtocolType = "UDP"

	EnumFirewallRuleProtocolTypeIDP EnumFirewallRuleProtocolType = "IDP"

	EnumFirewallRuleProtocolTypeND EnumFirewallRuleProtocolType = "ND"

	EnumFirewallRuleProtocolTypeRAW EnumFirewallRuleProtocolType = "RAW"

	EnumFirewallRuleProtocolTypeTCP_UDP EnumFirewallRuleProtocolType = "TCP_UDP"

	EnumFirewallRuleProtocolTypeOTHER EnumFirewallRuleProtocolType = "OTHER"
)

type EnumJobType string

const (
	EnumJobTypeUPDATE EnumJobType = "UPDATE"
)

type EnumCounterFilter string

const (
	EnumCounterFilterANTI_MALWARE_COMPUTER_ACTIVITY EnumCounterFilter = "ANTI_MALWARE_COMPUTER_ACTIVITY"

	EnumCounterFilterINTEGRITY_COMPUTER_ACTIVITY EnumCounterFilter = "INTEGRITY_COMPUTER_ACTIVITY"

	EnumCounterFilterLOG_INSPECTION_COMPUTER_ACTIVITY EnumCounterFilter = "LOG_INSPECTION_COMPUTER_ACTIVITY"

	EnumCounterFilterFIREWALL_DETECT_COMPUTER_ACTIVITY EnumCounterFilter = "FIREWALL_DETECT_COMPUTER_ACTIVITY"

	EnumCounterFilterFIREWALL_PREVENT_COMPUTER_ACTIVITY EnumCounterFilter = "FIREWALL_PREVENT_COMPUTER_ACTIVITY"

	EnumCounterFilterFIREWALL_ALL_COMPUTER_ACTIVITY EnumCounterFilter = "FIREWALL_ALL_COMPUTER_ACTIVITY"

	EnumCounterFilterDPI_DETECT_COMPUTER_ACTIVITY EnumCounterFilter = "DPI_DETECT_COMPUTER_ACTIVITY"

	EnumCounterFilterDPI_PREVENT_COMPUTER_ACTIVITY EnumCounterFilter = "DPI_PREVENT_COMPUTER_ACTIVITY"

	EnumCounterFilterDPI_ALL_COMPUTER_ACTIVITY EnumCounterFilter = "DPI_ALL_COMPUTER_ACTIVITY"

	EnumCounterFilterANTI_MALWARE_ACTIVITY EnumCounterFilter = "ANTI_MALWARE_ACTIVITY"

	EnumCounterFilterANTI_MALWARE_INCOMPLETE_SCAN EnumCounterFilter = "ANTI_MALWARE_INCOMPLETE_SCAN"

	EnumCounterFilterFIREWALL_PREVENT_RULES EnumCounterFilter = "FIREWALL_PREVENT_RULES"

	EnumCounterFilterFIREWALL_DETECT_RULES EnumCounterFilter = "FIREWALL_DETECT_RULES"

	EnumCounterFilterFIREWALL_PREVENT_COMMON_EVENTS EnumCounterFilter = "FIREWALL_PREVENT_COMMON_EVENTS"

	EnumCounterFilterFIREWALL_DETECT_COMMON_EVENTS EnumCounterFilter = "FIREWALL_DETECT_COMMON_EVENTS"

	EnumCounterFilterFIREWALL_PREVENT_ACTIVITY EnumCounterFilter = "FIREWALL_PREVENT_ACTIVITY"

	EnumCounterFilterFIREWALL_DETECT_ACTIVITY EnumCounterFilter = "FIREWALL_DETECT_ACTIVITY"

	EnumCounterFilterFIREWALL_ALL_ACTIVITY EnumCounterFilter = "FIREWALL_ALL_ACTIVITY"

	EnumCounterFilterFIREWALL_PREVENT_IP_ACTIVITY EnumCounterFilter = "FIREWALL_PREVENT_IP_ACTIVITY"

	EnumCounterFilterFIREWALL_DETECT_IP_ACTIVITY EnumCounterFilter = "FIREWALL_DETECT_IP_ACTIVITY"

	EnumCounterFilterFIREWALL_PREVENT_PORT_ACTIVITY EnumCounterFilter = "FIREWALL_PREVENT_PORT_ACTIVITY"

	EnumCounterFilterFIREWALL_DETECT_PORT_ACTIVITY EnumCounterFilter = "FIREWALL_DETECT_PORT_ACTIVITY"

	EnumCounterFilterDPI_PREVENT_RULES EnumCounterFilter = "DPI_PREVENT_RULES"

	EnumCounterFilterDPI_DETECT_RULES EnumCounterFilter = "DPI_DETECT_RULES"

	EnumCounterFilterDPI_ALL_RULES EnumCounterFilter = "DPI_ALL_RULES"

	EnumCounterFilterDPI_PREVENT_COMMON_EVENTS EnumCounterFilter = "DPI_PREVENT_COMMON_EVENTS"

	EnumCounterFilterDPI_DETECT_COMMON_EVENTS EnumCounterFilter = "DPI_DETECT_COMMON_EVENTS"

	EnumCounterFilterDPI_ALL_COMMON_EVENTS EnumCounterFilter = "DPI_ALL_COMMON_EVENTS"

	EnumCounterFilterDPI_PREVENT_ACTIVITY EnumCounterFilter = "DPI_PREVENT_ACTIVITY"

	EnumCounterFilterDPI_DETECT_ACTIVITY EnumCounterFilter = "DPI_DETECT_ACTIVITY"

	EnumCounterFilterDPI_PREVENT_IP_ACTIVITY EnumCounterFilter = "DPI_PREVENT_IP_ACTIVITY"

	EnumCounterFilterDPI_DETECT_IP_ACTIVITY EnumCounterFilter = "DPI_DETECT_IP_ACTIVITY"

	EnumCounterFilterDPI_PREVENT_APP_TYPE_ACTIVITY EnumCounterFilter = "DPI_PREVENT_APP_TYPE_ACTIVITY"

	EnumCounterFilterDPI_DETECT_APP_TYPE_ACTIVITY EnumCounterFilter = "DPI_DETECT_APP_TYPE_ACTIVITY"

	EnumCounterFilterINTEGRITY_ACTIVITY EnumCounterFilter = "INTEGRITY_ACTIVITY"

	EnumCounterFilterINTEGRITY_KEY_ACTIVITY EnumCounterFilter = "INTEGRITY_KEY_ACTIVITY"

	EnumCounterFilterLOG_INSPECTION_ACTIVITY EnumCounterFilter = "LOG_INSPECTION_ACTIVITY"

	EnumCounterFilterLOG_INSPECTION_DESCRIPTION_ACTIVITY EnumCounterFilter = "LOG_INSPECTION_DESCRIPTION_ACTIVITY"

	EnumCounterFilterALERT_TYPE EnumCounterFilter = "ALERT_TYPE"

	EnumCounterFilterRECONNAISSANCE_SCAN_ACTIVITY EnumCounterFilter = "RECONNAISSANCE_SCAN_ACTIVITY"

	EnumCounterFilterSYSTEM_EVENT_SUMMARY EnumCounterFilter = "SYSTEM_EVENT_SUMMARY"

	EnumCounterFilterWEB_REPUTATION_COMPUTER_ACTIVITY EnumCounterFilter = "WEB_REPUTATION_COMPUTER_ACTIVITY"

	EnumCounterFilterWEB_REPUTATION_URL_ACTIVITY EnumCounterFilter = "WEB_REPUTATION_URL_ACTIVITY"

	EnumCounterFilterRANSOMWARE_ANTIMALWARE_COMPUTER_ACTIVITY EnumCounterFilter = "RANSOMWARE_ANTIMALWARE_COMPUTER_ACTIVITY"

	EnumCounterFilterRANSOMWARE_WEBREPUTATION_COMPUTER_ACTIVITY EnumCounterFilter = "RANSOMWARE_WEBREPUTATION_COMPUTER_ACTIVITY"

	EnumCounterFilterRANSOMWARE_PAYLOAD_COMPUTER_ACTIVITY EnumCounterFilter = "RANSOMWARE_PAYLOAD_COMPUTER_ACTIVITY"

	EnumCounterFilterRANSOMWARE_INTEGRITY_COMPUTER_ACTIVITY EnumCounterFilter = "RANSOMWARE_INTEGRITY_COMPUTER_ACTIVITY"
)

type EnumTagFilterType string

const (
	EnumTagFilterTypeALL EnumTagFilterType = "ALL"

	EnumTagFilterTypeUNTAGGED EnumTagFilterType = "UNTAGGED"

	EnumTagFilterTypeTAGS EnumTagFilterType = "TAGS"
)

type EnumProtocolIcmpType string

const (
	EnumProtocolIcmpTypeICMP_ECHO EnumProtocolIcmpType = "ICMP_ECHO"

	EnumProtocolIcmpTypeICMP_TIMESTAMP EnumProtocolIcmpType = "ICMP_TIMESTAMP"

	EnumProtocolIcmpTypeICMP_INFORMATION EnumProtocolIcmpType = "ICMP_INFORMATION"

	EnumProtocolIcmpTypeICMP_ADDRESS_MASK EnumProtocolIcmpType = "ICMP_ADDRESS_MASK"

	EnumProtocolIcmpTypeICMP_MOBILE_REGISTRATION EnumProtocolIcmpType = "ICMP_MOBILE_REGISTRATION"
)

type EnumApplicationTypeProtocolType string

const (
	EnumApplicationTypeProtocolTypeICMP EnumApplicationTypeProtocolType = "ICMP"

	EnumApplicationTypeProtocolTypeTCP EnumApplicationTypeProtocolType = "TCP"

	EnumApplicationTypeProtocolTypeUDP EnumApplicationTypeProtocolType = "UDP"

	EnumApplicationTypeProtocolTypeTCP_UDP EnumApplicationTypeProtocolType = "TCP_UDP"
)

type EnumSecurityUpdateAppliedState string

const (
	EnumSecurityUpdateAppliedStateAPPLIED EnumSecurityUpdateAppliedState = "APPLIED"

	EnumSecurityUpdateAppliedStateAPPLIED_CURRENT EnumSecurityUpdateAppliedState = "APPLIED_CURRENT"

	EnumSecurityUpdateAppliedStateNOT_APPLIED EnumSecurityUpdateAppliedState = "NOT_APPLIED"
)

type EnumIntegrityRuleSeverity string

const (
	EnumIntegrityRuleSeverityCRITICAL EnumIntegrityRuleSeverity = "CRITICAL"

	EnumIntegrityRuleSeverityHIGH EnumIntegrityRuleSeverity = "HIGH"

	EnumIntegrityRuleSeverityMEDIUM EnumIntegrityRuleSeverity = "MEDIUM"

	EnumIntegrityRuleSeverityLOW EnumIntegrityRuleSeverity = "LOW"
)

type EnumSecurityProfileDPIState string

const (
	EnumSecurityProfileDPIStateON EnumSecurityProfileDPIState = "ON"

	EnumSecurityProfileDPIStateOFF EnumSecurityProfileDPIState = "OFF"

	EnumSecurityProfileDPIStatePASSIVE EnumSecurityProfileDPIState = "PASSIVE"

	EnumSecurityProfileDPIStateINHERITED EnumSecurityProfileDPIState = "INHERITED"
)

type EnumSecurityProfileAntiMalwareState string

const (
	EnumSecurityProfileAntiMalwareStateON EnumSecurityProfileAntiMalwareState = "ON"

	EnumSecurityProfileAntiMalwareStateOFF EnumSecurityProfileAntiMalwareState = "OFF"

	EnumSecurityProfileAntiMalwareStateINHERITED EnumSecurityProfileAntiMalwareState = "INHERITED"
)

type EnumSecurityProfileFirewallState string

const (
	EnumSecurityProfileFirewallStateON EnumSecurityProfileFirewallState = "ON"

	EnumSecurityProfileFirewallStateOFF EnumSecurityProfileFirewallState = "OFF"

	EnumSecurityProfileFirewallStateINHERITED EnumSecurityProfileFirewallState = "INHERITED"
)

type EnumSecurityProfileIntegrityState string

const (
	EnumSecurityProfileIntegrityStateREALTIME EnumSecurityProfileIntegrityState = "REALTIME"

	EnumSecurityProfileIntegrityStateON EnumSecurityProfileIntegrityState = "ON"

	EnumSecurityProfileIntegrityStateOFF EnumSecurityProfileIntegrityState = "OFF"

	EnumSecurityProfileIntegrityStateINHERITED EnumSecurityProfileIntegrityState = "INHERITED"
)

type EnumSecurityProfileLogInspectionState string

const (
	EnumSecurityProfileLogInspectionStateON EnumSecurityProfileLogInspectionState = "ON"

	EnumSecurityProfileLogInspectionStateOFF EnumSecurityProfileLogInspectionState = "OFF"

	EnumSecurityProfileLogInspectionStateINHERITED EnumSecurityProfileLogInspectionState = "INHERITED"
)

type EnumSecurityProfileRecommendationState string

const (
	EnumSecurityProfileRecommendationStateOFF EnumSecurityProfileRecommendationState = "OFF"

	EnumSecurityProfileRecommendationStateONGOING EnumSecurityProfileRecommendationState = "ONGOING"
)

type EnumCounterSumFilter string

const (
	EnumCounterSumFilterFIREWALL_PREVENT_ACTIVITY EnumCounterSumFilter = "FIREWALL_PREVENT_ACTIVITY"

	EnumCounterSumFilterFIREWALL_DETECT_ACTIVITY EnumCounterSumFilter = "FIREWALL_DETECT_ACTIVITY"

	EnumCounterSumFilterFIREWALL_PREVENT_RULES EnumCounterSumFilter = "FIREWALL_PREVENT_RULES"

	EnumCounterSumFilterFIREWALL_DETECT_RULES EnumCounterSumFilter = "FIREWALL_DETECT_RULES"

	EnumCounterSumFilterFIREWALL_PREVENT_COMMON_EVENTS EnumCounterSumFilter = "FIREWALL_PREVENT_COMMON_EVENTS"

	EnumCounterSumFilterFIREWALL_DETECT_COMMON_EVENTS EnumCounterSumFilter = "FIREWALL_DETECT_COMMON_EVENTS"

	EnumCounterSumFilterDPI_PREVENT_ACTIVITY EnumCounterSumFilter = "DPI_PREVENT_ACTIVITY"

	EnumCounterSumFilterDPI_DETECT_ACTIVITY EnumCounterSumFilter = "DPI_DETECT_ACTIVITY"

	EnumCounterSumFilterDPI_PREVENT_RULES EnumCounterSumFilter = "DPI_PREVENT_RULES"

	EnumCounterSumFilterDPI_DETECT_RULES EnumCounterSumFilter = "DPI_DETECT_RULES"

	EnumCounterSumFilterDPI_PREVENT_COMMON_EVENTS EnumCounterSumFilter = "DPI_PREVENT_COMMON_EVENTS"

	EnumCounterSumFilterDPI_DETECT_COMMON_EVENTS EnumCounterSumFilter = "DPI_DETECT_COMMON_EVENTS"

	EnumCounterSumFilterINTEGRITY_ACTIVITY EnumCounterSumFilter = "INTEGRITY_ACTIVITY"

	EnumCounterSumFilterANTI_MALWARE_ACTIVITY EnumCounterSumFilter = "ANTI_MALWARE_ACTIVITY"

	EnumCounterSumFilterLOG_INSPECTION_ACTIVITY EnumCounterSumFilter = "LOG_INSPECTION_ACTIVITY"

	EnumCounterSumFilterLOG_INSPECTION_SEVERITY_LOW EnumCounterSumFilter = "LOG_INSPECTION_SEVERITY_LOW"

	EnumCounterSumFilterLOG_INSPECTION_SEVERITY_MEDIUM EnumCounterSumFilter = "LOG_INSPECTION_SEVERITY_MEDIUM"

	EnumCounterSumFilterLOG_INSPECTION_SEVERITY_HIGH EnumCounterSumFilter = "LOG_INSPECTION_SEVERITY_HIGH"

	EnumCounterSumFilterLOG_INSPECTION_SEVERITY_CRITICAL EnumCounterSumFilter = "LOG_INSPECTION_SEVERITY_CRITICAL"

	EnumCounterSumFilterINTEGRITY_SEVERITY_LOW EnumCounterSumFilter = "INTEGRITY_SEVERITY_LOW"

	EnumCounterSumFilterINTEGRITY_SEVERITY_MEDIUM EnumCounterSumFilter = "INTEGRITY_SEVERITY_MEDIUM"

	EnumCounterSumFilterINTEGRITY_SEVERITY_HIGH EnumCounterSumFilter = "INTEGRITY_SEVERITY_HIGH"

	EnumCounterSumFilterINTEGRITY_SEVERITY_CRITICAL EnumCounterSumFilter = "INTEGRITY_SEVERITY_CRITICAL"

	EnumCounterSumFilterANTI_MALWARE_SCANACTION_PASS EnumCounterSumFilter = "ANTI_MALWARE_SCANACTION_PASS"

	EnumCounterSumFilterANTI_MALWARE_SCANACTION_DELETE EnumCounterSumFilter = "ANTI_MALWARE_SCANACTION_DELETE"

	EnumCounterSumFilterANTI_MALWARE_SCANACTION_QUARANTINE EnumCounterSumFilter = "ANTI_MALWARE_SCANACTION_QUARANTINE"

	EnumCounterSumFilterANTI_MALWARE_SCANACTION_CLEAN EnumCounterSumFilter = "ANTI_MALWARE_SCANACTION_CLEAN"

	EnumCounterSumFilterANTI_MALWARE_SCANACTION_DENY_ACCESS EnumCounterSumFilter = "ANTI_MALWARE_SCANACTION_DENY_ACCESS"

	EnumCounterSumFilterANTI_MALWARE_SCANACTION_FAILED EnumCounterSumFilter = "ANTI_MALWARE_SCANACTION_FAILED"

	EnumCounterSumFilterWEB_REPUTATION_ACTIVITY EnumCounterSumFilter = "WEB_REPUTATION_ACTIVITY"

	EnumCounterSumFilterWEB_REPUTATION_RISK_UNTESTED EnumCounterSumFilter = "WEB_REPUTATION_RISK_UNTESTED"

	EnumCounterSumFilterWEB_REPUTATION_RISK_BLOCKED EnumCounterSumFilter = "WEB_REPUTATION_RISK_BLOCKED"

	EnumCounterSumFilterWEB_REPUTATION_RISK_SAFE EnumCounterSumFilter = "WEB_REPUTATION_RISK_SAFE"

	EnumCounterSumFilterWEB_REPUTATION_RISK_SUSPICIOUS EnumCounterSumFilter = "WEB_REPUTATION_RISK_SUSPICIOUS"

	EnumCounterSumFilterWEB_REPUTATION_RISK_HIGHLY_SUSPICIOUS EnumCounterSumFilter = "WEB_REPUTATION_RISK_HIGHLY_SUSPICIOUS"

	EnumCounterSumFilterWEB_REPUTATION_RISK_DANGEROUS EnumCounterSumFilter = "WEB_REPUTATION_RISK_DANGEROUS"

	EnumCounterSumFilterRANSOMWARE_ANTIMALWARE EnumCounterSumFilter = "RANSOMWARE_ANTIMALWARE"

	EnumCounterSumFilterRANSOMWARE_WEBREPUTATION EnumCounterSumFilter = "RANSOMWARE_WEBREPUTATION"

	EnumCounterSumFilterRANSOMWARE_INTEGRITY EnumCounterSumFilter = "RANSOMWARE_INTEGRITY"

	EnumCounterSumFilterRANSOMWARE_PAYLOAD EnumCounterSumFilter = "RANSOMWARE_PAYLOAD"
)

type EnumMalwareType string

const (
	EnumMalwareTypeGENERAL EnumMalwareType = "GENERAL"

	EnumMalwareTypeSPYWARE EnumMalwareType = "SPYWARE"
)

type EnumAntiMalwareScanType string

const (
	EnumAntiMalwareScanTypeREALTIME EnumAntiMalwareScanType = "REALTIME"

	EnumAntiMalwareScanTypeMANUAL EnumAntiMalwareScanType = "MANUAL"

	EnumAntiMalwareScanTypeSCHEDULED EnumAntiMalwareScanType = "SCHEDULED"

	EnumAntiMalwareScanTypeQUICK EnumAntiMalwareScanType = "QUICK"
)

type EnumWebReputationEventRisk string

const (
	EnumWebReputationEventRiskSUSPICIOUS EnumWebReputationEventRisk = "SUSPICIOUS"

	EnumWebReputationEventRiskHIGHLYSUSPICIOUS EnumWebReputationEventRisk = "HIGHLYSUSPICIOUS"

	EnumWebReputationEventRiskDANGEROUS EnumWebReputationEventRisk = "DANGEROUS"

	EnumWebReputationEventRiskUNTESTED EnumWebReputationEventRisk = "UNTESTED"

	EnumWebReputationEventRiskBLOCKEDBYADMINISTRATOR EnumWebReputationEventRisk = "BLOCKEDBYADMINISTRATOR"
)

type EnumCompareResults string

const (
	EnumCompareResultsLESS_THAN EnumCompareResults = "LESS_THAN"

	EnumCompareResultsEQUAL_TO EnumCompareResults = "EQUAL_TO"

	EnumCompareResultsGREATER_THAN EnumCompareResults = "GREATER_THAN"

	EnumCompareResultsINCOMPATABLE EnumCompareResults = "INCOMPATABLE"
)

type EnumExternalFilterType string

const (
	EnumExternalFilterTypeALL_EXT_HOSTS EnumExternalFilterType = "ALL_EXT_HOSTS"

	EnumExternalFilterTypeHOSTS_IN_EXT_GROUP EnumExternalFilterType = "HOSTS_IN_EXT_GROUP"

	EnumExternalFilterTypeHOSTS_IN_EXT_GROUP_AND_ALL_SUBGROUPS EnumExternalFilterType = "HOSTS_IN_EXT_GROUP_AND_ALL_SUBGROUPS"

	EnumExternalFilterTypeSPECIFIC_EXT_HOST EnumExternalFilterType = "SPECIFIC_EXT_HOST"
)

type Authenticate struct {
	XMLName xml.Name `xml:"urn:Manager authenticate"`

	Username string `xml:"username,omitempty"`

	Password string `xml:"password,omitempty"`
}

type AuthenticateResponse struct {
	XMLName xml.Name `xml:"urn:Manager authenticateResponse"`

	AuthenticateReturn string `xml:"authenticateReturn,omitempty"`
}

type SecurityProfileRecommendationRuleIDsRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager securityProfileRecommendationRuleIDsRetrieve"`

	SecurityProfileID int32 `xml:"securityProfileID,omitempty"`

	Type_ int32 `xml:"type,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type SecurityProfileRecommendationRuleIDsRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager securityProfileRecommendationRuleIDsRetrieveResponse"`

	SecurityProfileRecommendationRuleIDsRetrieveReturn []int32 `xml:"securityProfileRecommendationRuleIDsRetrieveReturn,omitempty"`
}

type HostRecommendationUnresolvedRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager hostRecommendationUnresolvedRetrieve"`

	SID string `xml:"sID,omitempty"`
}

type HostRecommendationUnresolvedRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostRecommendationUnresolvedRetrieveResponse"`

	HostRecommendationUnresolvedRetrieveReturn []int32 `xml:"hostRecommendationUnresolvedRetrieveReturn,omitempty"`
}

type HostDetailRetrieveByNameStartsWith struct {
	XMLName xml.Name `xml:"urn:Manager hostDetailRetrieveByNameStartsWith"`

	StartsWithHostname string `xml:"startsWithHostname,omitempty"`

	HostDetailLevel *EnumHostDetailLevel `xml:"hostDetailLevel,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostDetailRetrieveByNameStartsWithResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostDetailRetrieveByNameStartsWithResponse"`

	HostDetailRetrieveByNameStartsWithReturn []*HostDetailTransport `xml:"hostDetailRetrieveByNameStartsWithReturn,omitempty"`
}

type SystemEventRetrieveShortDescription struct {
	XMLName xml.Name `xml:"urn:Manager systemEventRetrieveShortDescription"`

	TimeFilter *TimeFilterTransport `xml:"timeFilter,omitempty"`

	HostFilter *HostFilterTransport `xml:"hostFilter,omitempty"`

	EventIdFilter *IDFilterTransport `xml:"eventIdFilter,omitempty"`

	IncludeNonHostEvents bool `xml:"includeNonHostEvents,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type SystemEventRetrieveShortDescriptionResponse struct {
	XMLName xml.Name `xml:"urn:Manager systemEventRetrieveShortDescriptionResponse"`

	SystemEventRetrieveShortDescriptionReturn *SystemEventListTransport `xml:"systemEventRetrieveShortDescriptionReturn,omitempty"`
}

type SystemEventRetrieveShortDescription2 struct {
	XMLName xml.Name `xml:"urn:Manager systemEventRetrieveShortDescription2"`

	TimeFilter *TimeFilterTransport `xml:"timeFilter,omitempty"`

	HostFilter *HostFilterTransport `xml:"hostFilter,omitempty"`

	EventIdFilter *IDFilterTransport2 `xml:"eventIdFilter,omitempty"`

	IncludeNonHostEvents bool `xml:"includeNonHostEvents,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type SystemEventRetrieveShortDescription2Response struct {
	XMLName xml.Name `xml:"urn:Manager systemEventRetrieveShortDescription2Response"`

	SystemEventRetrieveShortDescription2Return *SystemEventListTransport `xml:"systemEventRetrieveShortDescription2Return,omitempty"`
}

type LogInspectionDecoderRetrieveByName struct {
	XMLName xml.Name `xml:"urn:Manager logInspectionDecoderRetrieveByName"`

	Name string `xml:"name,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type LogInspectionDecoderRetrieveByNameResponse struct {
	XMLName xml.Name `xml:"urn:Manager logInspectionDecoderRetrieveByNameResponse"`

	LogInspectionDecoderRetrieveByNameReturn *LogInspectionDecoderTransport `xml:"logInspectionDecoderRetrieveByNameReturn,omitempty"`
}

type SecurityUpdateGetApplierInformation struct {
	XMLName xml.Name `xml:"urn:Manager securityUpdateGetApplierInformation"`

	ID int32 `xml:"ID,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type SecurityUpdateGetApplierInformationResponse struct {
	XMLName xml.Name `xml:"urn:Manager securityUpdateGetApplierInformationResponse"`

	SecurityUpdateGetApplierInformationReturn *ApplierInformationTransport `xml:"securityUpdateGetApplierInformationReturn,omitempty"`
}

type ApplicationTypeOverrideRetrieveAll struct {
	XMLName xml.Name `xml:"urn:Manager applicationTypeOverrideRetrieveAll"`

	SID string `xml:"sID,omitempty"`
}

type ApplicationTypeOverrideRetrieveAllResponse struct {
	XMLName xml.Name `xml:"urn:Manager applicationTypeOverrideRetrieveAllResponse"`

	ApplicationTypeOverrideRetrieveAllReturn []*ApplicationTypeOverrideTransport `xml:"applicationTypeOverrideRetrieveAllReturn,omitempty"`
}

type StatefulConfigurationRetrieveByName struct {
	XMLName xml.Name `xml:"urn:Manager statefulConfigurationRetrieveByName"`

	Name string `xml:"name,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type StatefulConfigurationRetrieveByNameResponse struct {
	XMLName xml.Name `xml:"urn:Manager statefulConfigurationRetrieveByNameResponse"`

	StatefulConfigurationRetrieveByNameReturn *StatefulConfigurationTransport `xml:"statefulConfigurationRetrieveByNameReturn,omitempty"`
}

type HostRecommendationRuleIDsRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager hostRecommendationRuleIDsRetrieve"`

	HostID int32 `xml:"hostID,omitempty"`

	Type_ int32 `xml:"type,omitempty"`

	Onlyunassigned string `xml:"onlyunassigned,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostRecommendationRuleIDsRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostRecommendationRuleIDsRetrieveResponse"`

	HostRecommendationRuleIDsRetrieveReturn []int32 `xml:"hostRecommendationRuleIDsRetrieveReturn,omitempty"`
}

type HostGroupCreate struct {
	XMLName xml.Name `xml:"urn:Manager hostGroupCreate"`

	HostGroup *HostGroupTransport `xml:"hostGroup,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostGroupCreateResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostGroupCreateResponse"`

	HostGroupCreateReturn *HostGroupTransport `xml:"hostGroupCreateReturn,omitempty"`
}

type SoftwareDelete struct {
	XMLName xml.Name `xml:"urn:Manager softwareDelete"`

	Ids []int32 `xml:"ids,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type SoftwareDeleteResponse struct {
	XMLName xml.Name `xml:"urn:Manager softwareDeleteResponse"`
}

type SignInAsTenant struct {
	XMLName xml.Name `xml:"urn:Manager signInAsTenant"`

	TenantName string `xml:"tenantName,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type SignInAsTenantResponse struct {
	XMLName xml.Name `xml:"urn:Manager signInAsTenantResponse"`

	SignInAsTenantReturn string `xml:"signInAsTenantReturn,omitempty"`
}

type SystemSettingGet struct {
	XMLName xml.Name `xml:"urn:Manager systemSettingGet"`

	Keys []*EnumEditableSettingKey `xml:"keys,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type SystemSettingGetResponse struct {
	XMLName xml.Name `xml:"urn:Manager systemSettingGetResponse"`

	SystemSettingGetReturn []*EditableSettingStoredTransport `xml:"systemSettingGetReturn,omitempty"`
}

type DPIRuleSave struct {
	XMLName xml.Name `xml:"urn:Manager DPIRuleSave"`

	Ipsf *DPIRuleTransport `xml:"ipsf,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type DPIRuleSaveResponse struct {
	XMLName xml.Name `xml:"urn:Manager DPIRuleSaveResponse"`

	DPIRuleSaveReturn *DPIRuleTransport `xml:"DPIRuleSaveReturn,omitempty"`
}

type PortListSave struct {
	XMLName xml.Name `xml:"urn:Manager portListSave"`

	Pl *PortListTransport `xml:"pl,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type PortListSaveResponse struct {
	XMLName xml.Name `xml:"urn:Manager portListSaveResponse"`

	PortListSaveReturn *PortListTransport `xml:"portListSaveReturn,omitempty"`
}

type ScheduleSave struct {
	XMLName xml.Name `xml:"urn:Manager scheduleSave"`

	S *ScheduleTransport `xml:"s,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type ScheduleSaveResponse struct {
	XMLName xml.Name `xml:"urn:Manager scheduleSaveResponse"`

	ScheduleSaveReturn *ScheduleTransport `xml:"scheduleSaveReturn,omitempty"`
}

type DPIRuleDelete struct {
	XMLName xml.Name `xml:"urn:Manager DPIRuleDelete"`

	Ids []int32 `xml:"ids,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type DPIRuleDeleteResponse struct {
	XMLName xml.Name `xml:"urn:Manager DPIRuleDeleteResponse"`
}

type HostSettingClear struct {
	XMLName xml.Name `xml:"urn:Manager hostSettingClear"`

	HostID int32 `xml:"hostID,omitempty"`

	Keys []*EnumEditableSettingKey `xml:"keys,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostSettingClearResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostSettingClearResponse"`
}

type IPListRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager IPListRetrieve"`

	Id int32 `xml:"id,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type IPListRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager IPListRetrieveResponse"`

	IPListRetrieveReturn *IPListTransport `xml:"IPListRetrieveReturn,omitempty"`
}

type HostRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager hostRetrieve"`

	Id int32 `xml:"id,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostRetrieveResponse"`

	HostRetrieveReturn *HostTransport `xml:"hostRetrieveReturn,omitempty"`
}

type HostSettingSet struct {
	XMLName xml.Name `xml:"urn:Manager hostSettingSet"`

	HostID int32 `xml:"hostID,omitempty"`

	EditableSettings []*EditableSettingTransport `xml:"editableSettings,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostSettingSetResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostSettingSetResponse"`
}

type EndSession struct {
	XMLName xml.Name `xml:"urn:Manager endSession"`

	SID string `xml:"sID,omitempty"`
}

type EndSessionResponse struct {
	XMLName xml.Name `xml:"urn:Manager endSessionResponse"`
}

type ScanFileListSave struct {
	XMLName xml.Name `xml:"urn:Manager scanFileListSave"`

	ScanFileListTransport *ScanFileListTransport `xml:"scanFileListTransport,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type ScanFileListSaveResponse struct {
	XMLName xml.Name `xml:"urn:Manager scanFileListSaveResponse"`

	ScanFileListSaveReturn *ScanFileListTransport `xml:"scanFileListSaveReturn,omitempty"`
}

type PortListDelete struct {
	XMLName xml.Name `xml:"urn:Manager portListDelete"`

	Ids []int32 `xml:"ids,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type PortListDeleteResponse struct {
	XMLName xml.Name `xml:"urn:Manager portListDeleteResponse"`
}

type RoleGetDefaultID struct {
	XMLName xml.Name `xml:"urn:Manager roleGetDefaultID"`

	SID string `xml:"sID,omitempty"`
}

type RoleGetDefaultIDResponse struct {
	XMLName xml.Name `xml:"urn:Manager roleGetDefaultIDResponse"`

	RoleGetDefaultIDReturn int32 `xml:"roleGetDefaultIDReturn,omitempty"`
}

type UserRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager userRetrieve"`

	Id int32 `xml:"id,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type UserRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager userRetrieveResponse"`

	UserRetrieveReturn *UserTransport `xml:"userRetrieveReturn,omitempty"`
}

type AntiMalwareSave struct {
	XMLName xml.Name `xml:"urn:Manager antiMalwareSave"`

	AntiMalwareTransport *AntiMalwareTransport `xml:"antiMalwareTransport,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type AntiMalwareSaveResponse struct {
	XMLName xml.Name `xml:"urn:Manager antiMalwareSaveResponse"`

	AntiMalwareSaveReturn *AntiMalwareTransport `xml:"antiMalwareSaveReturn,omitempty"`
}

type HostGroupDelete struct {
	XMLName xml.Name `xml:"urn:Manager hostGroupDelete"`

	Id int32 `xml:"id,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostGroupDeleteResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostGroupDeleteResponse"`
}

type IPListDelete struct {
	XMLName xml.Name `xml:"urn:Manager IPListDelete"`

	Ids []int32 `xml:"ids,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type IPListDeleteResponse struct {
	XMLName xml.Name `xml:"urn:Manager IPListDeleteResponse"`
}

type SystemSettingSet struct {
	XMLName xml.Name `xml:"urn:Manager systemSettingSet"`

	EditableSettings []*EditableSettingTransport `xml:"editableSettings,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type SystemSettingSetResponse struct {
	XMLName xml.Name `xml:"urn:Manager systemSettingSetResponse"`
}

type MACListRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager MACListRetrieve"`

	Id int32 `xml:"id,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type MACListRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager MACListRetrieveResponse"`

	MACListRetrieveReturn *MACListTransport `xml:"MACListRetrieveReturn,omitempty"`
}

type HostRetrieveAll struct {
	XMLName xml.Name `xml:"urn:Manager hostRetrieveAll"`

	SID string `xml:"sID,omitempty"`
}

type HostRetrieveAllResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostRetrieveAllResponse"`

	HostRetrieveAllReturn []*HostTransport `xml:"hostRetrieveAllReturn,omitempty"`
}

type IPListSave struct {
	XMLName xml.Name `xml:"urn:Manager IPListSave"`

	Ipl *IPListTransport `xml:"ipl,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type IPListSaveResponse struct {
	XMLName xml.Name `xml:"urn:Manager IPListSaveResponse"`

	IPListSaveReturn *IPListTransport `xml:"IPListSaveReturn,omitempty"`
}

type HostGetStatus struct {
	XMLName xml.Name `xml:"urn:Manager hostGetStatus"`

	Id int32 `xml:"id,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostGetStatusResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostGetStatusResponse"`

	HostGetStatusReturn *HostStatusTransport `xml:"hostGetStatusReturn,omitempty"`
}

type FirewallRuleSave struct {
	XMLName xml.Name `xml:"urn:Manager firewallRuleSave"`

	Fr *FirewallRuleTransport `xml:"fr,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type FirewallRuleSaveResponse struct {
	XMLName xml.Name `xml:"urn:Manager firewallRuleSaveResponse"`

	FirewallRuleSaveReturn *FirewallRuleTransport `xml:"firewallRuleSaveReturn,omitempty"`
}

type DPIRuleRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager DPIRuleRetrieve"`

	Id int32 `xml:"id,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type DPIRuleRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager DPIRuleRetrieveResponse"`

	DPIRuleRetrieveReturn *DPIRuleTransport `xml:"DPIRuleRetrieveReturn,omitempty"`
}

type ScheduleRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager scheduleRetrieve"`

	Id int32 `xml:"id,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type ScheduleRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager scheduleRetrieveResponse"`

	ScheduleRetrieveReturn *ScheduleTransport `xml:"scheduleRetrieveReturn,omitempty"`
}

type ScheduleDelete struct {
	XMLName xml.Name `xml:"urn:Manager scheduleDelete"`

	Ids []int32 `xml:"ids,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type ScheduleDeleteResponse struct {
	XMLName xml.Name `xml:"urn:Manager scheduleDeleteResponse"`
}

type HostJobProgress struct {
	XMLName xml.Name `xml:"urn:Manager hostJobProgress"`

	Type_ *EnumJobType `xml:"type,omitempty"`

	SinceManagerTime time.Time `xml:"sinceManagerTime,omitempty"`

	HostIDs []int32 `xml:"hostIDs,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostJobProgressResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostJobProgressResponse"`

	HostJobProgressReturn *JobProgressTransport `xml:"hostJobProgressReturn,omitempty"`
}

type GetManagerTime struct {
	XMLName xml.Name `xml:"urn:Manager getManagerTime"`
}

type GetManagerTimeResponse struct {
	XMLName xml.Name `xml:"urn:Manager getManagerTimeResponse"`

	GetManagerTimeReturn time.Time `xml:"getManagerTimeReturn,omitempty"`
}

type UserDelete struct {
	XMLName xml.Name `xml:"urn:Manager userDelete"`

	Ids []int32 `xml:"ids,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type UserDeleteResponse struct {
	XMLName xml.Name `xml:"urn:Manager userDeleteResponse"`
}

type UpdateComponents struct {
	XMLName xml.Name `xml:"urn:Manager updateComponents"`

	SID string `xml:"sID,omitempty"`
}

type UpdateComponentsResponse struct {
	XMLName xml.Name `xml:"urn:Manager updateComponentsResponse"`

	UpdateComponentsReturn bool `xml:"updateComponentsReturn,omitempty"`
}

type PluginRequest struct {
	XMLName xml.Name `xml:"urn:Manager pluginRequest"`

	PluginID string `xml:"pluginID,omitempty"`

	Input string `xml:"input,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type PluginRequestResponse struct {
	XMLName xml.Name `xml:"urn:Manager pluginRequestResponse"`

	PluginRequestReturn string `xml:"pluginRequestReturn,omitempty"`
}

type SoftwareStore struct {
	XMLName xml.Name `xml:"urn:Manager softwareStore"`

	Software []byte `xml:"software,omitempty"`

	FileName string `xml:"fileName,omitempty"`

	Notes string `xml:"notes,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type SoftwareStoreResponse struct {
	XMLName xml.Name `xml:"urn:Manager softwareStoreResponse"`

	SoftwareStoreReturn *SoftwareTransport `xml:"softwareStoreReturn,omitempty"`
}

type UserSave struct {
	XMLName xml.Name `xml:"urn:Manager userSave"`

	Ipl *UserTransport `xml:"ipl,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type UserSaveResponse struct {
	XMLName xml.Name `xml:"urn:Manager userSaveResponse"`

	UserSaveReturn *UserTransport `xml:"userSaveReturn,omitempty"`
}

type HostGetEventsNow struct {
	XMLName xml.Name `xml:"urn:Manager hostGetEventsNow"`

	HostID int32 `xml:"hostID,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostGetEventsNowResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostGetEventsNowResponse"`
}

type UserRetrieveAll struct {
	XMLName xml.Name `xml:"urn:Manager userRetrieveAll"`

	SID string `xml:"sID,omitempty"`
}

type UserRetrieveAllResponse struct {
	XMLName xml.Name `xml:"urn:Manager userRetrieveAllResponse"`

	UserRetrieveAllReturn []*UserTransport `xml:"userRetrieveAllReturn,omitempty"`
}

type DPIEventRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager DPIEventRetrieve"`

	TimeFilter *TimeFilterTransport `xml:"timeFilter,omitempty"`

	HostFilter *HostFilterTransport `xml:"hostFilter,omitempty"`

	EventIdFilter *IDFilterTransport `xml:"eventIdFilter,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type DPIEventRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager DPIEventRetrieveResponse"`

	DPIEventRetrieveReturn *DPIEventListTransport `xml:"DPIEventRetrieveReturn,omitempty"`
}

type HostCreate struct {
	XMLName xml.Name `xml:"urn:Manager hostCreate"`

	Host *HostTransport `xml:"host,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostCreateResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostCreateResponse"`

	HostCreateReturn *HostTransport `xml:"hostCreateReturn,omitempty"`
}

type SoftwareExport struct {
	XMLName xml.Name `xml:"urn:Manager softwareExport"`

	Id int32 `xml:"id,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type SoftwareExportResponse struct {
	XMLName xml.Name `xml:"urn:Manager softwareExportResponse"`

	SoftwareExportReturn []byte `xml:"softwareExportReturn,omitempty"`
}

type MACListSave struct {
	XMLName xml.Name `xml:"urn:Manager MACListSave"`

	Ml *MACListTransport `xml:"ml,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type MACListSaveResponse struct {
	XMLName xml.Name `xml:"urn:Manager MACListSaveResponse"`

	MACListSaveReturn *MACListTransport `xml:"MACListSaveReturn,omitempty"`
}

type HostSettingGet struct {
	XMLName xml.Name `xml:"urn:Manager hostSettingGet"`

	HostID int32 `xml:"hostID,omitempty"`

	Keys []*EnumEditableSettingKey `xml:"keys,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostSettingGetResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostSettingGetResponse"`

	HostSettingGetReturn []*EditableSettingStoredTransport `xml:"hostSettingGetReturn,omitempty"`
}

type PortListRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager portListRetrieve"`

	Id int32 `xml:"id,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type PortListRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager portListRetrieveResponse"`

	PortListRetrieveReturn *PortListTransport `xml:"portListRetrieveReturn,omitempty"`
}

type MACListDelete struct {
	XMLName xml.Name `xml:"urn:Manager MACListDelete"`

	Ids []int32 `xml:"ids,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type MACListDeleteResponse struct {
	XMLName xml.Name `xml:"urn:Manager MACListDeleteResponse"`
}

type GetApiVersion struct {
	XMLName xml.Name `xml:"urn:Manager getApiVersion"`
}

type GetApiVersionResponse struct {
	XMLName xml.Name `xml:"urn:Manager getApiVersionResponse"`

	GetApiVersionReturn int32 `xml:"getApiVersionReturn,omitempty"`
}

type HostDelete struct {
	XMLName xml.Name `xml:"urn:Manager hostDelete"`

	Ids []int32 `xml:"ids,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostDeleteResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostDeleteResponse"`
}

type CounterRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager counterRetrieve"`

	CounterFilter *EnumCounterFilter `xml:"counterFilter,omitempty"`

	TimeFilter *TimeFilterTransport `xml:"timeFilter,omitempty"`

	HostFilter *HostFilterTransport `xml:"hostFilter,omitempty"`

	TagFilter *TagFilterTransport `xml:"tagFilter,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type CounterRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager counterRetrieveResponse"`

	CounterRetrieveReturn []*CounterTransport `xml:"counterRetrieveReturn,omitempty"`
}

type HostUpdateNow struct {
	XMLName xml.Name `xml:"urn:Manager hostUpdateNow"`

	HostIDs []int32 `xml:"hostIDs,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostUpdateNowResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostUpdateNowResponse"`
}

type SoftwareRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager softwareRetrieve"`

	Id int32 `xml:"id,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type SoftwareRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager softwareRetrieveResponse"`

	SoftwareRetrieveReturn *SoftwareTransport `xml:"softwareRetrieveReturn,omitempty"`
}

type RetrieveActivationCode struct {
	XMLName xml.Name `xml:"urn:Manager retrieveActivationCode"`

	ModuleNumber int32 `xml:"moduleNumber,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type RetrieveActivationCodeResponse struct {
	XMLName xml.Name `xml:"urn:Manager retrieveActivationCodeResponse"`

	RetrieveActivationCodeReturn string `xml:"retrieveActivationCodeReturn,omitempty"`
}

type DPIRuleRetrieveAll struct {
	XMLName xml.Name `xml:"urn:Manager DPIRuleRetrieveAll"`

	SID string `xml:"sID,omitempty"`
}

type DPIRuleRetrieveAllResponse struct {
	XMLName xml.Name `xml:"urn:Manager DPIRuleRetrieveAllResponse"`

	DPIRuleRetrieveAllReturn []*DPIRuleTransport `xml:"DPIRuleRetrieveAllReturn,omitempty"`
}

type ApplicationTypeRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager applicationTypeRetrieve"`

	Id int32 `xml:"id,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type ApplicationTypeRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager applicationTypeRetrieveResponse"`

	ApplicationTypeRetrieveReturn *ApplicationTypeTransport `xml:"applicationTypeRetrieveReturn,omitempty"`
}

type ScheduleRetrieveByName struct {
	XMLName xml.Name `xml:"urn:Manager scheduleRetrieveByName"`

	Name string `xml:"name,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type ScheduleRetrieveByNameResponse struct {
	XMLName xml.Name `xml:"urn:Manager scheduleRetrieveByNameResponse"`

	ScheduleRetrieveByNameReturn *ScheduleTransport `xml:"scheduleRetrieveByNameReturn,omitempty"`
}

type ScanFileListRetrieveAll struct {
	XMLName xml.Name `xml:"urn:Manager scanFileListRetrieveAll"`

	SID string `xml:"sID,omitempty"`
}

type ScanFileListRetrieveAllResponse struct {
	XMLName xml.Name `xml:"urn:Manager scanFileListRetrieveAllResponse"`

	ScanFileListRetrieveAllReturn []*ScanFileListTransport `xml:"scanFileListRetrieveAllReturn,omitempty"`
}

type IntegrityRuleDelete struct {
	XMLName xml.Name `xml:"urn:Manager integrityRuleDelete"`

	Ids []int32 `xml:"ids,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type IntegrityRuleDeleteResponse struct {
	XMLName xml.Name `xml:"urn:Manager integrityRuleDeleteResponse"`
}

type FirewallRuleRetrieveByName struct {
	XMLName xml.Name `xml:"urn:Manager firewallRuleRetrieveByName"`

	Name string `xml:"name,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type FirewallRuleRetrieveByNameResponse struct {
	XMLName xml.Name `xml:"urn:Manager firewallRuleRetrieveByNameResponse"`

	FirewallRuleRetrieveByNameReturn *FirewallRuleTransport `xml:"firewallRuleRetrieveByNameReturn,omitempty"`
}

type MACListRetrieveByName struct {
	XMLName xml.Name `xml:"urn:Manager MACListRetrieveByName"`

	Name string `xml:"name,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type MACListRetrieveByNameResponse struct {
	XMLName xml.Name `xml:"urn:Manager MACListRetrieveByNameResponse"`

	MACListRetrieveByNameReturn *MACListTransport `xml:"MACListRetrieveByNameReturn,omitempty"`
}

type SecurityUpdateApply struct {
	XMLName xml.Name `xml:"urn:Manager securityUpdateApply"`

	ID int32 `xml:"ID,omitempty"`

	DetectOnly bool `xml:"detectOnly,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type SecurityUpdateApplyResponse struct {
	XMLName xml.Name `xml:"urn:Manager securityUpdateApplyResponse"`

	SecurityUpdateApplyReturn *ApplierInformationTransport `xml:"securityUpdateApplyReturn,omitempty"`
}

type AntiMalwareRetrieveByName struct {
	XMLName xml.Name `xml:"urn:Manager antiMalwareRetrieveByName"`

	Name string `xml:"name,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type AntiMalwareRetrieveByNameResponse struct {
	XMLName xml.Name `xml:"urn:Manager antiMalwareRetrieveByNameResponse"`

	AntiMalwareRetrieveByNameReturn *AntiMalwareTransport `xml:"antiMalwareRetrieveByNameReturn,omitempty"`
}

type SecurityUpdateRetrieveAll struct {
	XMLName xml.Name `xml:"urn:Manager securityUpdateRetrieveAll"`

	SID string `xml:"sID,omitempty"`
}

type SecurityUpdateRetrieveAllResponse struct {
	XMLName xml.Name `xml:"urn:Manager securityUpdateRetrieveAllResponse"`

	SecurityUpdateRetrieveAllReturn []*SecurityUpdateTransport `xml:"securityUpdateRetrieveAllReturn,omitempty"`
}

type LogInspectionRuleRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager logInspectionRuleRetrieve"`

	Id int32 `xml:"id,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type LogInspectionRuleRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager logInspectionRuleRetrieveResponse"`

	LogInspectionRuleRetrieveReturn *LogInspectionRuleTransport `xml:"logInspectionRuleRetrieveReturn,omitempty"`
}

type ScanDirectoryListDelete struct {
	XMLName xml.Name `xml:"urn:Manager scanDirectoryListDelete"`

	Ids []int32 `xml:"ids,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type ScanDirectoryListDeleteResponse struct {
	XMLName xml.Name `xml:"urn:Manager scanDirectoryListDeleteResponse"`
}

type SystemEventRetrieve2 struct {
	XMLName xml.Name `xml:"urn:Manager systemEventRetrieve2"`

	TimeFilter *TimeFilterTransport `xml:"timeFilter,omitempty"`

	HostFilter *HostFilterTransport `xml:"hostFilter,omitempty"`

	EventIdFilter *IDFilterTransport2 `xml:"eventIdFilter,omitempty"`

	IncludeNonHostEvents bool `xml:"includeNonHostEvents,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type SystemEventRetrieve2Response struct {
	XMLName xml.Name `xml:"urn:Manager systemEventRetrieve2Response"`

	SystemEventRetrieve2Return *SystemEventListTransport `xml:"systemEventRetrieve2Return,omitempty"`
}

type SystemEventRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager systemEventRetrieve"`

	TimeFilter *TimeFilterTransport `xml:"timeFilter,omitempty"`

	HostFilter *HostFilterTransport `xml:"hostFilter,omitempty"`

	EventIdFilter *IDFilterTransport `xml:"eventIdFilter,omitempty"`

	IncludeNonHostEvents bool `xml:"includeNonHostEvents,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type SystemEventRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager systemEventRetrieveResponse"`

	SystemEventRetrieveReturn *SystemEventListTransport `xml:"systemEventRetrieveReturn,omitempty"`
}

type SecurityProfileSettingSet struct {
	XMLName xml.Name `xml:"urn:Manager securityProfileSettingSet"`

	SecurityProfileID int32 `xml:"securityProfileID,omitempty"`

	EditableSettings []*EditableSettingTransport `xml:"editableSettings,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type SecurityProfileSettingSetResponse struct {
	XMLName xml.Name `xml:"urn:Manager securityProfileSettingSetResponse"`
}

type DPIEventRetrieve2 struct {
	XMLName xml.Name `xml:"urn:Manager DPIEventRetrieve2"`

	TimeFilter *TimeFilterTransport `xml:"timeFilter,omitempty"`

	HostFilter *HostFilterTransport `xml:"hostFilter,omitempty"`

	EventIdFilter *IDFilterTransport2 `xml:"eventIdFilter,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type DPIEventRetrieve2Response struct {
	XMLName xml.Name `xml:"urn:Manager DPIEventRetrieve2Response"`

	DPIEventRetrieve2Return *DPIEventListTransport `xml:"DPIEventRetrieve2Return,omitempty"`
}

type AntiMalwareDelete struct {
	XMLName xml.Name `xml:"urn:Manager antiMalwareDelete"`

	Ids []int32 `xml:"ids,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type AntiMalwareDeleteResponse struct {
	XMLName xml.Name `xml:"urn:Manager antiMalwareDeleteResponse"`
}

type IntegrityRuleRetrieveByName struct {
	XMLName xml.Name `xml:"urn:Manager integrityRuleRetrieveByName"`

	Name string `xml:"name,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type IntegrityRuleRetrieveByNameResponse struct {
	XMLName xml.Name `xml:"urn:Manager integrityRuleRetrieveByNameResponse"`

	IntegrityRuleRetrieveByNameReturn *IntegrityRuleTransport `xml:"integrityRuleRetrieveByNameReturn,omitempty"`
}

type HostGetEventsNowSync struct {
	XMLName xml.Name `xml:"urn:Manager hostGetEventsNowSync"`

	HostID int32 `xml:"hostID,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostGetEventsNowSyncResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostGetEventsNowSyncResponse"`
}

type ScanFileExtListDelete struct {
	XMLName xml.Name `xml:"urn:Manager scanFileExtListDelete"`

	Ids []int32 `xml:"ids,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type ScanFileExtListDeleteResponse struct {
	XMLName xml.Name `xml:"urn:Manager scanFileExtListDeleteResponse"`
}

type IntegrityRuleRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager integrityRuleRetrieve"`

	Id int32 `xml:"id,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type IntegrityRuleRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager integrityRuleRetrieveResponse"`

	IntegrityRuleRetrieveReturn *IntegrityRuleTransport `xml:"integrityRuleRetrieveReturn,omitempty"`
}

type HostAntiMalwareScan struct {
	XMLName xml.Name `xml:"urn:Manager hostAntiMalwareScan"`

	HostIDs []int32 `xml:"hostIDs,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostAntiMalwareScanResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostAntiMalwareScanResponse"`
}

type HostGroupRetrieveAll struct {
	XMLName xml.Name `xml:"urn:Manager hostGroupRetrieveAll"`

	SID string `xml:"sID,omitempty"`
}

/*type HostGroupRetrieveAllResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostGroupRetrieveAllResponse"`

	HostGroupRetrieveAllReturn []*HostGroupTransport `xml:"hostGroupRetrieveAllReturn,omitempty"`
}*/

type HostGroupRetrieveAllResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostGroupRetrieveAllResponse"`
	HostGroupRetrieveAllReturn []*HostGroupRetrieveAllReturnTransport `xml:"hostGroupRetrieveAllReturn,omitempty"`

}

type FirewallRuleRetrieveAll struct {
	XMLName xml.Name `xml:"urn:Manager firewallRuleRetrieveAll"`

	SID string `xml:"sID,omitempty"`
}

type FirewallRuleRetrieveAllResponse struct {
	XMLName xml.Name `xml:"urn:Manager firewallRuleRetrieveAllResponse"`

	FirewallRuleRetrieveAllReturn []*FirewallRuleTransport `xml:"firewallRuleRetrieveAllReturn,omitempty"`
}

type LogInspectionRuleRetrieveByName struct {
	XMLName xml.Name `xml:"urn:Manager logInspectionRuleRetrieveByName"`

	Name string `xml:"name,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type LogInspectionRuleRetrieveByNameResponse struct {
	XMLName xml.Name `xml:"urn:Manager logInspectionRuleRetrieveByNameResponse"`

	LogInspectionRuleRetrieveByNameReturn *LogInspectionRuleTransport `xml:"logInspectionRuleRetrieveByNameReturn,omitempty"`
}

type StatefulConfigurationSave struct {
	XMLName xml.Name `xml:"urn:Manager statefulConfigurationSave"`

	S *StatefulConfigurationTransport `xml:"s,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type StatefulConfigurationSaveResponse struct {
	XMLName xml.Name `xml:"urn:Manager statefulConfigurationSaveResponse"`

	StatefulConfigurationSaveReturn *StatefulConfigurationTransport `xml:"statefulConfigurationSaveReturn,omitempty"`
}

type SecurityProfileRetrieveByName struct {
	XMLName xml.Name `xml:"urn:Manager securityProfileRetrieveByName"`

	Name string `xml:"name,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type SecurityProfileRetrieveByNameResponse struct {
	XMLName xml.Name `xml:"urn:Manager securityProfileRetrieveByNameResponse"`

	SecurityProfileRetrieveByNameReturn *SecurityProfileTransport `xml:"securityProfileRetrieveByNameReturn,omitempty"`
}

type HostRebuildBaseline struct {
	XMLName xml.Name `xml:"urn:Manager hostRebuildBaseline"`

	HostIDs []int32 `xml:"hostIDs,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostRebuildBaselineResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostRebuildBaselineResponse"`
}

type SecurityProfileSave struct {
	XMLName xml.Name `xml:"urn:Manager securityProfileSave"`

	Sp *SecurityProfileTransport `xml:"sp,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type SecurityProfileSaveResponse struct {
	XMLName xml.Name `xml:"urn:Manager securityProfileSaveResponse"`

	SecurityProfileSaveReturn *SecurityProfileTransport `xml:"securityProfileSaveReturn,omitempty"`
}

type ScanDirectoryListSave struct {
	XMLName xml.Name `xml:"urn:Manager scanDirectoryListSave"`

	ScanDirectoryListTransport *ScanDirectoryListTransport `xml:"scanDirectoryListTransport,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type ScanDirectoryListSaveResponse struct {
	XMLName xml.Name `xml:"urn:Manager scanDirectoryListSaveResponse"`

	ScanDirectoryListSaveReturn *ScanDirectoryListTransport `xml:"scanDirectoryListSaveReturn,omitempty"`
}

type SecurityUpdateRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager securityUpdateRetrieve"`

	Id int32 `xml:"id,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type SecurityUpdateRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager securityUpdateRetrieveResponse"`

	SecurityUpdateRetrieveReturn *SecurityUpdateTransport `xml:"securityUpdateRetrieveReturn,omitempty"`
}

type HostAgentActivate struct {
	XMLName xml.Name `xml:"urn:Manager hostAgentActivate"`

	HostIDs []int32 `xml:"hostIDs,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostAgentActivateResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostAgentActivateResponse"`
}

type ScheduleRetrieveAll struct {
	XMLName xml.Name `xml:"urn:Manager scheduleRetrieveAll"`

	SID string `xml:"sID,omitempty"`
}

type ScheduleRetrieveAllResponse struct {
	XMLName xml.Name `xml:"urn:Manager scheduleRetrieveAllResponse"`

	ScheduleRetrieveAllReturn []*ScheduleTransport `xml:"scheduleRetrieveAllReturn,omitempty"`
}

type SecurityUpdateExport struct {
	XMLName xml.Name `xml:"urn:Manager securityUpdateExport"`

	Id int32 `xml:"id,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type SecurityUpdateExportResponse struct {
	XMLName xml.Name `xml:"urn:Manager securityUpdateExportResponse"`

	SecurityUpdateExportReturn []byte `xml:"securityUpdateExportReturn,omitempty"`
}

type ScanFileExtListRetrieveAll struct {
	XMLName xml.Name `xml:"urn:Manager scanFileExtListRetrieveAll"`

	SID string `xml:"sID,omitempty"`
}

type ScanFileExtListRetrieveAllResponse struct {
	XMLName xml.Name `xml:"urn:Manager scanFileExtListRetrieveAllResponse"`

	ScanFileExtListRetrieveAllReturn []*ScanFileExtListTransport `xml:"scanFileExtListRetrieveAllReturn,omitempty"`
}

type FirewallEventRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager firewallEventRetrieve"`

	TimeFilter *TimeFilterTransport `xml:"timeFilter,omitempty"`

	HostFilter *HostFilterTransport `xml:"hostFilter,omitempty"`

	EventIdFilter *IDFilterTransport `xml:"eventIdFilter,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type FirewallEventRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager firewallEventRetrieveResponse"`

	FirewallEventRetrieveReturn *FirewallEventListTransport `xml:"firewallEventRetrieveReturn,omitempty"`
}

type FirewallEventRetrieve2 struct {
	XMLName xml.Name `xml:"urn:Manager firewallEventRetrieve2"`

	TimeFilter *TimeFilterTransport `xml:"timeFilter,omitempty"`

	HostFilter *HostFilterTransport `xml:"hostFilter,omitempty"`

	EventIdFilter *IDFilterTransport2 `xml:"eventIdFilter,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type FirewallEventRetrieve2Response struct {
	XMLName xml.Name `xml:"urn:Manager firewallEventRetrieve2Response"`

	FirewallEventRetrieve2Return *FirewallEventListTransport `xml:"firewallEventRetrieve2Return,omitempty"`
}

type HostAgentDeactivate struct {
	XMLName xml.Name `xml:"urn:Manager hostAgentDeactivate"`

	HostIDs []int32 `xml:"hostIDs,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostAgentDeactivateResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostAgentDeactivateResponse"`
}

type UpdateComponentFromAU struct {
	XMLName xml.Name `xml:"urn:Manager updateComponentFromAU"`

	Type_ int32 `xml:"type,omitempty"`

	Id int32 `xml:"id,omitempty"`

	ApplyDSRU bool `xml:"applyDSRU,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type UpdateComponentFromAUResponse struct {
	XMLName xml.Name `xml:"urn:Manager updateComponentFromAUResponse"`

	UpdateComponentFromAUReturn bool `xml:"updateComponentFromAUReturn,omitempty"`
}

type FeatureSummaryRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager featureSummaryRetrieve"`

	TimeFilter *TimeFilterTransport `xml:"timeFilter,omitempty"`

	PreviousTimeFilter *TimeFilterTransport `xml:"previousTimeFilter,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type FeatureSummaryRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager featureSummaryRetrieveResponse"`

	FeatureSummaryRetrieveReturn *FeatureSummaryTransport `xml:"featureSummaryRetrieveReturn,omitempty"`
}

type SystemInformationRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager systemInformationRetrieve"`

	SID string `xml:"sID,omitempty"`
}

type SystemInformationRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager systemInformationRetrieveResponse"`

	SystemInformationRetrieveReturn []*SystemInformationTransport `xml:"systemInformationRetrieveReturn,omitempty"`
}

type AddActivationCode struct {
	XMLName xml.Name `xml:"urn:Manager addActivationCode"`

	ModuleNumber int32 `xml:"moduleNumber,omitempty"`

	ActivationCode string `xml:"activationCode,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type AddActivationCodeResponse struct {
	XMLName xml.Name `xml:"urn:Manager addActivationCodeResponse"`
}

type AlertStatusRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager alertStatusRetrieve"`

	Count int32 `xml:"count,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type AlertStatusRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager alertStatusRetrieveResponse"`

	AlertStatusRetrieveReturn []*AlertStatusTransport `xml:"alertStatusRetrieveReturn,omitempty"`
}

type ScanDirectoryListRetrieveAll struct {
	XMLName xml.Name `xml:"urn:Manager scanDirectoryListRetrieveAll"`

	SID string `xml:"sID,omitempty"`
}

type ScanDirectoryListRetrieveAllResponse struct {
	XMLName xml.Name `xml:"urn:Manager scanDirectoryListRetrieveAllResponse"`

	ScanDirectoryListRetrieveAllReturn []*ScanDirectoryListTransport `xml:"scanDirectoryListRetrieveAllReturn,omitempty"`
}

type LogInspectionDecoderRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager logInspectionDecoderRetrieve"`

	Id int32 `xml:"id,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type LogInspectionDecoderRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager logInspectionDecoderRetrieveResponse"`

	LogInspectionDecoderRetrieveReturn *LogInspectionDecoderTransport `xml:"logInspectionDecoderRetrieveReturn,omitempty"`
}

type SecurityProfileSettingClear struct {
	XMLName xml.Name `xml:"urn:Manager securityProfileSettingClear"`

	SecurityProfileID int32 `xml:"securityProfileID,omitempty"`

	Keys []*EnumEditableSettingKey `xml:"keys,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type SecurityProfileSettingClearResponse struct {
	XMLName xml.Name `xml:"urn:Manager securityProfileSettingClearResponse"`
}

type IPListRetrieveAll struct {
	XMLName xml.Name `xml:"urn:Manager IPListRetrieveAll"`

	SID string `xml:"sID,omitempty"`
}

type IPListRetrieveAllResponse struct {
	XMLName xml.Name `xml:"urn:Manager IPListRetrieveAllResponse"`

	IPListRetrieveAllReturn []*IPListTransport `xml:"IPListRetrieveAllReturn,omitempty"`
}

type HostSecurityProfileClear struct {
	XMLName xml.Name `xml:"urn:Manager hostSecurityProfileClear"`

	HostIDs []int32 `xml:"hostIDs,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostSecurityProfileClearResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostSecurityProfileClearResponse"`
}

type ApplicationTypeOverrideSave struct {
	XMLName xml.Name `xml:"urn:Manager applicationTypeOverrideSave"`

	At *ApplicationTypeOverrideTransport `xml:"at,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type ApplicationTypeOverrideSaveResponse struct {
	XMLName xml.Name `xml:"urn:Manager applicationTypeOverrideSaveResponse"`

	ApplicationTypeOverrideSaveReturn *ApplicationTypeOverrideTransport `xml:"applicationTypeOverrideSaveReturn,omitempty"`
}

type HostClearWarningsErrors struct {
	XMLName xml.Name `xml:"urn:Manager hostClearWarningsErrors"`

	HostIDs []int32 `xml:"hostIDs,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostClearWarningsErrorsResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostClearWarningsErrorsResponse"`
}

type IntegrityRuleRetrieveAll struct {
	XMLName xml.Name `xml:"urn:Manager integrityRuleRetrieveAll"`

	SID string `xml:"sID,omitempty"`
}

type IntegrityRuleRetrieveAllResponse struct {
	XMLName xml.Name `xml:"urn:Manager integrityRuleRetrieveAllResponse"`

	IntegrityRuleRetrieveAllReturn []*IntegrityRuleTransport `xml:"integrityRuleRetrieveAllReturn,omitempty"`
}

type LogInspectionRuleRetrieveAll struct {
	XMLName xml.Name `xml:"urn:Manager logInspectionRuleRetrieveAll"`

	SID string `xml:"sID,omitempty"`
}

type LogInspectionRuleRetrieveAllResponse struct {
	XMLName xml.Name `xml:"urn:Manager logInspectionRuleRetrieveAllResponse"`

	LogInspectionRuleRetrieveAllReturn []*LogInspectionRuleTransport `xml:"logInspectionRuleRetrieveAllReturn,omitempty"`
}

type DPIRuleRetrieveByName struct {
	XMLName xml.Name `xml:"urn:Manager DPIRuleRetrieveByName"`

	Name string `xml:"name,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type DPIRuleRetrieveByNameResponse struct {
	XMLName xml.Name `xml:"urn:Manager DPIRuleRetrieveByNameResponse"`

	DPIRuleRetrieveByNameReturn *DPIRuleTransport `xml:"DPIRuleRetrieveByNameReturn,omitempty"`
}

type CounterWithIDRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager counterWithIDRetrieve"`

	CounterFilter *EnumCounterFilter `xml:"counterFilter,omitempty"`

	TimeFilter *TimeFilterTransport `xml:"timeFilter,omitempty"`

	HostFilter *HostFilterTransport `xml:"hostFilter,omitempty"`

	TagFilter *TagFilterTransport `xml:"tagFilter,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type CounterWithIDRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager counterWithIDRetrieveResponse"`

	CounterWithIDRetrieveReturn []*CounterWithIDTransport `xml:"counterWithIDRetrieveReturn,omitempty"`
}

type HostDetailRetrieveByName struct {
	XMLName xml.Name `xml:"urn:Manager hostDetailRetrieveByName"`

	Hostname string `xml:"hostname,omitempty"`

	HostDetailLevel *EnumHostDetailLevel `xml:"hostDetailLevel,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostDetailRetrieveByNameResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostDetailRetrieveByNameResponse"`

	HostDetailRetrieveByNameReturn []*HostDetailTransport `xml:"hostDetailRetrieveByNameReturn,omitempty"`
}

type SecurityProfileRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager securityProfileRetrieve"`

	Id int32 `xml:"id,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type SecurityProfileRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager securityProfileRetrieveResponse"`

	SecurityProfileRetrieveReturn *SecurityProfileTransport `xml:"securityProfileRetrieveReturn,omitempty"`
}

type RetrieveLicenseProfile struct {
	XMLName xml.Name `xml:"urn:Manager retrieveLicenseProfile"`

	ModuleNumber int32 `xml:"moduleNumber,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type RetrieveLicenseProfileResponse struct {
	XMLName xml.Name `xml:"urn:Manager retrieveLicenseProfileResponse"`

	RetrieveLicenseProfileReturn string `xml:"retrieveLicenseProfileReturn,omitempty"`
}

type ApplicationTypeDelete struct {
	XMLName xml.Name `xml:"urn:Manager applicationTypeDelete"`

	Ids []int32 `xml:"ids,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type ApplicationTypeDeleteResponse struct {
	XMLName xml.Name `xml:"urn:Manager applicationTypeDeleteResponse"`
}

type ScanFileExtListRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager scanFileExtListRetrieve"`

	Id int32 `xml:"id,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type ScanFileExtListRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager scanFileExtListRetrieveResponse"`

	ScanFileExtListRetrieveReturn *ScanFileExtListTransport `xml:"scanFileExtListRetrieveReturn,omitempty"`
}

type CounterSumRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager counterSumRetrieve"`

	CounterFilter *EnumCounterSumFilter `xml:"counterFilter,omitempty"`

	TimeFilter *TimeFilterTransport `xml:"timeFilter,omitempty"`

	HostFilter *HostFilterTransport `xml:"hostFilter,omitempty"`

	TagFilter *TagFilterTransport `xml:"tagFilter,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type CounterSumRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager counterSumRetrieveResponse"`

	CounterSumRetrieveReturn int64 `xml:"counterSumRetrieveReturn,omitempty"`
}

type IPListRetrieveByName struct {
	XMLName xml.Name `xml:"urn:Manager IPListRetrieveByName"`

	Name string `xml:"name,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type IPListRetrieveByNameResponse struct {
	XMLName xml.Name `xml:"urn:Manager IPListRetrieveByNameResponse"`

	IPListRetrieveByNameReturn *IPListTransport `xml:"IPListRetrieveByNameReturn,omitempty"`
}

type UserRetrieveByName struct {
	XMLName xml.Name `xml:"urn:Manager userRetrieveByName"`

	Name string `xml:"name,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type UserRetrieveByNameResponse struct {
	XMLName xml.Name `xml:"urn:Manager userRetrieveByNameResponse"`

	UserRetrieveByNameReturn *UserTransport `xml:"userRetrieveByNameReturn,omitempty"`
}

type SoftwareApplyToHosts struct {
	XMLName xml.Name `xml:"urn:Manager softwareApplyToHosts"`

	HostIDs []int32 `xml:"hostIDs,omitempty"`

	InstallerVersion string `xml:"installerVersion,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type SoftwareApplyToHostsResponse struct {
	XMLName xml.Name `xml:"urn:Manager softwareApplyToHostsResponse"`
}

type HostGroupRetrieveByName struct {
	XMLName xml.Name `xml:"urn:Manager hostGroupRetrieveByName"`

	Name string `xml:"name,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostGroupRetrieveByNameResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostGroupRetrieveByNameResponse"`

	HostGroupRetrieveByNameReturn *HostGroupTransport `xml:"hostGroupRetrieveByNameReturn,omitempty"`
}

type HostDetailRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager hostDetailRetrieve"`

	HostFilter *HostFilterTransport `xml:"hostFilter,omitempty"`

	HostDetailLevel *EnumHostDetailLevel `xml:"hostDetailLevel,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostDetailRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostDetailRetrieveResponse"`

	HostDetailRetrieveReturn []*HostDetailTransport `xml:"hostDetailRetrieveReturn,omitempty"`
}

type HostMoveToHostGroup struct {
	XMLName xml.Name `xml:"urn:Manager hostMoveToHostGroup"`

	HostIDs []int32 `xml:"hostIDs,omitempty"`

	HostGroupID int32 `xml:"hostGroupID,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostMoveToHostGroupResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostMoveToHostGroupResponse"`
}

type ScanFileExtListSave struct {
	XMLName xml.Name `xml:"urn:Manager scanFileExtListSave"`

	ScanFileExtListTransport *ScanFileExtListTransport `xml:"scanFileExtListTransport,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type ScanFileExtListSaveResponse struct {
	XMLName xml.Name `xml:"urn:Manager scanFileExtListSaveResponse"`

	ScanFileExtListSaveReturn *ScanFileExtListTransport `xml:"scanFileExtListSaveReturn,omitempty"`
}

type HostRollbackComponent struct {
	XMLName xml.Name `xml:"urn:Manager hostRollbackComponent"`

	HostIDs []int32 `xml:"hostIDs,omitempty"`

	Type_ int32 `xml:"type,omitempty"`

	Id int32 `xml:"id,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostRollbackComponentResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostRollbackComponentResponse"`
}

type PortListRetrieveAll struct {
	XMLName xml.Name `xml:"urn:Manager portListRetrieveAll"`

	SID string `xml:"sID,omitempty"`
}

type PortListRetrieveAllResponse struct {
	XMLName xml.Name `xml:"urn:Manager portListRetrieveAllResponse"`

	PortListRetrieveAllReturn []*PortListTransport `xml:"portListRetrieveAllReturn,omitempty"`
}

type StatefulConfigurationRetrieveAll struct {
	XMLName xml.Name `xml:"urn:Manager statefulConfigurationRetrieveAll"`

	SID string `xml:"sID,omitempty"`
}

type StatefulConfigurationRetrieveAllResponse struct {
	XMLName xml.Name `xml:"urn:Manager statefulConfigurationRetrieveAllResponse"`

	StatefulConfigurationRetrieveAllReturn []*StatefulConfigurationTransport `xml:"statefulConfigurationRetrieveAllReturn,omitempty"`
}

type LogInspectionDecoderDelete struct {
	XMLName xml.Name `xml:"urn:Manager logInspectionDecoderDelete"`

	Ids []int32 `xml:"ids,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type LogInspectionDecoderDeleteResponse struct {
	XMLName xml.Name `xml:"urn:Manager logInspectionDecoderDeleteResponse"`
}

type ApplicationTypeOverrideRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager applicationTypeOverrideRetrieve"`

	Id int32 `xml:"id,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type ApplicationTypeOverrideRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager applicationTypeOverrideRetrieveResponse"`

	ApplicationTypeOverrideRetrieveReturn *ApplicationTypeOverrideTransport `xml:"applicationTypeOverrideRetrieveReturn,omitempty"`
}

type HostUpdateComponent struct {
	XMLName xml.Name `xml:"urn:Manager hostUpdateComponent"`

	HostIDs []int32 `xml:"hostIDs,omitempty"`

	Type_ int32 `xml:"type,omitempty"`

	Id int32 `xml:"id,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostUpdateComponentResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostUpdateComponentResponse"`
}

type ScanFileListRetrieveByName struct {
	XMLName xml.Name `xml:"urn:Manager scanFileListRetrieveByName"`

	Name string `xml:"name,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type ScanFileListRetrieveByNameResponse struct {
	XMLName xml.Name `xml:"urn:Manager scanFileListRetrieveByNameResponse"`

	ScanFileListRetrieveByNameReturn *ScanFileListTransport `xml:"scanFileListRetrieveByNameReturn,omitempty"`
}

type SecurityUpdateDelete struct {
	XMLName xml.Name `xml:"urn:Manager securityUpdateDelete"`

	Ids []int32 `xml:"ids,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type SecurityUpdateDeleteResponse struct {
	XMLName xml.Name `xml:"urn:Manager securityUpdateDeleteResponse"`
}

type AntiMalwareRetrieveAll struct {
	XMLName xml.Name `xml:"urn:Manager antiMalwareRetrieveAll"`

	SID string `xml:"sID,omitempty"`
}

type AntiMalwareRetrieveAllResponse struct {
	XMLName xml.Name `xml:"urn:Manager antiMalwareRetrieveAllResponse"`

	AntiMalwareRetrieveAllReturn []*AntiMalwareTransport `xml:"antiMalwareRetrieveAllReturn,omitempty"`
}

type ApplicationTypeOverrideDelete struct {
	XMLName xml.Name `xml:"urn:Manager applicationTypeOverrideDelete"`

	Ids []int32 `xml:"ids,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type ApplicationTypeOverrideDeleteResponse struct {
	XMLName xml.Name `xml:"urn:Manager applicationTypeOverrideDeleteResponse"`
}

type HostRecommendationsResolve struct {
	XMLName xml.Name `xml:"urn:Manager hostRecommendationsResolve"`

	HostID int32 `xml:"hostID,omitempty"`

	Type_ int32 `xml:"type,omitempty"`

	RuleIDs []int32 `xml:"ruleIDs,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostRecommendationsResolveResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostRecommendationsResolveResponse"`
}

type SoftwareRetrieveForHost struct {
	XMLName xml.Name `xml:"urn:Manager softwareRetrieveForHost"`

	HostID int32 `xml:"hostID,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type SoftwareRetrieveForHostResponse struct {
	XMLName xml.Name `xml:"urn:Manager softwareRetrieveForHostResponse"`

	SoftwareRetrieveForHostReturn []*SoftwareTransport `xml:"softwareRetrieveForHostReturn,omitempty"`
}

type StatusSummaryRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager statusSummaryRetrieve"`

	SID string `xml:"sID,omitempty"`
}

type StatusSummaryRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager statusSummaryRetrieveResponse"`

	StatusSummaryRetrieveReturn *StatusSummaryTransport `xml:"statusSummaryRetrieveReturn,omitempty"`
}

type SecurityProfileAssignToHost struct {
	XMLName xml.Name `xml:"urn:Manager securityProfileAssignToHost"`

	SecurityProfileID int32 `xml:"securityProfileID,omitempty"`

	HostIDs []int32 `xml:"hostIDs,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type SecurityProfileAssignToHostResponse struct {
	XMLName xml.Name `xml:"urn:Manager securityProfileAssignToHostResponse"`
}

type LogInspectionEventRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager logInspectionEventRetrieve"`

	TimeFilter *TimeFilterTransport `xml:"timeFilter,omitempty"`

	HostFilter *HostFilterTransport `xml:"hostFilter,omitempty"`

	EventIdFilter *IDFilterTransport `xml:"eventIdFilter,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type LogInspectionEventRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager logInspectionEventRetrieveResponse"`

	LogInspectionEventRetrieveReturn *LogInspectionEventListTransport `xml:"logInspectionEventRetrieveReturn,omitempty"`
}

type LogInspectionEventRetrieve2 struct {
	XMLName xml.Name `xml:"urn:Manager logInspectionEventRetrieve2"`

	TimeFilter *TimeFilterTransport `xml:"timeFilter,omitempty"`

	HostFilter *HostFilterTransport `xml:"hostFilter,omitempty"`

	EventIdFilter *IDFilterTransport2 `xml:"eventIdFilter,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type LogInspectionEventRetrieve2Response struct {
	XMLName xml.Name `xml:"urn:Manager logInspectionEventRetrieve2Response"`

	LogInspectionEventRetrieve2Return *LogInspectionEventListTransport `xml:"logInspectionEventRetrieve2Return,omitempty"`
}

type ScanDirectoryListRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager scanDirectoryListRetrieve"`

	Id int32 `xml:"id,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type ScanDirectoryListRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager scanDirectoryListRetrieveResponse"`

	ScanDirectoryListRetrieveReturn *ScanDirectoryListTransport `xml:"scanDirectoryListRetrieveReturn,omitempty"`
}

type LogInspectionRuleSave struct {
	XMLName xml.Name `xml:"urn:Manager logInspectionRuleSave"`

	Irt *LogInspectionRuleTransport `xml:"irt,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type LogInspectionRuleSaveResponse struct {
	XMLName xml.Name `xml:"urn:Manager logInspectionRuleSaveResponse"`

	LogInspectionRuleSaveReturn *LogInspectionRuleTransport `xml:"logInspectionRuleSaveReturn,omitempty"`
}

type LogInspectionDecoderRetrieveAll struct {
	XMLName xml.Name `xml:"urn:Manager logInspectionDecoderRetrieveAll"`

	SID string `xml:"sID,omitempty"`
}

type LogInspectionDecoderRetrieveAllResponse struct {
	XMLName xml.Name `xml:"urn:Manager logInspectionDecoderRetrieveAllResponse"`

	LogInspectionDecoderRetrieveAllReturn []*LogInspectionDecoderTransport `xml:"logInspectionDecoderRetrieveAllReturn,omitempty"`
}

type ApplicationTypeSave struct {
	XMLName xml.Name `xml:"urn:Manager applicationTypeSave"`

	At *ApplicationTypeTransport `xml:"at,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type ApplicationTypeSaveResponse struct {
	XMLName xml.Name `xml:"urn:Manager applicationTypeSaveResponse"`

	ApplicationTypeSaveReturn *ApplicationTypeTransport `xml:"applicationTypeSaveReturn,omitempty"`
}

type ApplicationTypeRetrieveByName struct {
	XMLName xml.Name `xml:"urn:Manager applicationTypeRetrieveByName"`

	Name string `xml:"name,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type ApplicationTypeRetrieveByNameResponse struct {
	XMLName xml.Name `xml:"urn:Manager applicationTypeRetrieveByNameResponse"`

	ApplicationTypeRetrieveByNameReturn *ApplicationTypeTransport `xml:"applicationTypeRetrieveByNameReturn,omitempty"`
}

type PortListRetrieveByName struct {
	XMLName xml.Name `xml:"urn:Manager portListRetrieveByName"`

	Name string `xml:"name,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type PortListRetrieveByNameResponse struct {
	XMLName xml.Name `xml:"urn:Manager portListRetrieveByNameResponse"`

	PortListRetrieveByNameReturn *PortListTransport `xml:"portListRetrieveByNameReturn,omitempty"`
}

type ScanDirectoryListRetrieveByName struct {
	XMLName xml.Name `xml:"urn:Manager scanDirectoryListRetrieveByName"`

	Name string `xml:"name,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type ScanDirectoryListRetrieveByNameResponse struct {
	XMLName xml.Name `xml:"urn:Manager scanDirectoryListRetrieveByNameResponse"`

	ScanDirectoryListRetrieveByNameReturn *ScanDirectoryListTransport `xml:"scanDirectoryListRetrieveByNameReturn,omitempty"`
}

type ScanFileExtListRetrieveByName struct {
	XMLName xml.Name `xml:"urn:Manager scanFileExtListRetrieveByName"`

	Name string `xml:"name,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type ScanFileExtListRetrieveByNameResponse struct {
	XMLName xml.Name `xml:"urn:Manager scanFileExtListRetrieveByNameResponse"`

	ScanFileExtListRetrieveByNameReturn *ScanFileExtListTransport `xml:"scanFileExtListRetrieveByNameReturn,omitempty"`
}

type ScanFileListRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager scanFileListRetrieve"`

	Id int32 `xml:"id,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type ScanFileListRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager scanFileListRetrieveResponse"`

	ScanFileListRetrieveReturn *ScanFileListTransport `xml:"scanFileListRetrieveReturn,omitempty"`
}

type FirewallRuleDelete struct {
	XMLName xml.Name `xml:"urn:Manager firewallRuleDelete"`

	Ids []int32 `xml:"ids,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type FirewallRuleDeleteResponse struct {
	XMLName xml.Name `xml:"urn:Manager firewallRuleDeleteResponse"`
}

type HostIntegrityScan struct {
	XMLName xml.Name `xml:"urn:Manager hostIntegrityScan"`

	HostIDs []int32 `xml:"hostIDs,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostIntegrityScanResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostIntegrityScanResponse"`
}

type SecurityUpdateStore struct {
	XMLName xml.Name `xml:"urn:Manager securityUpdateStore"`

	SecurityUpdate []byte `xml:"securityUpdate,omitempty"`

	FileName string `xml:"fileName,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type SecurityUpdateStoreResponse struct {
	XMLName xml.Name `xml:"urn:Manager securityUpdateStoreResponse"`

	SecurityUpdateStoreReturn *SecurityUpdateTransport `xml:"securityUpdateStoreReturn,omitempty"`
}

type AntiMalwareRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager antiMalwareRetrieve"`

	Id int32 `xml:"id,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type AntiMalwareRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager antiMalwareRetrieveResponse"`

	AntiMalwareRetrieveReturn *AntiMalwareTransport `xml:"antiMalwareRetrieveReturn,omitempty"`
}

type HostGroupRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager hostGroupRetrieve"`

	Id int32 `xml:"id,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostGroupRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostGroupRetrieveResponse"`

	HostGroupRetrieveReturn *HostGroupTransport `xml:"hostGroupRetrieveReturn,omitempty"`
}

type HostRetrieveByHostGroup struct {
	XMLName xml.Name `xml:"urn:Manager hostRetrieveByHostGroup"`

	HostGroupID int32 `xml:"hostGroupID,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostRetrieveByHostGroupResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostRetrieveByHostGroupResponse"`

	HostRetrieveByHostGroupReturn []*HostTransport `xml:"hostRetrieveByHostGroupReturn,omitempty"`
}

type CounterAlertTypeRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager counterAlertTypeRetrieve"`

	CounterFilter *EnumCounterFilter `xml:"counterFilter,omitempty"`

	TimeFilter *TimeFilterTransport `xml:"timeFilter,omitempty"`

	HostFilter *HostFilterTransport `xml:"hostFilter,omitempty"`

	TagFilter *TagFilterTransport `xml:"tagFilter,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type CounterAlertTypeRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager counterAlertTypeRetrieveResponse"`

	CounterAlertTypeRetrieveReturn []*CounterAlertTypeTransport `xml:"counterAlertTypeRetrieveReturn,omitempty"`
}

type ScanFileListDelete struct {
	XMLName xml.Name `xml:"urn:Manager scanFileListDelete"`

	Ids []int32 `xml:"ids,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type ScanFileListDeleteResponse struct {
	XMLName xml.Name `xml:"urn:Manager scanFileListDeleteResponse"`
}

type StatefulConfigurationRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager statefulConfigurationRetrieve"`

	Id int32 `xml:"id,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type StatefulConfigurationRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager statefulConfigurationRetrieveResponse"`

	StatefulConfigurationRetrieveReturn *StatefulConfigurationTransport `xml:"statefulConfigurationRetrieveReturn,omitempty"`
}

type ApplicationTypeRetrieveAll struct {
	XMLName xml.Name `xml:"urn:Manager applicationTypeRetrieveAll"`

	SID string `xml:"sID,omitempty"`
}

type ApplicationTypeRetrieveAllResponse struct {
	XMLName xml.Name `xml:"urn:Manager applicationTypeRetrieveAllResponse"`

	ApplicationTypeRetrieveAllReturn []*ApplicationTypeTransport `xml:"applicationTypeRetrieveAllReturn,omitempty"`
}

type FirewallRuleRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager firewallRuleRetrieve"`

	Id int32 `xml:"id,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type FirewallRuleRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager firewallRuleRetrieveResponse"`

	FirewallRuleRetrieveReturn *FirewallRuleTransport `xml:"firewallRuleRetrieveReturn,omitempty"`
}

type LogInspectionRuleDelete struct {
	XMLName xml.Name `xml:"urn:Manager logInspectionRuleDelete"`

	Ids []int32 `xml:"ids,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type LogInspectionRuleDeleteResponse struct {
	XMLName xml.Name `xml:"urn:Manager logInspectionRuleDeleteResponse"`
}

type IntegrityRuleSave struct {
	XMLName xml.Name `xml:"urn:Manager integrityRuleSave"`

	Irt *IntegrityRuleTransport `xml:"irt,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type IntegrityRuleSaveResponse struct {
	XMLName xml.Name `xml:"urn:Manager integrityRuleSaveResponse"`

	IntegrityRuleSaveReturn *IntegrityRuleTransport `xml:"integrityRuleSaveReturn,omitempty"`
}

type AntiMalwareEventRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager antiMalwareEventRetrieve"`

	TimeFilter *TimeFilterTransport `xml:"timeFilter,omitempty"`

	HostFilter *HostFilterTransport `xml:"hostFilter,omitempty"`

	EventIdFilter *IDFilterTransport `xml:"eventIdFilter,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type AntiMalwareEventRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager antiMalwareEventRetrieveResponse"`

	AntiMalwareEventRetrieveReturn *AntiMalwareEventListTransport `xml:"antiMalwareEventRetrieveReturn,omitempty"`
}

type AntiMalwareEventRetrieve2 struct {
	XMLName xml.Name `xml:"urn:Manager antiMalwareEventRetrieve2"`

	TimeFilter *TimeFilterTransport `xml:"timeFilter,omitempty"`

	HostFilter *HostFilterTransport `xml:"hostFilter,omitempty"`

	EventIdFilter *IDFilterTransport2 `xml:"eventIdFilter,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type AntiMalwareEventRetrieve2Response struct {
	XMLName xml.Name `xml:"urn:Manager antiMalwareEventRetrieve2Response"`

	AntiMalwareEventRetrieve2Return *AntiMalwareEventListTransport `xml:"antiMalwareEventRetrieve2Return,omitempty"`
}

type CounterHostRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager counterHostRetrieve"`

	CounterFilter *EnumCounterFilter `xml:"counterFilter,omitempty"`

	TimeFilter *TimeFilterTransport `xml:"timeFilter,omitempty"`

	HostFilter *HostFilterTransport `xml:"hostFilter,omitempty"`

	TagFilter *TagFilterTransport `xml:"tagFilter,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type CounterHostRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager counterHostRetrieveResponse"`

	CounterHostRetrieveReturn []*CounterHostTransport `xml:"counterHostRetrieveReturn,omitempty"`
}

type ComponentSummaryRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager componentSummaryRetrieve"`

	SID string `xml:"sID,omitempty"`
}

type ComponentSummaryRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager componentSummaryRetrieveResponse"`

	ComponentSummaryRetrieveReturn []*ComponentInfoTransport `xml:"componentSummaryRetrieveReturn,omitempty"`
}

type SoftwareRetrieveAll struct {
	XMLName xml.Name `xml:"urn:Manager softwareRetrieveAll"`

	SID string `xml:"sID,omitempty"`
}

type SoftwareRetrieveAllResponse struct {
	XMLName xml.Name `xml:"urn:Manager softwareRetrieveAllResponse"`

	SoftwareRetrieveAllReturn []*SoftwareTransport `xml:"softwareRetrieveAllReturn,omitempty"`
}

type WebReputationEventRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager webReputationEventRetrieve"`

	TimeFilter *TimeFilterTransport `xml:"timeFilter,omitempty"`

	HostFilter *HostFilterTransport `xml:"hostFilter,omitempty"`

	EventIdFilter *IDFilterTransport `xml:"eventIdFilter,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type WebReputationEventRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager webReputationEventRetrieveResponse"`

	WebReputationEventRetrieveReturn *WebReputationEventListTransport `xml:"webReputationEventRetrieveReturn,omitempty"`
}

type WebReputationEventRetrieve2 struct {
	XMLName xml.Name `xml:"urn:Manager webReputationEventRetrieve2"`

	TimeFilter *TimeFilterTransport `xml:"timeFilter,omitempty"`

	HostFilter *HostFilterTransport `xml:"hostFilter,omitempty"`

	EventIdFilter *IDFilterTransport2 `xml:"eventIdFilter,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type WebReputationEventRetrieve2Response struct {
	XMLName xml.Name `xml:"urn:Manager webReputationEventRetrieve2Response"`

	WebReputationEventRetrieve2Return *WebReputationEventListTransport `xml:"webReputationEventRetrieve2Return,omitempty"`
}

type HostRetrieveByName struct {
	XMLName xml.Name `xml:"urn:Manager hostRetrieveByName"`

	Hostname string `xml:"hostname,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostRetrieveByNameResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostRetrieveByNameResponse"`

	HostRetrieveByNameReturn *HostTransport `xml:"hostRetrieveByNameReturn,omitempty"`
}

type HostStatusSummaryRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager hostStatusSummaryRetrieve"`

	HostFilter *HostFilterTransport `xml:"hostFilter,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostStatusSummaryRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostStatusSummaryRetrieveResponse"`

	HostStatusSummaryRetrieveReturn *HostStatusSummaryTransport `xml:"hostStatusSummaryRetrieveReturn,omitempty"`
}

type StatefulConfigurationDelete struct {
	XMLName xml.Name `xml:"urn:Manager statefulConfigurationDelete"`

	Ids []int32 `xml:"ids,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type StatefulConfigurationDeleteResponse struct {
	XMLName xml.Name `xml:"urn:Manager statefulConfigurationDeleteResponse"`
}

type SoftwareVersionStringsCompare struct {
	XMLName xml.Name `xml:"urn:Manager softwareVersionStringsCompare"`

	Version1 string `xml:"version1,omitempty"`

	Version2 string `xml:"version2,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type SoftwareVersionStringsCompareResponse struct {
	XMLName xml.Name `xml:"urn:Manager softwareVersionStringsCompareResponse"`

	SoftwareVersionStringsCompareReturn *EnumCompareResults `xml:"softwareVersionStringsCompareReturn,omitempty"`
}

type HostDetailRetrieveByExternal struct {
	XMLName xml.Name `xml:"urn:Manager hostDetailRetrieveByExternal"`

	ExternalFilter *ExternalFilterTransport `xml:"externalFilter,omitempty"`

	HostDetailLevel *EnumHostDetailLevel `xml:"hostDetailLevel,omitempty"`
	EnumHostDetailLevel
	SID string `xml:"sID,omitempty"`
}

type HostDetailRetrieveByExternalResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostDetailRetrieveByExternalResponse"`

	HostDetailRetrieveByExternalReturn []*HostDetailTransport `xml:"hostDetailRetrieveByExternalReturn,omitempty"`
}

type HostRecommendationsClear struct {
	XMLName xml.Name `xml:"urn:Manager hostRecommendationsClear"`

	HostIDs []int32 `xml:"hostIDs,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostRecommendationsClearResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostRecommendationsClearResponse"`
}

type LogInspectionDecoderSave struct {
	XMLName xml.Name `xml:"urn:Manager logInspectionDecoderSave"`

	Irt *LogInspectionDecoderTransport `xml:"irt,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type LogInspectionDecoderSaveResponse struct {
	XMLName xml.Name `xml:"urn:Manager logInspectionDecoderSaveResponse"`

	LogInspectionDecoderSaveReturn *LogInspectionDecoderTransport `xml:"logInspectionDecoderSaveReturn,omitempty"`
}

type SecurityProfileDelete struct {
	XMLName xml.Name `xml:"urn:Manager securityProfileDelete"`

	Ids []int32 `xml:"ids,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type SecurityProfileDeleteResponse struct {
	XMLName xml.Name `xml:"urn:Manager securityProfileDeleteResponse"`
}

type SecurityProfileSettingGet struct {
	XMLName xml.Name `xml:"urn:Manager securityProfileSettingGet"`

	SecurityProfileID int32 `xml:"securityProfileID,omitempty"`

	Keys []*EnumEditableSettingKey `xml:"keys,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type SecurityProfileSettingGetResponse struct {
	XMLName xml.Name `xml:"urn:Manager securityProfileSettingGetResponse"`

	SecurityProfileSettingGetReturn []*EditableSettingStoredTransport `xml:"securityProfileSettingGetReturn,omitempty"`
}

type MACListRetrieveAll struct {
	XMLName xml.Name `xml:"urn:Manager MACListRetrieveAll"`

	SID string `xml:"sID,omitempty"`
}

type MACListRetrieveAllResponse struct {
	XMLName xml.Name `xml:"urn:Manager MACListRetrieveAllResponse"`

	MACListRetrieveAllReturn []*MACListTransport `xml:"MACListRetrieveAllReturn,omitempty"`
}

type IntegrityEventRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager integrityEventRetrieve"`

	TimeFilter *TimeFilterTransport `xml:"timeFilter,omitempty"`

	HostFilter *HostFilterTransport `xml:"hostFilter,omitempty"`

	EventIdFilter *IDFilterTransport `xml:"eventIdFilter,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type IntegrityEventRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager integrityEventRetrieveResponse"`

	IntegrityEventRetrieveReturn *IntegrityEventListTransport `xml:"integrityEventRetrieveReturn,omitempty"`
}

type IntegrityEventRetrieve2 struct {
	XMLName xml.Name `xml:"urn:Manager integrityEventRetrieve2"`

	TimeFilter *TimeFilterTransport `xml:"timeFilter,omitempty"`

	HostFilter *HostFilterTransport `xml:"hostFilter,omitempty"`

	EventIdFilter *IDFilterTransport2 `xml:"eventIdFilter,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type IntegrityEventRetrieve2Response struct {
	XMLName xml.Name `xml:"urn:Manager integrityEventRetrieve2Response"`

	IntegrityEventRetrieve2Return *IntegrityEventListTransport `xml:"integrityEventRetrieve2Return,omitempty"`
}

type SecurityProfileRetrieveAll struct {
	XMLName xml.Name `xml:"urn:Manager securityProfileRetrieveAll"`

	SID string `xml:"sID,omitempty"`
}

type SecurityProfileRetrieveAllResponse struct {
	XMLName xml.Name `xml:"urn:Manager securityProfileRetrieveAllResponse"`

	SecurityProfileRetrieveAllReturn []*SecurityProfileTransport `xml:"securityProfileRetrieveAllReturn,omitempty"`
}

type HostRecommendationScan struct {
	XMLName xml.Name `xml:"urn:Manager hostRecommendationScan"`

	HostIDs []int32 `xml:"hostIDs,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type HostRecommendationScanResponse struct {
	XMLName xml.Name `xml:"urn:Manager hostRecommendationScanResponse"`
}

type AuthenticateTenant struct {
	XMLName xml.Name `xml:"urn:Manager authenticateTenant"`

	TenantName string `xml:"tenantName,omitempty"`

	Username string `xml:"username,omitempty"`

	Password string `xml:"password,omitempty"`
}

type AuthenticateTenantResponse struct {
	XMLName xml.Name `xml:"urn:Manager authenticateTenantResponse"`

	AuthenticateTenantReturn string `xml:"authenticateTenantReturn,omitempty"`
}

type DPIRuleDependenciesRetrieve struct {
	XMLName xml.Name `xml:"urn:Manager DPIRuleDependenciesRetrieve"`

	Id int32 `xml:"id,omitempty"`

	SID string `xml:"sID,omitempty"`
}

type DPIRuleDependenciesRetrieveResponse struct {
	XMLName xml.Name `xml:"urn:Manager DPIRuleDependenciesRetrieveResponse"`

	DPIRuleDependenciesRetrieveReturn []*DPIRuleTransport `xml:"DPIRuleDependenciesRetrieveReturn,omitempty"`
}

type ManagerException struct {
	XMLName xml.Name `xml:"urn:Manager ManagerException"`
}

type ManagerSecurityException struct {
	XMLName xml.Name `xml:"urn:Manager ManagerSecurityException"`

	*ManagerException
}

type ManagerAuthenticationException struct {
	XMLName xml.Name `xml:"urn:Manager ManagerAuthenticationException"`

	*ManagerSecurityException
}

type ManagerLockoutException struct {
	XMLName xml.Name `xml:"urn:Manager ManagerLockoutException"`

	*ManagerAuthenticationException
}

type ManagerMaxSessionsException struct {
	XMLName xml.Name `xml:"urn:Manager ManagerMaxSessionsException"`

	*ManagerAuthenticationException
}

type ManagerCommunicationException struct {
	XMLName xml.Name `xml:"urn:Manager ManagerCommunicationException"`

	*ManagerException
}

type ManagerValidationException struct {
	XMLName xml.Name `xml:"urn:Manager ManagerValidationException"`

	*ManagerException
}

type ManagerTimeoutException struct {
	XMLName xml.Name `xml:"urn:Manager ManagerTimeoutException"`

	*ManagerAuthenticationException
}

type TransportObject struct {
	XMLName xml.Name `xml:"urn:Manager TransportObject"`
}

type ConfigurationTransport struct {
	XMLName xml.Name `xml:"urn:Manager ConfigurationTransport"`

	*TransportObject

	ID int32 `xml:"ID,omitempty"`

	Description string `xml:"description,omitempty"`

	Name string `xml:"name,omitempty"`
}

type HostTransport struct {
	XMLName xml.Name `xml:""`

	*ConfigurationTransport

	DisplayName string `xml:"displayName,omitempty"`

	External bool `xml:"external,omitempty"`

	ExternalID string `xml:"externalID,omitempty"`

	HostGroupID int32 `xml:"hostGroupID,omitempty"`

	HostType *EnumHostType `xml:"hostType,omitempty"`

	Platform string `xml:"platform,omitempty"`

	SecurityProfileID int32 `xml:"securityProfileID,omitempty"`
}

type ArrayOf_xsd_int struct {
	XMLName xml.Name `xml:""`

	Item []int32 `xml:"item,omitempty"`
}

type ArrayOf_xsd_string struct {
	XMLName xml.Name `xml:""`

	Item []string `xml:"item,omitempty"`
}

type HostInterfaceTransport struct {
	XMLName xml.Name `xml:""`

	*HostTransport

	Dhcp bool `xml:"dhcp,omitempty"`

	HostBridgeId int32 `xml:"hostBridgeId,omitempty"`

	InterfaceTypeId int32 `xml:"interfaceTypeId,omitempty"`

	Mac string `xml:"mac,omitempty"`

	NotAvailable bool `xml:"notAvailable,omitempty"`

	VirtualDeviceKey int32 `xml:"virtualDeviceKey,omitempty"`
}

type ArrayOfHostInterfaceTransport struct {
	XMLName xml.Name `xml:""`

	Item []*HostInterfaceTransport `xml:"item,omitempty"`
}

type HostDetailTransport struct {
	XMLName xml.Name `xml:""`

	*HostTransport

	AntiMalwareClassicPatternVersion string `xml:"antiMalwareClassicPatternVersion,omitempty"`

	AntiMalwareEngineVersion string `xml:"antiMalwareEngineVersion,omitempty"`

	AntiMalwareIntelliTrapExceptionVersion string `xml:"antiMalwareIntelliTrapExceptionVersion,omitempty"`

	AntiMalwareIntelliTrapVersion string `xml:"antiMalwareIntelliTrapVersion,omitempty"`

	AntiMalwareSmartScanPatternVersion string `xml:"antiMalwareSmartScanPatternVersion,omitempty"`

	AntiMalwareSpywarePatternVersion string `xml:"antiMalwareSpywarePatternVersion,omitempty"`

	CloudObjectImageId string `xml:"cloudObjectImageId,omitempty"`

	CloudObjectInstanceId string `xml:"cloudObjectInstanceId,omitempty"`

	CloudObjectInternalUniqueId string `xml:"cloudObjectInternalUniqueId,omitempty"`

	CloudObjectSecurityGroupIds string `xml:"cloudObjectSecurityGroupIds,omitempty"`

	CloudObjectType *EnumCloudObjectType `xml:"cloudObjectType,omitempty"`

	ComponentKlasses *ArrayOf_xsd_int `xml:"componentKlasses,omitempty"`

	ComponentNames *ArrayOf_xsd_string `xml:"componentNames,omitempty"`

	ComponentTypes *ArrayOf_xsd_int `xml:"componentTypes,omitempty"`

	ComponentVersions *ArrayOf_xsd_string `xml:"componentVersions,omitempty"`

	HostGroupName string `xml:"hostGroupName,omitempty"`

	HostInterfaces *ArrayOfHostInterfaceTransport `xml:"hostInterfaces,omitempty"`

	HostLight *EnumHostLight `xml:"hostLight,omitempty"`

	LastAnitMalwareScheduledScan string `xml:"lastAnitMalwareScheduledScan,omitempty"`

	LastAntiMalwareEvent string `xml:"lastAntiMalwareEvent,omitempty"`

	LastAntiMalwareManualScan string `xml:"lastAntiMalwareManualScan,omitempty"`

	LastDpiEvent string `xml:"lastDpiEvent,omitempty"`

	LastFirewallEvent string `xml:"lastFirewallEvent,omitempty"`

	LastIPUsed string `xml:"lastIPUsed,omitempty"`

	LastIntegrityMonitoringEvent string `xml:"lastIntegrityMonitoringEvent,omitempty"`

	LastLogInspectionEvent string `xml:"lastLogInspectionEvent,omitempty"`

	LastWebReputationEvent string `xml:"lastWebReputationEvent,omitempty"`

	Light int32 `xml:"light,omitempty"`

	Locked bool `xml:"locked,omitempty"`

	OverallAntiMalwareStatus string `xml:"overallAntiMalwareStatus,omitempty"`

	OverallDpiStatus string `xml:"overallDpiStatus,omitempty"`

	OverallFirewallStatus string `xml:"overallFirewallStatus,omitempty"`

	OverallIntegrityMonitoringStatus string `xml:"overallIntegrityMonitoringStatus,omitempty"`

	OverallLastRecommendationScan string `xml:"overallLastRecommendationScan,omitempty"`

	OverallLastSuccessfulCommunication string `xml:"overallLastSuccessfulCommunication,omitempty"`

	OverallLastSuccessfulUpdate string `xml:"overallLastSuccessfulUpdate,omitempty"`

	OverallLastUpdateRequired string `xml:"overallLastUpdateRequired,omitempty"`

	OverallLogInspectionStatus string `xml:"overallLogInspectionStatus,omitempty"`

	OverallStatus string `xml:"overallStatus,omitempty"`

	OverallVersion string `xml:"overallVersion,omitempty"`

	OverallWebReputationStatus string `xml:"overallWebReputationStatus,omitempty"`

	SecurityProfileName string `xml:"securityProfileName,omitempty"`

	VirtualName string `xml:"virtualName,omitempty"`

	VirtualUuid string `xml:"virtualUuid,omitempty"`
}

type TimeFilterTransport struct {
	XMLName xml.Name `xml:""`

	*TransportObject

	RangeFrom time.Time `xml:"rangeFrom,omitempty"`

	RangeTo time.Time `xml:"rangeTo,omitempty"`

	SpecificTime time.Time `xml:"specificTime,omitempty"`

	Type_ string `xml:"type,omitempty"`
}

type HostFilterTransport struct {
	XMLName xml.Name `xml:""`

	HostGroupID int32 `xml:"hostGroupID,omitempty"`

	HostID int32 `xml:"hostID,omitempty"`

	SecurityProfileID int32 `xml:"securityProfileID,omitempty"`

	Type_ string `xml:"type,omitempty"`
}

type IDFilterTransport struct {
	XMLName xml.Name `xml:""`

	Id int32 `xml:"id,omitempty"`

	Operator string `xml:"operator,omitempty"`
}

type TruncatableListTransport struct {
	XMLName xml.Name `xml:"urn:Manager TruncatableListTransport"`

	*TransportObject

	Truncated bool `xml:"truncated,omitempty"`
}

type SystemEventTransport struct {
	XMLName xml.Name `xml:""`

	*TransportObject

	ActionPerformedBy string `xml:"actionPerformedBy,omitempty"`

	Description string `xml:"description,omitempty"`

	Event string `xml:"event,omitempty"`

	EventID int32 `xml:"eventID,omitempty"`

	EventOrigin *EnumEventOrigin `xml:"eventOrigin,omitempty"`

	ManagerHostname string `xml:"managerHostname,omitempty"`

	SystemEventID int32 `xml:"systemEventID,omitempty"`

	Tags string `xml:"tags,omitempty"`

	Target string `xml:"target,omitempty"`

	TargetID int64 `xml:"targetID,omitempty"`

	TargetType string `xml:"targetType,omitempty"`

	Time time.Time `xml:"time,omitempty"`

	Type_ string `xml:"type,omitempty"`
}

type ArrayOfSystemEventTransport struct {
	XMLName xml.Name `xml:""`

	Item []*SystemEventTransport `xml:"item,omitempty"`
}

type SystemEventListTransport struct {
	XMLName xml.Name `xml:""`

	*TruncatableListTransport

	SystemEvents *ArrayOfSystemEventTransport `xml:"systemEvents,omitempty"`
}

type IDFilterTransport2 struct {
	XMLName xml.Name `xml:"urn:Manager IDFilterTransport2"`

	Id int64 `xml:"id,omitempty"`

	Operator *EnumOperator `xml:"operator,omitempty"`
}

type LogInspectionDecoderTransport struct {
	XMLName xml.Name `xml:"urn:Manager LogInspectionDecoderTransport"`

	*ConfigurationTransport

	TBUID string `xml:"TBUID,omitempty"`

	Authoritative bool `xml:"authoritative,omitempty"`

	Content string `xml:"content,omitempty"`

	Identifier string `xml:"identifier,omitempty"`

	Issued time.Time `xml:"issued,omitempty"`

	MinAgentVersion string `xml:"minAgentVersion,omitempty"`

	MinManagerVersion string `xml:"minManagerVersion,omitempty"`
}

type ApplierInformationTransport struct {
	XMLName xml.Name `xml:"urn:Manager ApplierInformationTransport"`

	*TransportObject

	DPIRulesAdded int32 `xml:"DPIRulesAdded,omitempty"`

	DPIRulesAddedAndAssigned int32 `xml:"DPIRulesAddedAndAssigned,omitempty"`

	DPIRulesDeleted int32 `xml:"DPIRulesDeleted,omitempty"`

	DPIRulesUpdated int32 `xml:"DPIRulesUpdated,omitempty"`

	ApplicationTypesAdded int32 `xml:"applicationTypesAdded,omitempty"`

	ApplicationTypesDeleted int32 `xml:"applicationTypesDeleted,omitempty"`

	ApplicationTypesUpdated int32 `xml:"applicationTypesUpdated,omitempty"`

	DetailedSummary string `xml:"detailedSummary,omitempty"`

	IntegrityMonitoringRulesAdded int32 `xml:"integrityMonitoringRulesAdded,omitempty"`

	IntegrityMonitoringRulesDeleted int32 `xml:"integrityMonitoringRulesDeleted,omitempty"`

	IntegrityMonitoringRulesUpdated int32 `xml:"integrityMonitoringRulesUpdated,omitempty"`

	LogInspectionDecodersAdded int32 `xml:"logInspectionDecodersAdded,omitempty"`

	LogInspectionDecodersDeleted int32 `xml:"logInspectionDecodersDeleted,omitempty"`

	LogInspectionDecodersUpdated int32 `xml:"logInspectionDecodersUpdated,omitempty"`

	LogInspectionRulesAdded int32 `xml:"logInspectionRulesAdded,omitempty"`

	LogInspectionRulesDeleted int32 `xml:"logInspectionRulesDeleted,omitempty"`

	LogInspectionRulesUpdated int32 `xml:"logInspectionRulesUpdated,omitempty"`

	PortListsAdded int32 `xml:"portListsAdded,omitempty"`

	PortListsUpdated int32 `xml:"portListsUpdated,omitempty"`
}

type ManagerAuthorizationException struct {
	XMLName xml.Name `xml:"urn:Manager ManagerAuthorizationException"`

	*ManagerSecurityException
}

type ApplicationTypeOverrideTransport struct {
	XMLName xml.Name `xml:"urn:Manager ApplicationTypeOverrideTransport"`

	*TransportObject

	ID int32 `xml:"ID,omitempty"`

	ApplicationTypeID int32 `xml:"applicationTypeID,omitempty"`

	SecurityProfileID int32 `xml:"securityProfileID,omitempty"`

	PortType *EnumPortType `xml:"portType,omitempty"`

	Ports string `xml:"ports,omitempty"`

	PortListID int32 `xml:"portListID,omitempty"`

	IgnoreRecommendations bool `xml:"ignoreRecommendations,omitempty"`
}

type StatefulConfigurationTransport struct {
	XMLName xml.Name `xml:"urn:Manager StatefulConfigurationTransport"`

	*ConfigurationTransport

	AckStormDropConnection bool `xml:"ackStormDropConnection,omitempty"`

	AckStormProtection bool `xml:"ackStormProtection,omitempty"`

	AckStormProtectionThreshold int32 `xml:"ackStormProtectionThreshold,omitempty"`

	AllowIncomingActiveFTP bool `xml:"allowIncomingActiveFTP,omitempty"`

	AllowIncomingPassiveFTP bool `xml:"allowIncomingPassiveFTP,omitempty"`

	AllowOutgoingActiveFTP bool `xml:"allowOutgoingActiveFTP,omitempty"`

	AllowOutgoingPassiveFTP bool `xml:"allowOutgoingPassiveFTP,omitempty"`

	DenyFragmentedPackets bool `xml:"denyFragmentedPackets,omitempty"`

	DenyTcpCwrEceFlags bool `xml:"denyTcpCwrEceFlags,omitempty"`

	EnableICMPStatefulInspection bool `xml:"enableICMPStatefulInspection,omitempty"`

	EnableICMPStatefulLogging bool `xml:"enableICMPStatefulLogging,omitempty"`

	EnableTCPStatefulInspection bool `xml:"enableTCPStatefulInspection,omitempty"`

	EnableTCPStatefulLogging bool `xml:"enableTCPStatefulLogging,omitempty"`

	EnableUDPStatefulInspection bool `xml:"enableUDPStatefulInspection,omitempty"`

	EnableUDPStatefulLogging bool `xml:"enableUDPStatefulLogging,omitempty"`

	LimitHalfOpenConnections bool `xml:"limitHalfOpenConnections,omitempty"`

	LimitHalfOpenConnectionsTo int32 `xml:"limitHalfOpenConnectionsTo,omitempty"`

	LimitIncomingConnections bool `xml:"limitIncomingConnections,omitempty"`

	LimitIncomingConnectionsTo int32 `xml:"limitIncomingConnectionsTo,omitempty"`

	LimitOutgoingConnections bool `xml:"limitOutgoingConnections,omitempty"`

	LimitOutgoingConnectionsTo int32 `xml:"limitOutgoingConnectionsTo,omitempty"`

	SynFloodProtection bool `xml:"synFloodProtection,omitempty"`

	SynFloodProtectionThreshold int32 `xml:"synFloodProtectionThreshold,omitempty"`
}

type HostGroupTransport struct {
	XMLName xml.Name `xml:""`

	*ConfigurationTransport
	Name string `xml:"name,omitempty"`
	External bool `xml:"external,omitempty"`

	ExternalID string `xml:"externalID,omitempty"`

	ParentGroupID int32 `xml:"parentGroupID,omitempty"`
}

type HostGroupRetrieveAllReturnTransport  struct {
	XMLName xml.Name `xml:"urn:Manager hostGroupRetrieveAllReturn"`

	*ConfigurationTransport
	ID int `xml:"ID,omitempty"`
	External bool `xml:"external,omitempty"`

	ExternalID string `xml:"externalID,omitempty"`

	ParentGroupID int32 `xml:"parentGroupID,omitempty"`
}

type ManagerIntegrityConstraintException struct {
	XMLName xml.Name `xml:"urn:Manager ManagerIntegrityConstraintException"`

	*ManagerException
}

type EditableSettingTransport struct {
	XMLName xml.Name `xml:"urn:Manager EditableSettingTransport"`

	*TransportObject

	SettingKey *EnumEditableSettingKey `xml:"settingKey,omitempty"`

	SettingUnit *EnumEditableSettingUnit `xml:"settingUnit,omitempty"`

	SettingValue string `xml:"settingValue,omitempty"`
}

type EditableSettingStoredTransport struct {
	XMLName xml.Name `xml:"urn:Manager EditableSettingStoredTransport"`

	*EditableSettingTransport

	SettingScope *EnumEditableSettingStoredScope `xml:"settingScope,omitempty"`
}

type DPIRuleTransport struct {
	XMLName xml.Name `xml:""`

	*ConfigurationTransport

	TBUID string `xml:"TBUID,omitempty"`

	ApplicationTypeID int32 `xml:"applicationTypeID,omitempty"`

	Authoritative bool `xml:"authoritative,omitempty"`

	CvssScore float64 `xml:"cvssScore,omitempty"`

	DetectOnly bool `xml:"detectOnly,omitempty"`

	DisableEvent bool `xml:"disableEvent,omitempty"`

	EventOnPacketDrop bool `xml:"eventOnPacketDrop,omitempty"`

	EventOnPacketModify bool `xml:"eventOnPacketModify,omitempty"`

	Identifier string `xml:"identifier,omitempty"`

	IgnoreRecommendations bool `xml:"ignoreRecommendations,omitempty"`

	IncludePacketData bool `xml:"includePacketData,omitempty"`

	Issued string `xml:"issued,omitempty"`

	PatternAction *EnumDPIRuleAction `xml:"patternAction,omitempty"`

	PatternCaseSensitive bool `xml:"patternCaseSensitive,omitempty"`

	PatternEnd string `xml:"patternEnd,omitempty"`

	PatternIf *EnumDPIRuleIf `xml:"patternIf,omitempty"`

	PatternPatterns string `xml:"patternPatterns,omitempty"`

	PatternStart string `xml:"patternStart,omitempty"`

	Priority *EnumDPIRulePriority `xml:"priority,omitempty"`

	RaiseAlert bool `xml:"raiseAlert,omitempty"`

	RuleXML string `xml:"ruleXML,omitempty"`

	ScheduleID int32 `xml:"scheduleID,omitempty"`

	Severity string `xml:"severity,omitempty"`

	SignatureAction *EnumDPIRuleAction `xml:"signatureAction,omitempty"`

	SignatureCaseSensitive bool `xml:"signatureCaseSensitive,omitempty"`

	SignatureSignature string `xml:"signatureSignature,omitempty"`

	TemplateType *EnumDPIRuleTemplateType `xml:"templateType,omitempty"`

	CveNumbers string `xml:"cveNumbers,omitempty"`

	MsNumbers string `xml:"msNumbers,omitempty"`
}

type ItemsTransport struct {
	XMLName xml.Name `xml:"urn:Manager ItemsTransport"`

	*ConfigurationTransport

	Items string `xml:"items,omitempty"`
}

type PortListTransport struct {
	XMLName xml.Name `xml:"urn:Manager PortListTransport"`

	*ItemsTransport

	TBUID string `xml:"TBUID,omitempty"`
}

type ScheduleTransport struct {
	XMLName xml.Name `xml:"urn:Manager ScheduleTransport"`

	*ConfigurationTransport

	HourOfWeek string `xml:"hourOfWeek,omitempty"`
}

type IPListTransport struct {
	XMLName xml.Name `xml:"urn:Manager IPListTransport"`

	*ItemsTransport
}

type ScanFileListTransport struct {
	XMLName xml.Name `xml:"urn:Manager ScanFileListTransport"`

	*ItemsTransport
}

type UserTransport struct {
	XMLName xml.Name `xml:"urn:Manager UserTransport"`

	*TransportObject

	ID int32 `xml:"ID,omitempty"`

	Country string `xml:"country,omitempty"`

	Description string `xml:"description,omitempty"`

	EmailAddress string `xml:"emailAddress,omitempty"`

	FullName string `xml:"fullName,omitempty"`

	Language string `xml:"language,omitempty"`

	LockedOut bool `xml:"lockedOut,omitempty"`

	MobileNumber string `xml:"mobileNumber,omitempty"`

	PagerNumber string `xml:"pagerNumber,omitempty"`

	Password string `xml:"password,omitempty"`

	PasswordNeverExpires bool `xml:"passwordNeverExpires,omitempty"`

	PhoneNumber string `xml:"phoneNumber,omitempty"`

	ReceiveNotifications bool `xml:"receiveNotifications,omitempty"`

	RoleID int32 `xml:"roleID,omitempty"`

	Username string `xml:"username,omitempty"`
}

type AntiMalwareTransport struct {
	XMLName xml.Name `xml:"urn:Manager AntiMalwareTransport"`

	*ConfigurationTransport

	Alert bool `xml:"alert,omitempty"`

	ExcludeScanDirectoryListID int32 `xml:"excludeScanDirectoryListID,omitempty"`

	ExcludeScanFileExtListID int32 `xml:"excludeScanFileExtListID,omitempty"`

	ExcludeScanFileListID int32 `xml:"excludeScanFileListID,omitempty"`

	FileToScan *EnumAntiMalwareFilesToScan `xml:"fileToScan,omitempty"`

	FirstScanAction *EnumAntiMalwareScanCustomAction `xml:"firstScanAction,omitempty"`

	FolderToScan *EnumAntiMalwareFoldersToScan `xml:"folderToScan,omitempty"`

	ScanAction *EnumAntiMalwareScanAction `xml:"scanAction,omitempty"`

	IntelliTrapEnabled bool `xml:"intelliTrapEnabled,omitempty"`

	ScanCompressed bool `xml:"scanCompressed,omitempty"`

	ScanCompressedLayer int32 `xml:"scanCompressedLayer,omitempty"`

	ScanCompressedSmaller int32 `xml:"scanCompressedSmaller,omitempty"`

	ScanCompressedNumberOfFiles int32 `xml:"scanCompressedNumberOfFiles,omitempty"`

	ScanDirList int32 `xml:"scanDirList,omitempty"`

	ScanFilesActivity *EnumAntiMalwareScanFilesActivity `xml:"scanFilesActivity,omitempty"`

	SecondScanAction *EnumAntiMalwareScanCustomAction `xml:"secondScanAction,omitempty"`

	ToScanFileExtListID int32 `xml:"toScanFileExtListID,omitempty"`

	SpywareEnabled bool `xml:"spywareEnabled,omitempty"`

	ScanCustomActionForGeneric *EnumAntiMalwareScanCustomAction `xml:"scanCustomActionForGeneric,omitempty"`

	UnScannableFileAction *EnumAntiMalwareScanCustomAction `xml:"unScannableFileAction,omitempty"`

	ConfigurationType *EnumAntiMalwareConfigType `xml:"configurationType,omitempty"`

	ScanNetworkFolder bool `xml:"scanNetworkFolder,omitempty"`

	CpuUsage *EnumAntiMalwareCpuUsage `xml:"cpuUsage,omitempty"`

	ScanOLE bool `xml:"scanOLE,omitempty"`

	ScanOLEExploit bool `xml:"scanOLEExploit,omitempty"`

	ScanOLELayer int32 `xml:"scanOLELayer,omitempty"`

	ScanActionForVirus *EnumAntiMalwareScanCustomAction `xml:"scanActionForVirus,omitempty"`

	ScanActionForTrojans *EnumAntiMalwareScanCustomAction `xml:"scanActionForTrojans,omitempty"`

	ScanActionForPacker *EnumAntiMalwareScanCustomAction `xml:"scanActionForPacker,omitempty"`

	ScanActionForSpyware *EnumAntiMalwareScanCustomAction `xml:"scanActionForSpyware,omitempty"`

	ScanActionForOtherThreats *EnumAntiMalwareScanCustomAction `xml:"scanActionForOtherThreats,omitempty"`

	ScanActionForCookie *EnumAntiMalwareScanCustomAction `xml:"scanActionForCookie,omitempty"`

	ExcludeScanProcessFileListID int32 `xml:"excludeScanProcessFileListID,omitempty"`
}

type MACListTransport struct {
	XMLName xml.Name `xml:"urn:Manager MACListTransport"`

	*ItemsTransport
}

type ComponentInfoTransport struct {
	XMLName xml.Name `xml:"urn:Manager item"`

	*TransportObject

	Type_ int32 `xml:"type,omitempty"`

	Id int32 `xml:"id,omitempty"`

	Name string `xml:"name,omitempty"`

	ShortName string `xml:"shortName,omitempty"`

	CurrentVersion string `xml:"currentVersion,omitempty"`

	LastUpdate time.Time `xml:"lastUpdate,omitempty"`

	NameKey string `xml:"nameKey,omitempty"`

	Deployed int32 `xml:"deployed,omitempty"`

	NeedDeployed int32 `xml:"needDeployed,omitempty"`
}

type ArrayOfComponentInfoTransport struct {
	XMLName xml.Name `xml:"urn:Manager componentInfoTransports"`

	Item []*ComponentInfoTransport `xml:"item,omitempty"`
}

type ProtectionStatusTransport struct {
	XMLName xml.Name `xml:"urn:Manager item"`

	*TransportObject

	DpiStatus string `xml:"dpiStatus,omitempty"`

	Fingerprint string `xml:"fingerprint,omitempty"`

	FirewallStatus string `xml:"firewallStatus,omitempty"`

	IntegrityMonitoringStatus string `xml:"integrityMonitoringStatus,omitempty"`

	LastSuccessfulCommunication string `xml:"lastSuccessfulCommunication,omitempty"`

	LastSuccessfulUpdate string `xml:"lastSuccessfulUpdate,omitempty"`

	LogInspectionStatus string `xml:"logInspectionStatus,omitempty"`

	ProtectionType *EnumProtectionType `xml:"protectionType,omitempty"`

	State *EnumState `xml:"state,omitempty"`

	StateDescription string `xml:"stateDescription,omitempty"`

	Status string `xml:"status,omitempty"`

	Version string `xml:"version,omitempty"`

	ComponentInfoTransports *ArrayOfComponentInfoTransport `xml:"componentInfoTransports,omitempty"`

	WebReputationStatus string `xml:"webReputationStatus,omitempty"`

	AntiMalwareStatus string `xml:"antiMalwareStatus,omitempty"`
}

type ArrayOfProtectionStatusTransport struct {
	XMLName xml.Name `xml:"urn:Manager protectionStatusTransports"`

	Item []*ProtectionStatusTransport `xml:"item,omitempty"`
}





type HostStatusTransport struct {
	XMLName xml.Name `xml:"urn:Manager hostGetStatusReturn"`

	*TransportObject

	ApplianceID int32 `xml:"applianceID,omitempty"`

	ApplianceName string `xml:"applianceName,omitempty"`

	EsxServerFastPathDriverVersion string `xml:"esxServerFastPathDriverVersion,omitempty"`

	EsxServerID int32 `xml:"esxServerID,omitempty"`

	EsxServerName string `xml:"esxServerName,omitempty"`

	EsxServerVersion string `xml:"esxServerVersion,omitempty"`

	Locked bool `xml:"locked,omitempty"`

	OverallAntiMalwareStatus string `xml:"overallAntiMalwareStatus,omitempty"`

	OverallDpiStatus string `xml:"overallDpiStatus,omitempty"`

	OverallFirewallStatus string `xml:"overallFirewallStatus,omitempty"`

	OverallIntegrityMonitoringStatus string `xml:"overallIntegrityMonitoringStatus,omitempty"`

	OverallLastSuccessfulCommunication string `xml:"overallLastSuccessfulCommunication,omitempty"`

	OverallLastSuccessfulUpdate string `xml:"overallLastSuccessfulUpdate,omitempty"`

	OverallLogInspectionStatus string `xml:"overallLogInspectionStatus,omitempty"`

	OverallStatus string `xml:"overallStatus,omitempty"`

	ProtectionStatusTransports *ArrayOfProtectionStatusTransport `xml:"protectionStatusTransports,omitempty"`

	OverallWebReputationStatus string `xml:"overallWebReputationStatus,omitempty"`
}

type FirewallRuleTransport struct {
	XMLName xml.Name `xml:"urn:Manager FirewallRuleTransport"`

	*ConfigurationTransport

	Action *EnumFirewallRuleAction `xml:"action,omitempty"`

	AnyFlags bool `xml:"anyFlags,omitempty"`

	DestinationIP string `xml:"destinationIP,omitempty"`

	DestinationIPListID int32 `xml:"destinationIPListID,omitempty"`

	DestinationIPMask string `xml:"destinationIPMask,omitempty"`

	DestinationIPNot bool `xml:"destinationIPNot,omitempty"`

	DestinationIPRangeFrom string `xml:"destinationIPRangeFrom,omitempty"`

	DestinationIPRangeTo string `xml:"destinationIPRangeTo,omitempty"`

	DestinationIPType *EnumFirewallRuleIPType `xml:"destinationIPType,omitempty"`

	DestinationMAC string `xml:"destinationMAC,omitempty"`

	DestinationMACListID int32 `xml:"destinationMACListID,omitempty"`

	DestinationMACNot bool `xml:"destinationMACNot,omitempty"`

	DestinationMACType *EnumMACType `xml:"destinationMACType,omitempty"`

	DestinationPortListID int32 `xml:"destinationPortListID,omitempty"`

	DestinationPortNot bool `xml:"destinationPortNot,omitempty"`

	DestinationPortType *EnumPortType `xml:"destinationPortType,omitempty"`

	DestinationPorts string `xml:"destinationPorts,omitempty"`

	DestinationSingleIP string `xml:"destinationSingleIP,omitempty"`

	DisabledLog bool `xml:"disabledLog,omitempty"`

	FrameNot bool `xml:"frameNot,omitempty"`

	FrameNumber string `xml:"frameNumber,omitempty"`

	FrameType *EnumFirewallRuleFrameType `xml:"frameType,omitempty"`

	IcmpCode int32 `xml:"icmpCode,omitempty"`

	IcmpNot bool `xml:"icmpNot,omitempty"`

	IcmpType int32 `xml:"icmpType,omitempty"`

	PacketDirection *EnumDirection `xml:"packetDirection,omitempty"`

	Priority *EnumFirewallRulePriority `xml:"priority,omitempty"`

	ProtocolNot bool `xml:"protocolNot,omitempty"`

	ProtocolNumber int32 `xml:"protocolNumber,omitempty"`

	ProtocolType *EnumFirewallRuleProtocolType `xml:"protocolType,omitempty"`

	RaiseAlert bool `xml:"raiseAlert,omitempty"`

	ScheduleID int32 `xml:"scheduleID,omitempty"`

	SourceIP string `xml:"sourceIP,omitempty"`

	SourceIPListID int32 `xml:"sourceIPListID,omitempty"`

	SourceIPMask string `xml:"sourceIPMask,omitempty"`

	SourceIPNot bool `xml:"sourceIPNot,omitempty"`

	SourceIPRangeFrom string `xml:"sourceIPRangeFrom,omitempty"`

	SourceIPRangeTo string `xml:"sourceIPRangeTo,omitempty"`

	SourceIPType *EnumFirewallRuleIPType `xml:"sourceIPType,omitempty"`

	SourceMAC string `xml:"sourceMAC,omitempty"`

	SourceMACListID int32 `xml:"sourceMACListID,omitempty"`

	SourceMACNot bool `xml:"sourceMACNot,omitempty"`

	SourceMACType *EnumMACType `xml:"sourceMACType,omitempty"`

	SourcePortListID int32 `xml:"sourcePortListID,omitempty"`

	SourcePortNot bool `xml:"sourcePortNot,omitempty"`

	SourcePortType *EnumPortType `xml:"sourcePortType,omitempty"`

	SourcePorts string `xml:"sourcePorts,omitempty"`

	SourceSingleIP string `xml:"sourceSingleIP,omitempty"`

	TcpFlagACK bool `xml:"tcpFlagACK,omitempty"`

	TcpFlagFIN bool `xml:"tcpFlagFIN,omitempty"`

	TcpFlagPSH bool `xml:"tcpFlagPSH,omitempty"`

	TcpFlagRST bool `xml:"tcpFlagRST,omitempty"`

	TcpFlagSYN bool `xml:"tcpFlagSYN,omitempty"`

	TcpFlagURG bool `xml:"tcpFlagURG,omitempty"`

	TcpNot bool `xml:"tcpNot,omitempty"`
}

type JobProgressTransport struct {
	XMLName xml.Name `xml:"urn:Manager JobProgressTransport"`

	*TransportObject

	Complete int32 `xml:"complete,omitempty"`

	Error int32 `xml:"error,omitempty"`

	Pending int32 `xml:"pending,omitempty"`

	Unable int32 `xml:"unable,omitempty"`
}

type SoftwareTransport struct {
	XMLName xml.Name `xml:"urn:Manager SoftwareTransport"`

	*TransportObject

	ID int32 `xml:"ID,omitempty"`

	Fingerprint string `xml:"fingerprint,omitempty"`

	Imported time.Time `xml:"imported,omitempty"`

	Name string `xml:"name,omitempty"`

	Notes string `xml:"notes,omitempty"`

	Platform string `xml:"platform,omitempty"`

	Released time.Time `xml:"released,omitempty"`

	Version string `xml:"version,omitempty"`
}

type DPIEventTransport struct {
	XMLName xml.Name `xml:"urn:Manager DPIEventTransport"`

	*TransportObject

	DPIEventID int64 `xml:"DPIEventID,omitempty"`

	DPIRuleID int32 `xml:"DPIRuleID,omitempty"`

	Action string `xml:"action,omitempty"`

	Data []byte `xml:"data,omitempty"`

	DataFlags int32 `xml:"dataFlags,omitempty"`

	DataIndex int32 `xml:"dataIndex,omitempty"`

	DestinationIP string `xml:"destinationIP,omitempty"`

	DestinationMAC string `xml:"destinationMAC,omitempty"`

	DestinationPort string `xml:"destinationPort,omitempty"`

	Direction string `xml:"direction,omitempty"`

	DriverTime int64 `xml:"driverTime,omitempty"`

	EndTime time.Time `xml:"endTime,omitempty"`

	EventOrigin *EnumEventOrigin `xml:"eventOrigin,omitempty"`

	Flags string `xml:"flags,omitempty"`

	Flow string `xml:"flow,omitempty"`

	HostID int32 `xml:"hostID,omitempty"`

	HostName string `xml:"hostName,omitempty"`

	Iface string `xml:"iface,omitempty"`

	Note string `xml:"note,omitempty"`

	PacketSize int32 `xml:"packetSize,omitempty"`

	Protocol string `xml:"protocol,omitempty"`

	Rank int32 `xml:"rank,omitempty"`

	Reason string `xml:"reason,omitempty"`

	RepeatCount int32 `xml:"repeatCount,omitempty"`

	SourceIP string `xml:"sourceIP,omitempty"`

	SourceMAC string `xml:"sourceMAC,omitempty"`

	SourcePort string `xml:"sourcePort,omitempty"`

	StartTime time.Time `xml:"startTime,omitempty"`

	Status int32 `xml:"status,omitempty"`

	Tags string `xml:"tags,omitempty"`
}

type ArrayOfDPIEventTransport struct {
	XMLName xml.Name `xml:"urn:Manager ArrayOfDPIEventTransport"`

	Item []*DPIEventTransport `xml:"item,omitempty"`
}

type DPIEventListTransport struct {
	XMLName xml.Name `xml:"urn:Manager DPIEventListTransport"`

	*TruncatableListTransport

	DPIEvents *ArrayOfDPIEventTransport `xml:"DPIEvents,omitempty"`
}

type TagFilterTransport struct {
	XMLName xml.Name `xml:"urn:Manager TagFilterTransport"`

	Tags string `xml:"tags,omitempty"`

	Type_ *EnumTagFilterType `xml:"type,omitempty"`
}

type CounterTransport struct {
	XMLName xml.Name `xml:"urn:Manager CounterTransport"`

	*TransportObject

	Description string `xml:"description,omitempty"`

	PercentOfTotal float32 `xml:"percentOfTotal,omitempty"`

	PercentOfTotalString string `xml:"percentOfTotalString,omitempty"`

	Text string `xml:"text,omitempty"`

	Value int64 `xml:"value,omitempty"`

	ValueString string `xml:"valueString,omitempty"`

	PreviousValue int64 `xml:"previousValue,omitempty"`
}

type ProtocolIcmp struct {
	XMLName xml.Name `xml:`

	Type_ *EnumProtocolIcmpType `xml:"type,omitempty"`
}

type ProtocolPortBased struct {
	XMLName xml.Name `xml:`

	PortListID int32 `xml:"portListID,omitempty"`

	PortType *EnumPortType `xml:"portType,omitempty"`

	Ports string `xml:"ports,omitempty"`
}

type ApplicationTypeTransport struct {
	XMLName xml.Name `xml:`

	*ConfigurationTransport

	TBUID string `xml:"TBUID,omitempty"`

	Authoritative bool `xml:"authoritative,omitempty"`

	Direction *EnumDirection `xml:"direction,omitempty"`

	IgnoreRecommendations bool `xml:"ignoreRecommendations,omitempty"`

	ProtocolIcmp *ProtocolIcmp `xml:"protocolIcmp,omitempty"`

	ProtocolPortBased *ProtocolPortBased `xml:"protocolPortBased,omitempty"`

	ProtocolType *EnumApplicationTypeProtocolType `xml:"protocolType,omitempty"`
}

type SecurityUpdateTransport struct {
	XMLName xml.Name `xml:"urn:Manager SecurityUpdateTransport"`

	*TransportObject

	ID int32 `xml:"ID,omitempty"`

	AppliedState *EnumSecurityUpdateAppliedState `xml:"appliedState,omitempty"`

	ContentSummary string `xml:"contentSummary,omitempty"`

	DetectOnly bool `xml:"detectOnly,omitempty"`

	Downloaded time.Time `xml:"downloaded,omitempty"`

	Name string `xml:"name,omitempty"`

	Released time.Time `xml:"released,omitempty"`
}

type LogInspectionRuleTransport struct {
	XMLName xml.Name `xml:"urn:Manager LogInspectionRuleTransport"`

	*ConfigurationTransport

	TBUID string `xml:"TBUID,omitempty"`

	AlertMinSeverity int32 `xml:"alertMinSeverity,omitempty"`

	Authoritative bool `xml:"authoritative,omitempty"`

	Content string `xml:"content,omitempty"`

	Files string `xml:"files,omitempty"`

	Identifier string `xml:"identifier,omitempty"`

	IgnoreRecommendations bool `xml:"ignoreRecommendations,omitempty"`

	Issued time.Time `xml:"issued,omitempty"`

	MinAgentVersion string `xml:"minAgentVersion,omitempty"`

	MinManagerVersion string `xml:"minManagerVersion,omitempty"`

	RaiseAlert bool `xml:"raiseAlert,omitempty"`
}

type IntegrityRuleTransport struct {
	XMLName xml.Name `xml:"urn:Manager IntegrityRuleTransport"`

	*ConfigurationTransport

	TBUID string `xml:"TBUID,omitempty"`

	AllowOnChange bool `xml:"allowOnChange,omitempty"`

	Authoritative bool `xml:"authoritative,omitempty"`

	Content string `xml:"content,omitempty"`

	Identifier string `xml:"identifier,omitempty"`

	IgnoreRecommendations bool `xml:"ignoreRecommendations,omitempty"`

	Issued time.Time `xml:"issued,omitempty"`

	MinAgentVersion string `xml:"minAgentVersion,omitempty"`

	MinManagerVersion string `xml:"minManagerVersion,omitempty"`

	RaiseAlert bool `xml:"raiseAlert,omitempty"`

	Severity *EnumIntegrityRuleSeverity `xml:"severity,omitempty"`
}

type SecurityProfileTransport struct {
	XMLName xml.Name `xml:"urn:Manager SecurityProfileTransport"`

	*ConfigurationTransport

	DPIRuleIDs *ArrayOf_xsd_int `xml:"DPIRuleIDs,omitempty"`

	DPIState *EnumSecurityProfileDPIState `xml:"DPIState,omitempty"`

	AntiMalwareManualID int32 `xml:"antiMalwareManualID,omitempty"`

	AntiMalwareManualInherit bool `xml:"antiMalwareManualInherit,omitempty"`

	AntiMalwareRealTimeID int32 `xml:"antiMalwareRealTimeID,omitempty"`

	AntiMalwareRealTimeInherit bool `xml:"antiMalwareRealTimeInherit,omitempty"`

	AntiMalwareRealTimeScheduleID int32 `xml:"antiMalwareRealTimeScheduleID,omitempty"`

	AntiMalwareScheduledID int32 `xml:"antiMalwareScheduledID,omitempty"`

	AntiMalwareScheduledInherit bool `xml:"antiMalwareScheduledInherit,omitempty"`

	AntiMalwareState *EnumSecurityProfileAntiMalwareState `xml:"antiMalwareState,omitempty"`

	ApplicationTypeIDs *ArrayOf_xsd_int `xml:"applicationTypeIDs,omitempty"`

	FirewallRuleIDs *ArrayOf_xsd_int `xml:"firewallRuleIDs,omitempty"`

	FirewallState *EnumSecurityProfileFirewallState `xml:"firewallState,omitempty"`

	IntegrityRuleIDs *ArrayOf_xsd_int `xml:"integrityRuleIDs,omitempty"`

	IntegrityState *EnumSecurityProfileIntegrityState `xml:"integrityState,omitempty"`

	LogInspectionRuleIDs *ArrayOf_xsd_int `xml:"logInspectionRuleIDs,omitempty"`

	LogInspectionState *EnumSecurityProfileLogInspectionState `xml:"logInspectionState,omitempty"`

	ParentSecurityProfileID int32 `xml:"parentSecurityProfileID,omitempty"`

	RecommendationState *EnumSecurityProfileRecommendationState `xml:"recommendationState,omitempty"`

	ScheduleID int32 `xml:"scheduleID,omitempty"`

	StatefulConfigurationID int32 `xml:"statefulConfigurationID,omitempty"`
}

type ScanDirectoryListTransport struct {
	XMLName xml.Name `xml:"urn:Manager ScanDirectoryListTransport"`

	*ItemsTransport
}

type ScanFileExtListTransport struct {
	XMLName xml.Name `xml:"urn:Manager ScanFileExtListTransport"`

	*ItemsTransport
}

type FirewallEventTransport struct {
	XMLName xml.Name `xml:"urn:Manager FirewallEventTransport"`

	*TransportObject

	Action string `xml:"action,omitempty"`

	Data []byte `xml:"data,omitempty"`

	DataFlags int32 `xml:"dataFlags,omitempty"`

	DataIndex int32 `xml:"dataIndex,omitempty"`

	DestinationIP string `xml:"destinationIP,omitempty"`

	DestinationMAC string `xml:"destinationMAC,omitempty"`

	DestinationPort string `xml:"destinationPort,omitempty"`

	Direction string `xml:"direction,omitempty"`

	DriverTime int64 `xml:"driverTime,omitempty"`

	EndTime time.Time `xml:"endTime,omitempty"`

	EventOrigin *EnumEventOrigin `xml:"eventOrigin,omitempty"`

	FirewallEventID int64 `xml:"firewallEventID,omitempty"`

	Flags string `xml:"flags,omitempty"`

	Flow string `xml:"flow,omitempty"`

	FrameType string `xml:"frameType,omitempty"`

	HostID int32 `xml:"hostID,omitempty"`

	HostName string `xml:"hostName,omitempty"`

	Iface string `xml:"iface,omitempty"`

	Note string `xml:"note,omitempty"`

	PacketSize int32 `xml:"packetSize,omitempty"`

	Protocol string `xml:"protocol,omitempty"`

	Rank int32 `xml:"rank,omitempty"`

	Reason string `xml:"reason,omitempty"`

	RepeatCount int32 `xml:"repeatCount,omitempty"`

	SourceIP string `xml:"sourceIP,omitempty"`

	SourceMAC string `xml:"sourceMAC,omitempty"`

	SourcePort string `xml:"sourcePort,omitempty"`

	StartTime time.Time `xml:"startTime,omitempty"`

	Status int32 `xml:"status,omitempty"`

	Tags string `xml:"tags,omitempty"`
}

type ArrayOfFirewallEventTransport struct {
	XMLName xml.Name `xml:"urn:Manager ArrayOfFirewallEventTransport"`

	Item []*FirewallEventTransport `xml:"item,omitempty"`
}

type FirewallEventListTransport struct {
	XMLName xml.Name `xml:"urn:Manager FirewallEventListTransport"`

	*TruncatableListTransport

	FirewallEvents *ArrayOfFirewallEventTransport `xml:"firewallEvents,omitempty"`
}

type FeatureSummaryDetailTransport struct {
	XMLName xml.Name `xml:"urn:Manager FeatureSummaryDetailTransport"`

	*TransportObject

	FeatureName string `xml:"featureName,omitempty"`

	ProtectedComputerNum int64 `xml:"protectedComputerNum,omitempty"`

	TotalEventNum int64 `xml:"totalEventNum,omitempty"`

	PreventedEventNum int64 `xml:"preventedEventNum,omitempty"`

	DetectedEventNum int64 `xml:"detectedEventNum,omitempty"`

	PreviousTotalEventNum int64 `xml:"previousTotalEventNum,omitempty"`

	PreviousPreventedEventNum int64 `xml:"previousPreventedEventNum,omitempty"`

	PreviousDetectedEventNum int64 `xml:"previousDetectedEventNum,omitempty"`
}

type ArrayOfFeatureSummaryDetailTransport struct {
	XMLName xml.Name `xml:"urn:Manager ArrayOfFeatureSummaryDetailTransport"`

	Item []*FeatureSummaryDetailTransport `xml:"item,omitempty"`
}

type FeatureSummaryTransport struct {
	XMLName xml.Name `xml:"urn:Manager FeatureSummaryTransport"`

	*TransportObject

	FeatureSummaryDetails *ArrayOfFeatureSummaryDetailTransport `xml:"featureSummaryDetails,omitempty"`

	TotalComputerNum int32 `xml:"totalComputerNum,omitempty"`
}

type SystemInformationTransport struct {
	XMLName xml.Name `xml:"urn:Manager SystemInformationTransport"`

	*TransportObject

	Key string `xml:"key,omitempty"`

	Name string `xml:"name,omitempty"`

	Value string `xml:"value,omitempty"`
}

type AlertStatusTransport struct {
	XMLName xml.Name `xml:"urn:Manager AlertStatusTransport"`

	*TransportObject

	AlertDate time.Time `xml:"alertDate,omitempty"`

	AlertType string `xml:"alertType,omitempty"`

	Severity int32 `xml:"severity,omitempty"`

	SeverityText string `xml:"severityText,omitempty"`
}

type CounterWithIDTransport struct {
	XMLName xml.Name `xml:"urn:Manager CounterWithIDTransport"`

	*CounterTransport

	ItemID int32 `xml:"itemID,omitempty"`
}

type HostStatusSummaryTransport struct {
	XMLName xml.Name `xml:"urn:Manager HostStatusSummaryTransport"`

	*TransportObject

	CriticalHosts int32 `xml:"criticalHosts,omitempty"`

	OnlineHosts int32 `xml:"onlineHosts,omitempty"`

	UnmanageHosts int32 `xml:"unmanageHosts,omitempty"`

	WarningHosts int32 `xml:"warningHosts,omitempty"`
}

type StatusSummaryTransport struct {
	XMLName xml.Name `xml:"urn:Manager StatusSummaryTransport"`

	*TransportObject

	AlertErrorNum int32 `xml:"alertErrorNum,omitempty"`

	AlertWarningNum int32 `xml:"alertWarningNum,omitempty"`

	HostStatusSummary *HostStatusSummaryTransport `xml:"hostStatusSummary,omitempty"`
}

type LogInspectionEventTransport struct {
	XMLName xml.Name `xml:"urn:Manager LogInspectionEventTransport"`

	*TransportObject

	Action string `xml:"action,omitempty"`

	Command string `xml:"command,omitempty"`

	Data string `xml:"data,omitempty"`

	Description string `xml:"description,omitempty"`

	DestinationIP string `xml:"destinationIP,omitempty"`

	DestinationPort string `xml:"destinationPort,omitempty"`

	DestinationUser string `xml:"destinationUser,omitempty"`

	FullEvent string `xml:"fullEvent,omitempty"`

	Groups string `xml:"groups,omitempty"`

	HostID int32 `xml:"hostID,omitempty"`

	HostName string `xml:"hostName,omitempty"`

	Location string `xml:"location,omitempty"`

	LogInspectionEventID int64 `xml:"logInspectionEventID,omitempty"`

	LogInspectionRuleID int32 `xml:"logInspectionRuleID,omitempty"`

	LogTime time.Time `xml:"logTime,omitempty"`

	Message string `xml:"message,omitempty"`

	ProgramName string `xml:"programName,omitempty"`

	Protocol string `xml:"protocol,omitempty"`

	Rank int32 `xml:"rank,omitempty"`

	Reason string `xml:"reason,omitempty"`

	RuleID int32 `xml:"ruleID,omitempty"`

	Severity string `xml:"severity,omitempty"`

	SourceHostName string `xml:"sourceHostName,omitempty"`

	SourceID string `xml:"sourceID,omitempty"`

	SourceIP string `xml:"sourceIP,omitempty"`

	SourcePort string `xml:"sourcePort,omitempty"`

	SourceUser string `xml:"sourceUser,omitempty"`

	Status string `xml:"status,omitempty"`

	SystemName string `xml:"systemName,omitempty"`

	Tags string `xml:"tags,omitempty"`

	Url string `xml:"url,omitempty"`
}

type ArrayOfLogInspectionEventTransport struct {
	XMLName xml.Name `xml:"urn:Manager ArrayOfLogInspectionEventTransport"`

	Item []*LogInspectionEventTransport `xml:"item,omitempty"`
}

type LogInspectionEventListTransport struct {
	XMLName xml.Name `xml:"urn:Manager LogInspectionEventListTransport"`

	*TruncatableListTransport

	LogInspectionEvents *ArrayOfLogInspectionEventTransport `xml:"logInspectionEvents,omitempty"`
}

type CounterAlertTypeTransport struct {
	XMLName xml.Name `xml:"urn:Manager CounterAlertTypeTransport"`

	*CounterTransport

	Severity int32 `xml:"severity,omitempty"`

	PercentOpen string `xml:"percentOpen,omitempty"`

	AverageTimeOpen string `xml:"averageTimeOpen,omitempty"`
}

type AntiMalwareSpywareItemTransport struct {
	XMLName xml.Name `xml:""`

	*TransportObject

	AntiMalwareQuarantinedFileID int32 `xml:"antiMalwareQuarantinedFileID,omitempty"`

	AntiMalwareSpywareItemID int32 `xml:"antiMalwareSpywareItemID,omitempty"`

	HostID int32 `xml:"hostID,omitempty"`

	ObjectInfo string `xml:"objectInfo,omitempty"`

	ObjectType int32 `xml:"objectType,omitempty"`

	RiskLevel int32 `xml:"riskLevel,omitempty"`

	ScanAction int32 `xml:"scanAction,omitempty"`

	ScanResultAction int32 `xml:"scanResultAction,omitempty"`

	SpywareType int32 `xml:"spywareType,omitempty"`
}

type ArrayOfAntiMalwareSpywareItemTransport struct {
	XMLName xml.Name `xml:""`

	Item []*AntiMalwareSpywareItemTransport `xml:"item,omitempty"`
}

type AntiMalwareEventTransport struct {
	XMLName xml.Name `xml:""`

	*TransportObject

	AntiMalwareConfigID int32 `xml:"antiMalwareConfigID,omitempty"`

	AntiMalwareEventID int64 `xml:"antiMalwareEventID,omitempty"`

	EndTime string `xml:"endTime,omitempty"`

	ErrorCode int32 `xml:"errorCode,omitempty"`

	HostID int32 `xml:"hostID,omitempty"`

	InfectedFilePath string `xml:"infectedFilePath,omitempty"`

	InfectionSource string `xml:"infectionSource,omitempty"`

	LogDate time.Time `xml:"logDate,omitempty"`

	MalwareName string `xml:"malwareName,omitempty"`

	MalwareType *EnumMalwareType `xml:"malwareType,omitempty"`

	Protocol int32 `xml:"protocol,omitempty"`

	QuarantineRecordID int32 `xml:"quarantineRecordID,omitempty"`

	ScanResultAction1 int32 `xml:"scanResultAction1,omitempty"`

	ScanResultAction2 int32 `xml:"scanResultAction2,omitempty"`

	ScanType *EnumAntiMalwareScanType `xml:"scanType,omitempty"`

	SpywareItems *ArrayOfAntiMalwareSpywareItemTransport `xml:"spywareItems,omitempty"`

	StartTime string `xml:"startTime,omitempty"`

	Tags string `xml:"tags,omitempty"`

	ScanAction1 int32 `xml:"scanAction1,omitempty"`

	ScanAction2 int32 `xml:"scanAction2,omitempty"`

	SummaryScanResult string `xml:"summaryScanResult,omitempty"`
}

type ArrayOfAntiMalwareEventTransport struct {
	XMLName xml.Name `xml:""`

	Item []*AntiMalwareEventTransport `xml:"item,omitempty"`
}

type AntiMalwareEventListTransport struct {
	XMLName xml.Name `xml:""`

	*TruncatableListTransport

	AntiMalwareEvents *ArrayOfAntiMalwareEventTransport `xml:"antiMalwareEvents,omitempty"`
}

type CounterHostTransport struct {
	XMLName xml.Name `xml:"urn:Manager CounterHostTransport"`

	*CounterTransport

	HostID int32 `xml:"hostID,omitempty"`

	Icon string `xml:"icon,omitempty"`
}

type WebReputationEventTransport struct {
	XMLName xml.Name `xml:"urn:Manager WebReputationEventTransport"`

	*TransportObject

	HostID int32 `xml:"hostID,omitempty"`

	HostName string `xml:"hostName,omitempty"`

	LogTime time.Time `xml:"logTime,omitempty"`

	Rank int32 `xml:"rank,omitempty"`

	Risk *EnumWebReputationEventRisk `xml:"risk,omitempty"`

	Tags string `xml:"tags,omitempty"`

	Url string `xml:"url,omitempty"`

	WebReputationEventID int64 `xml:"webReputationEventID,omitempty"`
}

type ArrayOfWebReputationEventTransport struct {
	XMLName xml.Name `xml:"urn:Manager ArrayOfWebReputationEventTransport"`

	Item []*WebReputationEventTransport `xml:"item,omitempty"`
}

type WebReputationEventListTransport struct {
	XMLName xml.Name `xml:"urn:Manager WebReputationEventListTransport"`

	*TruncatableListTransport

	WebReputationEvents *ArrayOfWebReputationEventTransport `xml:"webReputationEvents,omitempty"`
}

type ExternalFilterTransport struct {
	XMLName xml.Name `xml:"urn:Manager ExternalFilterTransport"`

	HostExternalID string `xml:"hostExternalID,omitempty"`

	HostGroupExternalID string `xml:"hostGroupExternalID,omitempty"`

	Type_ *EnumExternalFilterType `xml:"type,omitempty"`
}

type AttributeTransport struct {
	XMLName xml.Name `xml:"urn:Manager AttributeTransport"`

	FriendlyValue string `xml:"friendlyValue,omitempty"`

	Name string `xml:"name,omitempty"`

	Value string `xml:"value,omitempty"`
}

type ArrayOfAttributeTransport struct {
	XMLName xml.Name `xml:"urn:Manager ArrayOfAttributeTransport"`

	Item []*AttributeTransport `xml:"item,omitempty"`
}

type EntityTransport struct {
	XMLName xml.Name `xml:"urn:Manager EntityTransport"`

	Attributes *ArrayOfAttributeTransport `xml:"attributes,omitempty"`

	Key string `xml:"key,omitempty"`

	Type_ string `xml:"type,omitempty"`
}

type IntegrityEventTransport struct {
	XMLName xml.Name `xml:"urn:Manager IntegrityEventTransport"`

	*TransportObject

	Change string `xml:"change,omitempty"`

	Description string `xml:"description,omitempty"`

	HostID int32 `xml:"hostID,omitempty"`

	HostName string `xml:"hostName,omitempty"`

	IntegrityEventID int64 `xml:"integrityEventID,omitempty"`

	IntegrityRuleID int32 `xml:"integrityRuleID,omitempty"`

	IsEntity *EntityTransport `xml:"isEntity,omitempty"`

	Key string `xml:"key,omitempty"`

	LogTime time.Time `xml:"logTime,omitempty"`

	Process string `xml:"process,omitempty"`

	Rank int32 `xml:"rank,omitempty"`

	Reason string `xml:"reason,omitempty"`

	Severity *EnumIntegrityRuleSeverity `xml:"severity,omitempty"`

	Tags string `xml:"tags,omitempty"`

	Type_ string `xml:"type,omitempty"`

	User string `xml:"user,omitempty"`

	WasEntity *EntityTransport `xml:"wasEntity,omitempty"`
}

type ArrayOfIntegrityEventTransport struct {
	XMLName xml.Name `xml:"urn:Manager ArrayOfIntegrityEventTransport"`

	Item []*IntegrityEventTransport `xml:"item,omitempty"`
}

type IntegrityEventListTransport struct {
	XMLName xml.Name `xml:"urn:Manager IntegrityEventListTransport"`

	*TruncatableListTransport

	IntegrityEvents *ArrayOfIntegrityEventTransport `xml:"integrityEvents,omitempty"`
}

type Manager struct {
	client *SOAPClient
}

func NewManager(url string, tls bool, auth *BasicAuth) *Manager {
	if url == "" {
		url = "https://192.168.8.12:4119/webservice/Manager"
	}
	client := NewSOAPClient(url, tls, auth)

	return &Manager{
		client: client,
	}
}

func NewManagerWithTLSConfig(url string, tlsCfg *tls.Config, auth *BasicAuth) *Manager {
	if url == "" {
		url = "https://192.168.8.12:4119/webservice/Manager"
	}
	client := NewSOAPClientWithTLSConfig(url, tlsCfg, auth)

	return &Manager{
		client: client,
	}
}

func (service *Manager) AddHeader(header interface{}) {
	service.client.AddHeader(header)
}

// Backwards-compatible function: use AddHeader instead
func (service *Manager) SetHeader(header interface{}) {
	service.client.AddHeader(header)
}

// Error can be either of the following types:
//
//   - ManagerSecurityException
//   - ManagerAuthenticationException
//   - ManagerLockoutException
//   - ManagerMaxSessionsException
//   - ManagerException
//   - ManagerCommunicationException

func (service *Manager) Authenticate(request *Authenticate) (*AuthenticateResponse, error) {
	response := new(AuthenticateResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SecurityProfileRecommendationRuleIDsRetrieve(request *SecurityProfileRecommendationRuleIDsRetrieve) (*SecurityProfileRecommendationRuleIDsRetrieveResponse, error) {
	response := new(SecurityProfileRecommendationRuleIDsRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostRecommendationUnresolvedRetrieve(request *HostRecommendationUnresolvedRetrieve) (*HostRecommendationUnresolvedRetrieveResponse, error) {
	response := new(HostRecommendationUnresolvedRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostDetailRetrieveByNameStartsWith(request *HostDetailRetrieveByNameStartsWith) (*HostDetailRetrieveByNameStartsWithResponse, error) {
	response := new(HostDetailRetrieveByNameStartsWithResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SystemEventRetrieveShortDescription(request *SystemEventRetrieveShortDescription) (*SystemEventRetrieveShortDescriptionResponse, error) {
	response := new(SystemEventRetrieveShortDescriptionResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SystemEventRetrieveShortDescription2(request *SystemEventRetrieveShortDescription2) (*SystemEventRetrieveShortDescription2Response, error) {
	response := new(SystemEventRetrieveShortDescription2Response)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) LogInspectionDecoderRetrieveByName(request *LogInspectionDecoderRetrieveByName) (*LogInspectionDecoderRetrieveByNameResponse, error) {
	response := new(LogInspectionDecoderRetrieveByNameResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SecurityUpdateGetApplierInformation(request *SecurityUpdateGetApplierInformation) (*SecurityUpdateGetApplierInformationResponse, error) {
	response := new(SecurityUpdateGetApplierInformationResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerException

func (service *Manager) ApplicationTypeOverrideRetrieveAll(request *ApplicationTypeOverrideRetrieveAll) (*ApplicationTypeOverrideRetrieveAllResponse, error) {
	response := new(ApplicationTypeOverrideRetrieveAllResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) StatefulConfigurationRetrieveByName(request *StatefulConfigurationRetrieveByName) (*StatefulConfigurationRetrieveByNameResponse, error) {
	response := new(StatefulConfigurationRetrieveByNameResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostRecommendationRuleIDsRetrieve(request *HostRecommendationRuleIDsRetrieve) (*HostRecommendationRuleIDsRetrieveResponse, error) {
	response := new(HostRecommendationRuleIDsRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerIntegrityConstraintException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostGroupCreate(request *HostGroupCreate) (*HostGroupCreateResponse, error) {
	response := new(HostGroupCreateResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SoftwareDelete(request *SoftwareDelete) (*SoftwareDeleteResponse, error) {
	response := new(SoftwareDeleteResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerSecurityException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SignInAsTenant(request *SignInAsTenant) (*SignInAsTenantResponse, error) {
	response := new(SignInAsTenantResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SystemSettingGet(request *SystemSettingGet) (*SystemSettingGetResponse, error) {
	response := new(SystemSettingGetResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerIntegrityConstraintException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) DPIRuleSave(request *DPIRuleSave) (*DPIRuleSaveResponse, error) {
	response := new(DPIRuleSaveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerIntegrityConstraintException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) PortListSave(request *PortListSave) (*PortListSaveResponse, error) {
	response := new(PortListSaveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerIntegrityConstraintException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) ScheduleSave(request *ScheduleSave) (*ScheduleSaveResponse, error) {
	response := new(ScheduleSaveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) DPIRuleDelete(request *DPIRuleDelete) (*DPIRuleDeleteResponse, error) {
	response := new(DPIRuleDeleteResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerIntegrityConstraintException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostSettingClear(request *HostSettingClear) (*HostSettingClearResponse, error) {
	response := new(HostSettingClearResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) IPListRetrieve(request *IPListRetrieve) (*IPListRetrieveResponse, error) {
	response := new(IPListRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostRetrieve(request *HostRetrieve) (*HostRetrieveResponse, error) {
	response := new(HostRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerIntegrityConstraintException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostSettingSet(request *HostSettingSet) (*HostSettingSetResponse, error) {
	response := new(HostSettingSetResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *Manager) EndSession(request *EndSession) (*EndSessionResponse, error) {
	response := new(EndSessionResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerIntegrityConstraintException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) ScanFileListSave(request *ScanFileListSave) (*ScanFileListSaveResponse, error) {
	response := new(ScanFileListSaveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) PortListDelete(request *PortListDelete) (*PortListDeleteResponse, error) {
	response := new(PortListDeleteResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) RoleGetDefaultID(request *RoleGetDefaultID) (*RoleGetDefaultIDResponse, error) {
	response := new(RoleGetDefaultIDResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) UserRetrieve(request *UserRetrieve) (*UserRetrieveResponse, error) {
	response := new(UserRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerIntegrityConstraintException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) AntiMalwareSave(request *AntiMalwareSave) (*AntiMalwareSaveResponse, error) {
	response := new(AntiMalwareSaveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostGroupDelete(request *HostGroupDelete) (*HostGroupDeleteResponse, error) {
	response := new(HostGroupDeleteResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) IPListDelete(request *IPListDelete) (*IPListDeleteResponse, error) {
	response := new(IPListDeleteResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SystemSettingSet(request *SystemSettingSet) (*SystemSettingSetResponse, error) {
	response := new(SystemSettingSetResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) MACListRetrieve(request *MACListRetrieve) (*MACListRetrieveResponse, error) {
	response := new(MACListRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostRetrieveAll(request *HostRetrieveAll) (*HostRetrieveAllResponse, error) {
	response := new(HostRetrieveAllResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerIntegrityConstraintException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) IPListSave(request *IPListSave) (*IPListSaveResponse, error) {
	response := new(IPListSaveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostGetStatus(request *HostGetStatus) (*HostGetStatusResponse, error) {
	response := new(HostGetStatusResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerIntegrityConstraintException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) FirewallRuleSave(request *FirewallRuleSave) (*FirewallRuleSaveResponse, error) {
	response := new(FirewallRuleSaveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) DPIRuleRetrieve(request *DPIRuleRetrieve) (*DPIRuleRetrieveResponse, error) {
	response := new(DPIRuleRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) ScheduleRetrieve(request *ScheduleRetrieve) (*ScheduleRetrieveResponse, error) {
	response := new(ScheduleRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) ScheduleDelete(request *ScheduleDelete) (*ScheduleDeleteResponse, error) {
	response := new(ScheduleDeleteResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostJobProgress(request *HostJobProgress) (*HostJobProgressResponse, error) {
	response := new(HostJobProgressResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *Manager) GetManagerTime(request *GetManagerTime) (*GetManagerTimeResponse, error) {
	response := new(GetManagerTimeResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) UserDelete(request *UserDelete) (*UserDeleteResponse, error) {
	response := new(UserDeleteResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) UpdateComponents(request *UpdateComponents) (*UpdateComponentsResponse, error) {
	response := new(UpdateComponentsResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) PluginRequest(request *PluginRequest) (*PluginRequestResponse, error) {
	response := new(PluginRequestResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SoftwareStore(request *SoftwareStore) (*SoftwareStoreResponse, error) {
	response := new(SoftwareStoreResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerIntegrityConstraintException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) UserSave(request *UserSave) (*UserSaveResponse, error) {
	response := new(UserSaveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostGetEventsNow(request *HostGetEventsNow) (*HostGetEventsNowResponse, error) {
	response := new(HostGetEventsNowResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) UserRetrieveAll(request *UserRetrieveAll) (*UserRetrieveAllResponse, error) {
	response := new(UserRetrieveAllResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) DPIEventRetrieve(request *DPIEventRetrieve) (*DPIEventRetrieveResponse, error) {
	response := new(DPIEventRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerIntegrityConstraintException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostCreate(request *HostCreate) (*HostCreateResponse, error) {
	response := new(HostCreateResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SoftwareExport(request *SoftwareExport) (*SoftwareExportResponse, error) {
	response := new(SoftwareExportResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerIntegrityConstraintException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) MACListSave(request *MACListSave) (*MACListSaveResponse, error) {
	response := new(MACListSaveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostSettingGet(request *HostSettingGet) (*HostSettingGetResponse, error) {
	response := new(HostSettingGetResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) PortListRetrieve(request *PortListRetrieve) (*PortListRetrieveResponse, error) {
	response := new(PortListRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) MACListDelete(request *MACListDelete) (*MACListDeleteResponse, error) {
	response := new(MACListDeleteResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerException

func (service *Manager) GetApiVersion(request *GetApiVersion) (*GetApiVersionResponse, error) {
	response := new(GetApiVersionResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostDelete(request *HostDelete) (*HostDeleteResponse, error) {
	response := new(HostDeleteResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) CounterRetrieve(request *CounterRetrieve) (*CounterRetrieveResponse, error) {
	response := new(CounterRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostUpdateNow(request *HostUpdateNow) (*HostUpdateNowResponse, error) {
	response := new(HostUpdateNowResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SoftwareRetrieve(request *SoftwareRetrieve) (*SoftwareRetrieveResponse, error) {
	response := new(SoftwareRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) RetrieveActivationCode(request *RetrieveActivationCode) (*RetrieveActivationCodeResponse, error) {
	response := new(RetrieveActivationCodeResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) DPIRuleRetrieveAll(request *DPIRuleRetrieveAll) (*DPIRuleRetrieveAllResponse, error) {
	response := new(DPIRuleRetrieveAllResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) ApplicationTypeRetrieve(request *ApplicationTypeRetrieve) (*ApplicationTypeRetrieveResponse, error) {
	response := new(ApplicationTypeRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) ScheduleRetrieveByName(request *ScheduleRetrieveByName) (*ScheduleRetrieveByNameResponse, error) {
	response := new(ScheduleRetrieveByNameResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) ScanFileListRetrieveAll(request *ScanFileListRetrieveAll) (*ScanFileListRetrieveAllResponse, error) {
	response := new(ScanFileListRetrieveAllResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) IntegrityRuleDelete(request *IntegrityRuleDelete) (*IntegrityRuleDeleteResponse, error) {
	response := new(IntegrityRuleDeleteResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) FirewallRuleRetrieveByName(request *FirewallRuleRetrieveByName) (*FirewallRuleRetrieveByNameResponse, error) {
	response := new(FirewallRuleRetrieveByNameResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) MACListRetrieveByName(request *MACListRetrieveByName) (*MACListRetrieveByNameResponse, error) {
	response := new(MACListRetrieveByNameResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SecurityUpdateApply(request *SecurityUpdateApply) (*SecurityUpdateApplyResponse, error) {
	response := new(SecurityUpdateApplyResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) AntiMalwareRetrieveByName(request *AntiMalwareRetrieveByName) (*AntiMalwareRetrieveByNameResponse, error) {
	response := new(AntiMalwareRetrieveByNameResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SecurityUpdateRetrieveAll(request *SecurityUpdateRetrieveAll) (*SecurityUpdateRetrieveAllResponse, error) {
	response := new(SecurityUpdateRetrieveAllResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) LogInspectionRuleRetrieve(request *LogInspectionRuleRetrieve) (*LogInspectionRuleRetrieveResponse, error) {
	response := new(LogInspectionRuleRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) ScanDirectoryListDelete(request *ScanDirectoryListDelete) (*ScanDirectoryListDeleteResponse, error) {
	response := new(ScanDirectoryListDeleteResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SystemEventRetrieve2(request *SystemEventRetrieve2) (*SystemEventRetrieve2Response, error) {
	response := new(SystemEventRetrieve2Response)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SystemEventRetrieve(request *SystemEventRetrieve) (*SystemEventRetrieveResponse, error) {
	response := new(SystemEventRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerIntegrityConstraintException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SecurityProfileSettingSet(request *SecurityProfileSettingSet) (*SecurityProfileSettingSetResponse, error) {
	response := new(SecurityProfileSettingSetResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) DPIEventRetrieve2(request *DPIEventRetrieve2) (*DPIEventRetrieve2Response, error) {
	response := new(DPIEventRetrieve2Response)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) AntiMalwareDelete(request *AntiMalwareDelete) (*AntiMalwareDeleteResponse, error) {
	response := new(AntiMalwareDeleteResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) IntegrityRuleRetrieveByName(request *IntegrityRuleRetrieveByName) (*IntegrityRuleRetrieveByNameResponse, error) {
	response := new(IntegrityRuleRetrieveByNameResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostGetEventsNowSync(request *HostGetEventsNowSync) (*HostGetEventsNowSyncResponse, error) {
	response := new(HostGetEventsNowSyncResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) ScanFileExtListDelete(request *ScanFileExtListDelete) (*ScanFileExtListDeleteResponse, error) {
	response := new(ScanFileExtListDeleteResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) IntegrityRuleRetrieve(request *IntegrityRuleRetrieve) (*IntegrityRuleRetrieveResponse, error) {
	response := new(IntegrityRuleRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostAntiMalwareScan(request *HostAntiMalwareScan) (*HostAntiMalwareScanResponse, error) {
	response := new(HostAntiMalwareScanResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostGroupRetrieveAll(request *HostGroupRetrieveAll) (*HostGroupRetrieveAllResponse, error) {
	response := new(HostGroupRetrieveAllResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) FirewallRuleRetrieveAll(request *FirewallRuleRetrieveAll) (*FirewallRuleRetrieveAllResponse, error) {
	response := new(FirewallRuleRetrieveAllResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) LogInspectionRuleRetrieveByName(request *LogInspectionRuleRetrieveByName) (*LogInspectionRuleRetrieveByNameResponse, error) {
	response := new(LogInspectionRuleRetrieveByNameResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerIntegrityConstraintException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) StatefulConfigurationSave(request *StatefulConfigurationSave) (*StatefulConfigurationSaveResponse, error) {
	response := new(StatefulConfigurationSaveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SecurityProfileRetrieveByName(request *SecurityProfileRetrieveByName) (*SecurityProfileRetrieveByNameResponse, error) {
	response := new(SecurityProfileRetrieveByNameResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostRebuildBaseline(request *HostRebuildBaseline) (*HostRebuildBaselineResponse, error) {
	response := new(HostRebuildBaselineResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerIntegrityConstraintException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SecurityProfileSave(request *SecurityProfileSave) (*SecurityProfileSaveResponse, error) {
	response := new(SecurityProfileSaveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerIntegrityConstraintException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) ScanDirectoryListSave(request *ScanDirectoryListSave) (*ScanDirectoryListSaveResponse, error) {
	response := new(ScanDirectoryListSaveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SecurityUpdateRetrieve(request *SecurityUpdateRetrieve) (*SecurityUpdateRetrieveResponse, error) {
	response := new(SecurityUpdateRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostAgentActivate(request *HostAgentActivate) (*HostAgentActivateResponse, error) {
	response := new(HostAgentActivateResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) ScheduleRetrieveAll(request *ScheduleRetrieveAll) (*ScheduleRetrieveAllResponse, error) {
	response := new(ScheduleRetrieveAllResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SecurityUpdateExport(request *SecurityUpdateExport) (*SecurityUpdateExportResponse, error) {
	response := new(SecurityUpdateExportResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) ScanFileExtListRetrieveAll(request *ScanFileExtListRetrieveAll) (*ScanFileExtListRetrieveAllResponse, error) {
	response := new(ScanFileExtListRetrieveAllResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) FirewallEventRetrieve(request *FirewallEventRetrieve) (*FirewallEventRetrieveResponse, error) {
	response := new(FirewallEventRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) FirewallEventRetrieve2(request *FirewallEventRetrieve2) (*FirewallEventRetrieve2Response, error) {
	response := new(FirewallEventRetrieve2Response)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostAgentDeactivate(request *HostAgentDeactivate) (*HostAgentDeactivateResponse, error) {
	response := new(HostAgentDeactivateResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) UpdateComponentFromAU(request *UpdateComponentFromAU) (*UpdateComponentFromAUResponse, error) {
	response := new(UpdateComponentFromAUResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) FeatureSummaryRetrieve(request *FeatureSummaryRetrieve) (*FeatureSummaryRetrieveResponse, error) {
	response := new(FeatureSummaryRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SystemInformationRetrieve(request *SystemInformationRetrieve) (*SystemInformationRetrieveResponse, error) {
	response := new(SystemInformationRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) AddActivationCode(request *AddActivationCode) (*AddActivationCodeResponse, error) {
	response := new(AddActivationCodeResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) AlertStatusRetrieve(request *AlertStatusRetrieve) (*AlertStatusRetrieveResponse, error) {
	response := new(AlertStatusRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) ScanDirectoryListRetrieveAll(request *ScanDirectoryListRetrieveAll) (*ScanDirectoryListRetrieveAllResponse, error) {
	response := new(ScanDirectoryListRetrieveAllResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) LogInspectionDecoderRetrieve(request *LogInspectionDecoderRetrieve) (*LogInspectionDecoderRetrieveResponse, error) {
	response := new(LogInspectionDecoderRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerIntegrityConstraintException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SecurityProfileSettingClear(request *SecurityProfileSettingClear) (*SecurityProfileSettingClearResponse, error) {
	response := new(SecurityProfileSettingClearResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) IPListRetrieveAll(request *IPListRetrieveAll) (*IPListRetrieveAllResponse, error) {
	response := new(IPListRetrieveAllResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerIntegrityConstraintException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostSecurityProfileClear(request *HostSecurityProfileClear) (*HostSecurityProfileClearResponse, error) {
	response := new(HostSecurityProfileClearResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerIntegrityConstraintException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) ApplicationTypeOverrideSave(request *ApplicationTypeOverrideSave) (*ApplicationTypeOverrideSaveResponse, error) {
	response := new(ApplicationTypeOverrideSaveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostClearWarningsErrors(request *HostClearWarningsErrors) (*HostClearWarningsErrorsResponse, error) {
	response := new(HostClearWarningsErrorsResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) IntegrityRuleRetrieveAll(request *IntegrityRuleRetrieveAll) (*IntegrityRuleRetrieveAllResponse, error) {
	response := new(IntegrityRuleRetrieveAllResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) LogInspectionRuleRetrieveAll(request *LogInspectionRuleRetrieveAll) (*LogInspectionRuleRetrieveAllResponse, error) {
	response := new(LogInspectionRuleRetrieveAllResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) DPIRuleRetrieveByName(request *DPIRuleRetrieveByName) (*DPIRuleRetrieveByNameResponse, error) {
	response := new(DPIRuleRetrieveByNameResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) CounterWithIDRetrieve(request *CounterWithIDRetrieve) (*CounterWithIDRetrieveResponse, error) {
	response := new(CounterWithIDRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostDetailRetrieveByName(request *HostDetailRetrieveByName) (*HostDetailRetrieveByNameResponse, error) {
	response := new(HostDetailRetrieveByNameResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SecurityProfileRetrieve(request *SecurityProfileRetrieve) (*SecurityProfileRetrieveResponse, error) {
	response := new(SecurityProfileRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) RetrieveLicenseProfile(request *RetrieveLicenseProfile) (*RetrieveLicenseProfileResponse, error) {
	response := new(RetrieveLicenseProfileResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) ApplicationTypeDelete(request *ApplicationTypeDelete) (*ApplicationTypeDeleteResponse, error) {
	response := new(ApplicationTypeDeleteResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) ScanFileExtListRetrieve(request *ScanFileExtListRetrieve) (*ScanFileExtListRetrieveResponse, error) {
	response := new(ScanFileExtListRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) CounterSumRetrieve(request *CounterSumRetrieve) (*CounterSumRetrieveResponse, error) {
	response := new(CounterSumRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) IPListRetrieveByName(request *IPListRetrieveByName) (*IPListRetrieveByNameResponse, error) {
	response := new(IPListRetrieveByNameResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) UserRetrieveByName(request *UserRetrieveByName) (*UserRetrieveByNameResponse, error) {
	response := new(UserRetrieveByNameResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SoftwareApplyToHosts(request *SoftwareApplyToHosts) (*SoftwareApplyToHostsResponse, error) {
	response := new(SoftwareApplyToHostsResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostGroupRetrieveByName(request *HostGroupRetrieveByName) (*HostGroupRetrieveByNameResponse, error) {
	response := new(HostGroupRetrieveByNameResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostDetailRetrieve(request *HostDetailRetrieve) (*HostDetailRetrieveResponse, error) {
	response := new(HostDetailRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerIntegrityConstraintException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostMoveToHostGroup(request *HostMoveToHostGroup) (*HostMoveToHostGroupResponse, error) {
	response := new(HostMoveToHostGroupResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerIntegrityConstraintException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) ScanFileExtListSave(request *ScanFileExtListSave) (*ScanFileExtListSaveResponse, error) {
	response := new(ScanFileExtListSaveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostRollbackComponent(request *HostRollbackComponent) (*HostRollbackComponentResponse, error) {
	response := new(HostRollbackComponentResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) PortListRetrieveAll(request *PortListRetrieveAll) (*PortListRetrieveAllResponse, error) {
	response := new(PortListRetrieveAllResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) StatefulConfigurationRetrieveAll(request *StatefulConfigurationRetrieveAll) (*StatefulConfigurationRetrieveAllResponse, error) {
	response := new(StatefulConfigurationRetrieveAllResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) LogInspectionDecoderDelete(request *LogInspectionDecoderDelete) (*LogInspectionDecoderDeleteResponse, error) {
	response := new(LogInspectionDecoderDeleteResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerException

func (service *Manager) ApplicationTypeOverrideRetrieve(request *ApplicationTypeOverrideRetrieve) (*ApplicationTypeOverrideRetrieveResponse, error) {
	response := new(ApplicationTypeOverrideRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostUpdateComponent(request *HostUpdateComponent) (*HostUpdateComponentResponse, error) {
	response := new(HostUpdateComponentResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) ScanFileListRetrieveByName(request *ScanFileListRetrieveByName) (*ScanFileListRetrieveByNameResponse, error) {
	response := new(ScanFileListRetrieveByNameResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SecurityUpdateDelete(request *SecurityUpdateDelete) (*SecurityUpdateDeleteResponse, error) {
	response := new(SecurityUpdateDeleteResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) AntiMalwareRetrieveAll(request *AntiMalwareRetrieveAll) (*AntiMalwareRetrieveAllResponse, error) {
	response := new(AntiMalwareRetrieveAllResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) ApplicationTypeOverrideDelete(request *ApplicationTypeOverrideDelete) (*ApplicationTypeOverrideDeleteResponse, error) {
	response := new(ApplicationTypeOverrideDeleteResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostRecommendationsResolve(request *HostRecommendationsResolve) (*HostRecommendationsResolveResponse, error) {
	response := new(HostRecommendationsResolveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SoftwareRetrieveForHost(request *SoftwareRetrieveForHost) (*SoftwareRetrieveForHostResponse, error) {
	response := new(SoftwareRetrieveForHostResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) StatusSummaryRetrieve(request *StatusSummaryRetrieve) (*StatusSummaryRetrieveResponse, error) {
	response := new(StatusSummaryRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerIntegrityConstraintException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SecurityProfileAssignToHost(request *SecurityProfileAssignToHost) (*SecurityProfileAssignToHostResponse, error) {
	response := new(SecurityProfileAssignToHostResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) LogInspectionEventRetrieve(request *LogInspectionEventRetrieve) (*LogInspectionEventRetrieveResponse, error) {
	response := new(LogInspectionEventRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) LogInspectionEventRetrieve2(request *LogInspectionEventRetrieve2) (*LogInspectionEventRetrieve2Response, error) {
	response := new(LogInspectionEventRetrieve2Response)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) ScanDirectoryListRetrieve(request *ScanDirectoryListRetrieve) (*ScanDirectoryListRetrieveResponse, error) {
	response := new(ScanDirectoryListRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerIntegrityConstraintException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) LogInspectionRuleSave(request *LogInspectionRuleSave) (*LogInspectionRuleSaveResponse, error) {
	response := new(LogInspectionRuleSaveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) LogInspectionDecoderRetrieveAll(request *LogInspectionDecoderRetrieveAll) (*LogInspectionDecoderRetrieveAllResponse, error) {
	response := new(LogInspectionDecoderRetrieveAllResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerIntegrityConstraintException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) ApplicationTypeSave(request *ApplicationTypeSave) (*ApplicationTypeSaveResponse, error) {
	response := new(ApplicationTypeSaveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) ApplicationTypeRetrieveByName(request *ApplicationTypeRetrieveByName) (*ApplicationTypeRetrieveByNameResponse, error) {
	response := new(ApplicationTypeRetrieveByNameResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) PortListRetrieveByName(request *PortListRetrieveByName) (*PortListRetrieveByNameResponse, error) {
	response := new(PortListRetrieveByNameResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) ScanDirectoryListRetrieveByName(request *ScanDirectoryListRetrieveByName) (*ScanDirectoryListRetrieveByNameResponse, error) {
	response := new(ScanDirectoryListRetrieveByNameResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) ScanFileExtListRetrieveByName(request *ScanFileExtListRetrieveByName) (*ScanFileExtListRetrieveByNameResponse, error) {
	response := new(ScanFileExtListRetrieveByNameResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) ScanFileListRetrieve(request *ScanFileListRetrieve) (*ScanFileListRetrieveResponse, error) {
	response := new(ScanFileListRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) FirewallRuleDelete(request *FirewallRuleDelete) (*FirewallRuleDeleteResponse, error) {
	response := new(FirewallRuleDeleteResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostIntegrityScan(request *HostIntegrityScan) (*HostIntegrityScanResponse, error) {
	response := new(HostIntegrityScanResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SecurityUpdateStore(request *SecurityUpdateStore) (*SecurityUpdateStoreResponse, error) {
	response := new(SecurityUpdateStoreResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) AntiMalwareRetrieve(request *AntiMalwareRetrieve) (*AntiMalwareRetrieveResponse, error) {
	response := new(AntiMalwareRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostGroupRetrieve(request *HostGroupRetrieve) (*HostGroupRetrieveResponse, error) {
	response := new(HostGroupRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostRetrieveByHostGroup(request *HostRetrieveByHostGroup) (*HostRetrieveByHostGroupResponse, error) {
	response := new(HostRetrieveByHostGroupResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) CounterAlertTypeRetrieve(request *CounterAlertTypeRetrieve) (*CounterAlertTypeRetrieveResponse, error) {
	response := new(CounterAlertTypeRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) ScanFileListDelete(request *ScanFileListDelete) (*ScanFileListDeleteResponse, error) {
	response := new(ScanFileListDeleteResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) StatefulConfigurationRetrieve(request *StatefulConfigurationRetrieve) (*StatefulConfigurationRetrieveResponse, error) {
	response := new(StatefulConfigurationRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) ApplicationTypeRetrieveAll(request *ApplicationTypeRetrieveAll) (*ApplicationTypeRetrieveAllResponse, error) {
	response := new(ApplicationTypeRetrieveAllResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) FirewallRuleRetrieve(request *FirewallRuleRetrieve) (*FirewallRuleRetrieveResponse, error) {
	response := new(FirewallRuleRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) LogInspectionRuleDelete(request *LogInspectionRuleDelete) (*LogInspectionRuleDeleteResponse, error) {
	response := new(LogInspectionRuleDeleteResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerIntegrityConstraintException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) IntegrityRuleSave(request *IntegrityRuleSave) (*IntegrityRuleSaveResponse, error) {
	response := new(IntegrityRuleSaveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) AntiMalwareEventRetrieve(request *AntiMalwareEventRetrieve) (*AntiMalwareEventRetrieveResponse, error) {
	response := new(AntiMalwareEventRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) AntiMalwareEventRetrieve2(request *AntiMalwareEventRetrieve2) (*AntiMalwareEventRetrieve2Response, error) {
	response := new(AntiMalwareEventRetrieve2Response)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) CounterHostRetrieve(request *CounterHostRetrieve) (*CounterHostRetrieveResponse, error) {
	response := new(CounterHostRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) ComponentSummaryRetrieve(request *ComponentSummaryRetrieve) (*ComponentSummaryRetrieveResponse, error) {
	response := new(ComponentSummaryRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SoftwareRetrieveAll(request *SoftwareRetrieveAll) (*SoftwareRetrieveAllResponse, error) {
	response := new(SoftwareRetrieveAllResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) WebReputationEventRetrieve(request *WebReputationEventRetrieve) (*WebReputationEventRetrieveResponse, error) {
	response := new(WebReputationEventRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) WebReputationEventRetrieve2(request *WebReputationEventRetrieve2) (*WebReputationEventRetrieve2Response, error) {
	response := new(WebReputationEventRetrieve2Response)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostRetrieveByName(request *HostRetrieveByName) (*HostRetrieveByNameResponse, error) {
	response := new(HostRetrieveByNameResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostStatusSummaryRetrieve(request *HostStatusSummaryRetrieve) (*HostStatusSummaryRetrieveResponse, error) {
	response := new(HostStatusSummaryRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) StatefulConfigurationDelete(request *StatefulConfigurationDelete) (*StatefulConfigurationDeleteResponse, error) {
	response := new(StatefulConfigurationDeleteResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SoftwareVersionStringsCompare(request *SoftwareVersionStringsCompare) (*SoftwareVersionStringsCompareResponse, error) {
	response := new(SoftwareVersionStringsCompareResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostDetailRetrieveByExternal(request *HostDetailRetrieveByExternal) (*HostDetailRetrieveByExternalResponse, error) {
	response := new(HostDetailRetrieveByExternalResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostRecommendationsClear(request *HostRecommendationsClear) (*HostRecommendationsClearResponse, error) {
	response := new(HostRecommendationsClearResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerIntegrityConstraintException
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) LogInspectionDecoderSave(request *LogInspectionDecoderSave) (*LogInspectionDecoderSaveResponse, error) {
	response := new(LogInspectionDecoderSaveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerAuthorizationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SecurityProfileDelete(request *SecurityProfileDelete) (*SecurityProfileDeleteResponse, error) {
	response := new(SecurityProfileDeleteResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SecurityProfileSettingGet(request *SecurityProfileSettingGet) (*SecurityProfileSettingGetResponse, error) {
	response := new(SecurityProfileSettingGetResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) MACListRetrieveAll(request *MACListRetrieveAll) (*MACListRetrieveAllResponse, error) {
	response := new(MACListRetrieveAllResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) IntegrityEventRetrieve(request *IntegrityEventRetrieve) (*IntegrityEventRetrieveResponse, error) {
	response := new(IntegrityEventRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) IntegrityEventRetrieve2(request *IntegrityEventRetrieve2) (*IntegrityEventRetrieve2Response, error) {
	response := new(IntegrityEventRetrieve2Response)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) SecurityProfileRetrieveAll(request *SecurityProfileRetrieveAll) (*SecurityProfileRetrieveAllResponse, error) {
	response := new(SecurityProfileRetrieveAllResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerValidationException
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) HostRecommendationScan(request *HostRecommendationScan) (*HostRecommendationScanResponse, error) {
	response := new(HostRecommendationScanResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerSecurityException
//   - ManagerAuthenticationException
//   - ManagerLockoutException
//   - ManagerMaxSessionsException
//   - ManagerException
//   - ManagerCommunicationException

func (service *Manager) AuthenticateTenant(request *AuthenticateTenant) (*AuthenticateTenantResponse, error) {
	response := new(AuthenticateTenantResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ManagerAuthenticationException
//   - ManagerException
//   - ManagerTimeoutException

func (service *Manager) DPIRuleDependenciesRetrieve(request *DPIRuleDependenciesRetrieve) (*DPIRuleDependenciesRetrieveResponse, error) {
	response := new(DPIRuleDependenciesRetrieveResponse)
	err := service.client.Call("", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

var timeout = time.Duration(30 * time.Second)

func dialTimeout(network, addr string) (net.Conn, error) {
	return net.DialTimeout(network, addr, timeout)
}

type SOAPEnvelope struct {
	XMLName xml.Name `xml:"http://schemas.xmlsoap.org/soap/envelope/ Envelope"`
	Header  *SOAPHeader
	Body    SOAPBody
}

type SOAPHeader struct {
	XMLName xml.Name `xml:"http://schemas.xmlsoap.org/soap/envelope/ Header"`

	Items []interface{} `xml:",omitempty"`
}

type SOAPBody struct {
	XMLName xml.Name `xml:"http://schemas.xmlsoap.org/soap/envelope/ Body"`

	Fault   *SOAPFault  `xml:",omitempty"`
	Content interface{} `xml:",omitempty"`
}

type SOAPFault struct {
	XMLName xml.Name `xml:"http://schemas.xmlsoap.org/soap/envelope/ Fault"`

	Code   string `xml:"faultcode,omitempty"`
	String string `xml:"faultstring,omitempty"`
	Actor  string `xml:"faultactor,omitempty"`
	Detail string `xml:"detail,omitempty"`
}

const (
	// Predefined WSS namespaces to be used in
	WssNsWSSE string = "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"
	WssNsWSU  string = "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"
	WssNsType string = "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"
)

type WSSSecurityHeader struct {
	XMLName   xml.Name `xml:"http://schemas.xmlsoap.org/soap/envelope/ wsse:Security"`
	XmlNSWsse string   `xml:"xmlns:wsse,attr"`

	MustUnderstand string `xml:"mustUnderstand,attr,omitempty"`

	Token *WSSUsernameToken `xml:",omitempty"`
}

type WSSUsernameToken struct {
	XMLName   xml.Name `xml:"wsse:UsernameToken"`
	XmlNSWsu  string   `xml:"xmlns:wsu,attr"`
	XmlNSWsse string   `xml:"xmlns:wsse,attr"`

	Id string `xml:"wsu:Id,attr,omitempty"`

	Username *WSSUsername `xml:",omitempty"`
	Password *WSSPassword `xml:",omitempty"`
}

type WSSUsername struct {
	XMLName   xml.Name `xml:"wsse:Username"`
	XmlNSWsse string   `xml:"xmlns:wsse,attr"`

	Data string `xml:",chardata"`
}

type WSSPassword struct {
	XMLName   xml.Name `xml:"wsse:Password"`
	XmlNSWsse string   `xml:"xmlns:wsse,attr"`
	XmlNSType string   `xml:"Type,attr"`

	Data string `xml:",chardata"`
}

type BasicAuth struct {
	Login    string
	Password string
}

type SOAPClient struct {
	url     string
	tlsCfg  *tls.Config
	auth    *BasicAuth
	headers []interface{}
}

// **********
// Accepted solution from http://stackoverflow.com/questions/22892120/how-to-generate-a-random-string-of-a-fixed-length-in-golang
// Author: Icza - http://stackoverflow.com/users/1705598/icza

const (
	letterBytes   = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
	letterIdxBits = 6                    // 6 bits to represent a letter index
	letterIdxMask = 1<<letterIdxBits - 1 // All 1-bits, as many as letterIdxBits
	letterIdxMax  = 63 / letterIdxBits   // # of letter indices fitting in 63 bits
)

func randStringBytesMaskImprSrc(n int) string {
	src := rand.NewSource(time.Now().UnixNano())
	b := make([]byte, n)
	// A src.Int63() generates 63 random bits, enough for letterIdxMax characters!
	for i, cache, remain := n-1, src.Int63(), letterIdxMax; i >= 0; {
		if remain == 0 {
			cache, remain = src.Int63(), letterIdxMax
		}
		if idx := int(cache & letterIdxMask); idx < len(letterBytes) {
			b[i] = letterBytes[idx]
			i--
		}
		cache >>= letterIdxBits
		remain--
	}
	return string(b)
}

// **********

func NewWSSSecurityHeader(user, pass, mustUnderstand string) *WSSSecurityHeader {
	hdr := &WSSSecurityHeader{XmlNSWsse: WssNsWSSE, MustUnderstand: mustUnderstand}
	hdr.Token = &WSSUsernameToken{XmlNSWsu: WssNsWSU, XmlNSWsse: WssNsWSSE, Id: "UsernameToken-" + randStringBytesMaskImprSrc(9)}
	hdr.Token.Username = &WSSUsername{XmlNSWsse: WssNsWSSE, Data: user}
	hdr.Token.Password = &WSSPassword{XmlNSWsse: WssNsWSSE, XmlNSType: WssNsType, Data: pass}
	return hdr
}

func (b *SOAPBody) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	if b.Content == nil {
		return xml.UnmarshalError("Content must be a pointer to a struct")
	}

	var (
		token    xml.Token
		err      error
		consumed bool
	)

Loop:
	for {
		if token, err = d.Token(); err != nil {
			return err
		}

		if token == nil {
			break
		}

		switch se := token.(type) {
		case xml.StartElement:
			if consumed {
				return xml.UnmarshalError("Found multiple elements inside SOAP body; not wrapped-document/literal WS-I compliant")
			} else if se.Name.Space == "http://schemas.xmlsoap.org/soap/envelope/" && se.Name.Local == "Fault" {
				b.Fault = &SOAPFault{}
				b.Content = nil

				err = d.DecodeElement(b.Fault, &se)
				if err != nil {
					return err
				}

				consumed = true
			} else {
				if err = d.DecodeElement(b.Content, &se); err != nil {
					return err
				}

				consumed = true
			}
		case xml.EndElement:
			break Loop
		}
	}

	return nil
}

func (f *SOAPFault) Error() string {
	return f.String
}

func NewSOAPClient(url string, insecureSkipVerify bool, auth *BasicAuth) *SOAPClient {
	tlsCfg := &tls.Config{
		InsecureSkipVerify: insecureSkipVerify,
	}
	return NewSOAPClientWithTLSConfig(url, tlsCfg, auth)
}

func NewSOAPClientWithTLSConfig(url string, tlsCfg *tls.Config, auth *BasicAuth) *SOAPClient {
	return &SOAPClient{
		url:    url,
		tlsCfg: tlsCfg,
		auth:   auth,
	}
}

func (s *SOAPClient) AddHeader(header interface{}) {
	s.headers = append(s.headers, header)
}

func (s *SOAPClient) Call(soapAction string, request, response interface{}) error {
	envelope := SOAPEnvelope{}

	if s.headers != nil && len(s.headers) > 0 {
		soapHeader := &SOAPHeader{Items: make([]interface{}, len(s.headers))}
		copy(soapHeader.Items, s.headers)
		envelope.Header = soapHeader
	}

	envelope.Body.Content = request
	buffer := new(bytes.Buffer)

	encoder := xml.NewEncoder(buffer)
	//encoder.Indent("  ", "    ")

	if err := encoder.Encode(envelope); err != nil {
		return err
	}

	if err := encoder.Flush(); err != nil {
		return err
	}

	//log.Println(buffer.String())

	req, err := http.NewRequest("POST", s.url, buffer)
	if err != nil {
		return err
	}
	if s.auth != nil {
		req.SetBasicAuth(s.auth.Login, s.auth.Password)
	}

	req.Header.Add("Content-Type", "text/xml; charset=\"utf-8\"")
	req.Header.Add("SOAPAction", soapAction)

	req.Header.Set("User-Agent", "gowsdl/0.1")
	req.Close = true

	tr := &http.Transport{
		TLSClientConfig: s.tlsCfg,
		Dial:            dialTimeout,
	}

	client := &http.Client{Transport: tr}
	res, err := client.Do(req)
	if err != nil {
		return err
	}
	defer res.Body.Close()

	rawbody, err := ioutil.ReadAll(res.Body)
	if err != nil {
		return err
	}
	if len(rawbody) == 0 {
		log.Println("empty response")
		return nil
	}


	//fmt.Println(request)
	//fmt.Println("PRINTING RAW BODY")
	//log.Println(string(rawbody))
	respEnvelope := new(SOAPEnvelope)
	//fmt.Println(respEnvelope)
	//fmt.Println(string(rawbody))
	respEnvelope.Body = SOAPBody{Content: response}
	err = xml.Unmarshal(rawbody, respEnvelope)
	if err != nil {
		fmt.Println("in error", err)
		return err
	}

	fault := respEnvelope.Body.Fault
	if fault != nil {
		return fault
	}

	return nil
}
